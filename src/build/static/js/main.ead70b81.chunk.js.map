{"version":3,"sources":["components/NavBar/NavBar.style.js","components/Content/Misc/Timestamp.scripts.js","components/Content/GameContent/GameTables/GameTables.scripts.js","App.scripts.js","components/NavBar.js","components/NavBar/NavBar.scripts.js","components/Content/SideNav/SubSideNav/SubSideNav.js","components/Content/SideNav/SubSideNav/SubSideNav.scripts.js","components/Content/SideNav/SideNavItem/SideNavItem.style.js","components/Content/SideNav/SideNavItem/SideNavItem.js","components/Content/SideNav/SideNavItem/SideNavItem.scripts.js","components/Content/SideNav/SideNav.scripts.js","components/Content/SideNav/SideNav.style.js","components/Content/Misc/ToggleSwitch/ToggleSwitch.js","components/Content/SideNav/SideNav.js","components/Content/GameContent/Table/Table.style.js","components/Content/GameContent/Table/Table.js","components/Content/GameContent/GameTables/GameTables.js","components/Content/GameContent/GameScreen/OvalTable/BiddingKeyboard/BiddingKeyboard.js","components/Content/GameContent/GameScreen/OvalTable/OvalTable.js","components/Content/GameContent/GameScreen/GameScreenCards/GameScreenCards.js","components/Content/GameContent/GameScreen/GameSummary/GameSummary.js","components/Content/GameContent/GameScreen/GameScreen.js","components/Content/Content.style.js","components/Content.js","components/Content/Content.scripts.js","components/Popups/GameDetailsPopup/ChairPopup.js","components/Popups/GameDetailsPopup/GameDetailsPopup.scripts.js","components/Content/GameContent/GameScreen/GameScreen.scripts.js","components/Popups/GameDetailsPopup.js","components/Popups/ConfirmationPopup.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","styled","div","props","background","NavBarButton","span","NavBarLogo","NavBarText","fontColor","NavBarMatchDetails","NavBarIcon","bg","currentTimestamp","newTimestamp","sortTables","tableJson","setTableContent","Object","keys","map","item","flag","i","length","parseInt","Name","split","temp","setTimeout","window","dispatchEvent","Event","flagTS","userId","csrf","tries","prevCommand1","prevCommand2","prevCommand3","matchId","refreshCallsArray","getTimestamp","states","fetch","then","response","json","data","console","log","commandCalls","CurrentPage","document","getElementById","style","display","catch","err","warn","commandArray","asyncCall","e","a","processCommandJsonGenerator","result","setProcessCommandValues","values","LastRefreshTimestamp","shift","command","ProcessCommandValues","MatchID","processCommandJson","GroupID","AllowedHelpLevel","MaxPlay","NumberOfPlayers","GameRules","PlayerLevel","EnforceFollowSuit","ShowGamePoints","ShowRemainingPoints","EnableAllPass","PublicMatch","ChairNo","MyMatch","MyBid","MyCardID","Promise","resolve","reject","method","headers","body","JSON","stringify","text","parse","Control","UserID","CSRF","returnCode","setCurrentPage","CurrentPageTS","moveToGameScreen","menuJson","Menu","forEach","push","setSideNavItems","HomeTiles","setPossibleValues","Output","matchID","setCardDeck","CardDeck","setMatchState","MatchState","RefreshCalls","RefreshCallsArray","MinimumWaitSeconds","setMatchScoreboard","ScoreBoard","innerHTML","opacity","moveToHomepage","setBiddingKeyboardValues","Keyboard","setCurrentPlayerHand","CurrentPlayerHand","setDiscardCards","DiscardCards","location","href","error","processCommandAPI","height","lastChild","firstChild","stringToSuit","id","Array","from","childNodes","removeProperty","innerText","backgroundImage","color","checkBidTitle","getElementsByClassName","checkPlaceBid","bidValues","item1","item2","NavBar","theme","handlers","NavBarBackground","onClick","selectedBackground","scrollBarWidth","offsetWidth","clientWidth","width","classList","remove","containerWidth","handCards","add","backgroundColor","boxShadow","marginLeft","sideNavOpenClose","NavBarButtonBackgroundSelected","NavBarFontColor","arrDisableButtons","MatchAdmin","adminChair","Chairs","parentNode","pointerEvents","infoIconHandler","SubSideNavigation","SubSideNavItem","SubSideNav","subSideNavJson","SubSideNavBackground","SubSideNavFontColor","target","parentElement","previousSibling","child","subSideNavClick","replaceAll","SideNavItemLink","SideNavItemDrop","Arrow","SideNavItemDesc","SideNavItem","sideNavItemJson","className","toLowerCase","arrow","closest","node","transform","sideNavClick","SideNavFontColor","sideNavDetect","SideNavItems","sideNavJson","item_type","innerItem","parent_folder","item_name","SideNavigation","ToggleSwitchContainer","ToggleSwitchText","ToggleSwitch","handler","type","onChange","toggleSwitchHandler","SideNav","SideNavBackground","Tile","TileAdd","TileName","TilePlayers","TileDifficulty","TileStatus","Table","tile","groupID","BackGround","TileType","data-groupid","data-matchid","data-mymatch","gameTileClick","PublicTileBackground","PrivateTileBackground","bgSelect","TileFontColor","Players","Difficulty","Status","GameTablesContainer","TableGroup","TableGroupDesc","GameTables","TableContent","slice","itemSub","currentBid","BiddingKeyboardContainer","BiddingKeyboardButtons","BiddingKeyboardTitle","TitlePart","BiddingKeyboardAction","BidButton","BidAction","top","left","BiddingKeyboardButtonsSuits","BiddingKeyboardButtonsActions","BiddingKeyboardButtonsNumbers","BiddingKeyboard","bidButtonHandler","getAttribute","bidActionHandler","React","useEffect","BiddingKeyboardValues","actions","setAttribute","others","CompleteBid","myBid","MatchStatus","MessagePart1","MessagePart2","MessagePart3","suits","data-bidvalue","numbers","discardCardsLoc","OvalTableContainer","OvalTableNewGame","NewGameButton","Card","OvalTable","PlayerTurn","click","card","GameScreenCardsContainer","CardGroup","GameScreenCards","suit","marginBottom","cardSelected","cardClickHandler","data-card","GameScreenBox2","GameScreenBoxHeading","GameScreenBoxContent","GameToStart","BiddingInProgress","BiddingInProgressTitle","BiddingInProgressValueTitle","BiddingInProgressValue","BiddingInProgressPart","GameInProgress","GameTitle","BidWonDetails","BidWonDesc","BidWonValue","BidWonValuePart","FirstDoubled","FirstRedoubled","GamePointsDetails","GamePointsPart","RemainingPointsDetails","GameCompleted","MatchPointsDetails","GameSummary","MatchScoreboard","GameStatus","CurrentHighestBidTeam","undefined","CurrentHighestBidPlayer","CurrentHighestBid","FinalBidWinningTeam","FinalBidWinningPlayer","FinalBidTrump","FinalBidValue","TeamAGamePoints","TeamBGamePoints","RemainingPoints","FinalBidDoubledTeam","FinalBidDoubledPlayer","FinalBidRedoubledTeam","FinalBidRedoubledPlayer","MatchPointsAddedToTeam","MatchPointsAdded","GameScreenContainer","GameScreenMain","GameScreenTable","TrickStarterFlag","GameScreenDetails","GameScreenBox1","GameScreenBox1Line","GameScreenBox1LineItem","ChairUser","input","ChairOthers","right","ChairNum","ChairName","LastBid","LastBidPart","GameScreen","getComputedStyle","toString","TableNo","MatchGamesPoints","data-playerturn","TrickStarter","PlayerName","GameChairs","Details","Location","TeamAMatchPoints","TeamBMatchPoints","Area","GameContent","AdContent","interval","Content","initialize","addEventListener","setInterval","adsbygoogle","clearInterval","async","src","data-ad-client","data-ad-slot","data-full-width-responsive","GameDetailsTableItem","TableItem","ChairIcon","ChairNumber","TableItemButton","ChairPopup","chairInfo","actionGameDetailsPopup","initializeOptions","popupType","PossibleValues","Defaults","value","maxGamesEvent","refreshType","maxGames","players","initializeMaxGames","ListOfValues","item3","option","createElement","chairLoc","pushChairsToState","chairDetails","setGameChairs","GameDetailsContainer","GameDetailsContainerWrapper","GameDetailsHeader","GameDetailsTitle","GameDetailsIcons","GameDetailsAdmin","Icon","GameDetailsContent","GameDetailsSheet1","GameDetailsItem","GameDetailsLabel","GameDetailsSelect","select","GameDetailsSheet2","GameDetailsTable","GameDetailsTableHeading","TableHeadingItem","GameDetailsFooter","GameDetailsFooterButton","float","GameDetailsPopup","detailsTableItemClick","textContent","querySelectorAll","userName","chairNo","GameDetailsPopupEnd","Math","random","currentChair","chairs","closeGameDetailsPopup","alert","gameDetailsIconHandler","PopupChairs","ConfirmationContainer","PopupMessage","PopupAction","PopupButton","ConfirmationPopup","popupClick","indexOf","clickedTileType","flagAdminMSPopup","Container","Popups","App","useState","PopupOptions","setPopupOptions","setPopupChairs","lightTheme","darkTheme","Theme","setTheme","MatchIDTS","GameDetailsPopupSave","contains","chairsMatchState","sortChairsMatchState","arrDisableItems","removeAttribute","ContainerBackground","arrDisable","saveIconGameDetails","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ead70b81.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Navigation = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    // background-color: black;\r\n    background-color: ${props => props.background};\r\n    height: 60px;\r\n    width: 100%;\r\n    color: white;\r\n    // padding: 9px 9px 9px 15px;\r\n`\r\n\r\nexport const NavBarButton = styled.span`\r\n    color: gray;\r\n    // font-size: 6rem;\r\n    font-size: 24px;\r\n    padding: 4px 7px 4px 7px;\r\n    margin-left: 15px;\r\n    border: 1px solid white;\r\n    transition: 0.3s;\r\n    cursor: pointer;\r\n`\r\n\r\nexport const NavBarLogo = styled.div`\r\n    background-image: url(others/logo.png);\r\n    height: 100%;\r\n    width: 45px;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: center;\r\n    margin: 0px 10px 0px 10px;\r\n`\r\n\r\nexport const NavBarText = styled.span`\r\n    // font-size: 6rem;\r\n\r\n    @media (max-width: 480px) {\r\n        font-size: 20px;\r\n    }\r\n    @media (min-width: 481px) {\r\n        font-size: 24px;\r\n    }\r\n\r\n\r\n    // font-size: 24px;\r\n    color: ${props => props.fontColor};\r\n`\r\n\r\nexport const NavBarMatchDetails = styled.div`\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    margin-right: 50px;\r\n    position: absolute;\r\n    right: 0;\r\n    display: none;\r\n`\r\n\r\nexport const NavBarIcon = styled.div`\r\nheight: 45px;\r\nwidth: 45px;\r\nposition: absolute;\r\n// background-color: red;\r\ndisplay: none;\r\ncursor: pointer;\r\n\r\nbackground: url(${props => props.bg});\r\nbackground-size: 50%;\r\nbackground-repeat: no-repeat;\r\nbackground-position: center;\r\nbackground-color: lightgray;\r\nborder-radius: 50%;\r\n`\r\n","import React from 'react';\r\nimport {sortTables} from '../GameContent/GameTables/GameTables.scripts'\r\nimport { moveToHomepage, moveToGameScreen } from '../../../App.scripts'\r\n\r\n\r\nvar refreshUrl = 'https://www.56cardgameonline.com/56game/get_tables.php';\r\nvar timestampUrl = 'https://www.56cardgameonline.com/newdesign/api/get_timestamp.php';\r\n\r\n// var currentTimestamp = getTimestamp(timestampUrl);\r\nvar currentTimestamp;\r\nvar newTimestamp;\r\nvar flagTS = 0;\r\n\r\nvar userId = \"\";\r\nvar csrf = \"\";\r\nvar returnCode;\r\nvar tries = 0;\r\nvar prevCommand1 = \"\";\r\nvar prevCommand2 = \"\";\r\nvar prevCommand3 = \"\";\r\n\r\nvar matchId =\"\";\r\nvar interval;\r\nvar refreshCallsArray = [];\r\n// test code start\r\n\r\nexport const startGetTimestampLoop = (states) => {\r\n\r\n    interval = setInterval(() => {\r\n\r\n        // getTimestamp(states);\r\n        // console.log('getTimestamp call')\r\n     \r\n    }, 1.5 * 1000);\r\n\r\n}\r\n\r\nexport const stopGetTimestampLoop = () => {\r\n\r\n    clearInterval(interval);\r\n\r\n}\r\n\r\n// test code end\r\n\r\nexport const getTimestamp = ( states) => {\r\n\r\n    fetch(timestampUrl).then(function (response) {\r\n            // The API call was successful!\r\n            return response.json();\r\n        }).then(function (data) {\r\n            // This is the JSON from our response\r\n            //console.log(data);\r\n            // return data;\r\n\r\n            if (!flagTS) {\r\n                currentTimestamp = data;\r\n                newTimestamp = data;\r\n                flagTS = 1;\r\n\r\n                console.log('commandCalls' , [\"Register\", \"GetMenu\", \"GetTables\", \"GetPossibleValues\", \"GetDeckCards\"]);                \r\n                commandCalls( [\"Register\", \"GetMenu\", \"GetTables\", \"GetPossibleValues\", \"GetDeckCards\"], states);\r\n\r\n            }\r\n            \r\n\r\n            newTimestamp = data;\r\n\r\n            if ( currentTimestamp[\"aets\"] < newTimestamp[\"aets\"] ) {\r\n\r\n                currentTimestamp = newTimestamp;\r\n                \r\n                console.log(states)\r\n\r\n                switch ( states.CurrentPage ) {\r\n\r\n                case 'homepage'     :\r\n                                        if ( document.getElementById('gameDetails').style.display !== 'block' ) {\r\n                                            console.log('commandCalls' , [\"GetTables\"]);\r\n                                            commandCalls( [\"GetTables\"], states);\r\n                                        }\r\n                                        else {\r\n                                            console.log('commandCalls', [\"GetMatchState\"]);\r\n                                            commandCalls( [\"GetMatchState\"], states);\r\n                                        }\r\n                                        break;\r\n                case 'gameScreen'   :\r\n                                        console.log('commandCalls', [\"GetMatchState\"]);\r\n                                        commandCalls( [\"GetMatchState\"], states);\r\n                                        break;\r\n                default:\r\n                }\r\n            }\r\n\r\n        }).catch(function (err) {\r\n            // There was an error\r\n            console.warn('Something went wrong.', err);\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const commandCalls = ( commandArray, states) => {\r\n\r\n    // stopGetTimestampLoop();\r\n\r\n\tasyncCall( commandArray, states).catch(e => {\r\n\t\r\n\t\tif ( ++tries < 10 )\r\n\t\t\tcommandCalls( commandArray, states);\r\n\r\n\t});\r\n\r\n}\r\n\r\nconst asyncCall = async ( commandArray, states) => {\r\n\r\n\tlet result;\r\n    let prevCall;\r\n\r\n    //keep popping things in commandArray from beginning till everything is called\r\n\twhile ( commandArray.length > 0 ) {\r\n\t\r\n\t\tresult = await processCommandJsonGenerator( commandArray[0], states);\r\n\t\tconsole.log(result);\r\n        console.log(states);\r\n\r\n        if ( commandArray[0] == 'GetMatchState' ) {\r\n            states.setProcessCommandValues(values => ({\r\n                ...values,\r\n                LastRefreshTimestamp: currentTimestamp[\"aets\"]\r\n            }))\r\n        }\r\n\r\n\t\t//below commands pops item from beginning of array\r\n\t\tcommandArray.shift();\r\n\r\n        // if ( commandArray.length == 1 )\r\n            // prevCall = commandArray[0];\r\n\t}\r\n\r\n    // startGetTimestampLoop(states);\r\n    setTimeout(() => {\r\n        console.log('timed out states' + states)\r\n    }, 1000)\r\n    // if ( prevCall == 'GetMatchState' ) {\r\n    //     states.setProcessCommandValues(values => ({\r\n    //         ...values,\r\n    //         LastRefreshTimestamp: currentTimestamp[\"aets\"]\r\n    //     }))\r\n    // }\r\n\r\n}\r\n//test code end\r\n\r\n\r\n\r\nconst processCommandAPI = ( command, processCommandJson, states) => {\r\n\r\n\treturn new Promise(( resolve, reject) => {\r\n\r\n\t\tfetch('https://www.56cardgameonline.com/newdesign/api/process_command.php', {\r\n    \t\t\tmethod: 'POST', // or 'PUT'\r\n    \t\t\theaders: {\r\n        \t\t\t'Content-Type': 'application/json',\r\n    \t\t\t\t},\r\n    \t\t\tbody: JSON.stringify( processCommandJson ),\r\n\t\t\t})\r\n\t\t\t.then(response => response.text())\r\n\t\t\t.then(data => {\r\n\r\n                // updateAuthentication( command, data, states);\r\n\r\n    \t\t\t\tlet json = {\"userId\": \"\", \"csrf\": \"\", \"returnCode\": 0}\r\n\r\n\t\t\t    \tjson.userId = JSON.parse(data).Control.UserID;\r\n    \t\t\t\tjson.csrf = JSON.parse(data).Control.CSRF;\r\n    \t\t\t\tjson.returnCode = JSON.parse(data).Control.returnCode;\r\n\r\n    \t\t\t\t// states.setProcessCommandValues(values => ({\r\n        \t\t\t// \t...values,\r\n        \t\t\t// \tuserId      :   JSON.parse(data).Control.UserID,\r\n        \t\t\t// \tcsrf        :   JSON.parse(data).Control.CSRF,\r\n        \t\t\t// \treturnCode  :   JSON.parse(data).Control.returnCode\r\n    \t\t\t\t// }));\r\n\r\n                    userId = JSON.parse(data).Control.UserID;\r\n    \t\t\t\tcsrf = JSON.parse(data).Control.CSRF;\r\n\r\n    \t\t\t\tconsole.log('Success:', JSON.parse(data), json.userId, json.csrf, json.returnCode);\r\n\r\n    \t\t\t\tif( json.returnCode == 0 ) {\r\n\r\n        \t\t\t\tswitch( command ) {\r\n\r\n            \t\t\t\tcase \"Register\" :   \r\n                                                // app initialization, move to game if you were already part of a game\r\n                                                states.setCurrentPage( JSON.parse(data).Control.CurrentPage );\r\n                                                states.setProcessCommandValues(values => ({\r\n                                                    ...values,\r\n                                                    GroupID: JSON.parse(data).GroupID,\r\n                                                    MatchID: JSON.parse(data).MatchID,\r\n                                                    CurrentPageTS: 'firstCall'\r\n                                                }))\r\n\r\n                                                // below code is to make sure adContent space is reduced\r\n                                                if ( JSON.parse(data).Control.CurrentPage == 'gameScreen' )\r\n                                                    setTimeout(() => moveToGameScreen(states), 1500)\r\n\r\n                                                // timeout is given because the above setState functions are async\r\n                                                // setTimeout(() => { \r\n                                                //     if ( JSON.parse(data).Control.CurrentPage == 'gameScreen' )\r\n                                                //         commandCalls( [\"GetMatchState\"], states);\r\n                                                // }, 300);\r\n\r\n\t                               \t\t\t\tbreak;\r\n            \t\t\t\tcase \"GetMenu\"  :   \r\n                                                var menuJson = [];\r\n                                \t\t\t\tObject.keys(JSON.parse(data).Menu).forEach((item) => {\r\n                                    \t\t\t\t\tmenuJson.push(JSON.parse(data).Menu[item])\r\n                                \t\t\t\t});\r\n                                \t\t\t\tstates.setSideNavItems(menuJson);\r\n                                \t\t\t\t// processCommandAPI( \"GetTables\", states);\r\n                                \t\t\t\tbreak;\r\n            \t\t\t\tcase \"GetTables\":   \r\n                                \t\t\t\tvar tableJson = {};\r\n                                \t\t\t\ttableJson = JSON.parse(data).HomeTiles;\r\n                                \t\t\t\tsortTables( tableJson, states.setTableContent);\r\n                                \t\t\t\tbreak;\r\n\r\n            \t\t\t\tcase \"GetPossibleValues\"    :   \r\n                                            \t\t\t\tstates.setPossibleValues( JSON.parse(data).Output );\r\n                                            \t\t\t\tbreak;\r\n            \t\t\t\tcase \"CreateMatch\"          :   // capture matchid and add it to state\r\n                                            \t\t\t\tlet matchID = JSON.parse(data).Output.MatchID;\r\n                                                            matchId = JSON.parse(data).Output.MatchID;\r\n                                            \t\t\t\tstates.setProcessCommandValues(values => ({\r\n                                                \t\t\t\t...values,\r\n                                                \t\t\t\tMatchID: matchID\r\n                                            \t\t\t\t}))\r\n                                            \t\t\t\tbreak;\r\n\r\n            \t\t\t\tcase \"TakeChairInMatch\"     :   // do nothing\r\n                                            \t\t\t\tbreak;\r\n\r\n                            case \"GetDeckCards\"         :   // update card deck\r\n                                                            states.setCardDeck( JSON.parse(data).CardDeck );\r\n                                            \t\t\t\tbreak;\r\n\r\n            \t\t\t\tcase \"GetMatchState\"        :   // capture match details, rules, add it to state\r\n                                            \t\t\t\tstates.setMatchState( JSON.parse(data).MatchState );\r\n\r\n                                                            refreshCallsArray = [];\r\n                                                            Object.keys( JSON.parse(data).MatchState.RefreshCalls ).forEach(item => refreshCallsArray.push( JSON.parse(data).MatchState.RefreshCalls[item] ));\r\n                                                            \r\n                                                            setTimeout(() => {\r\n                                                                states.setProcessCommandValues(values => ({\r\n                                                                    ...values,\r\n                                                                    RefreshCallsArray: refreshCallsArray\r\n                                                                }))\r\n                                                            }, JSON.parse(data).MatchState.MinimumWaitSeconds * 1000 );\r\n                                                            // commandCalls( refreshCallsArray, states);\r\n\r\n                                                            // states.setProcessCommandValues(values => ({\r\n                                                            //     ...values,\r\n                                                            //     LastRefreshTimestamp: currentTimestamp[\"aets\"]\r\n                                                            // }))\r\n\r\n                                            \t\t\t\tbreak;\r\n\r\n                            case \"FoldDiscardedCars\"    :   // do nothing\r\n                                                            break;\r\n\r\n                            case \"GetMatchScoreBoard\"   :   // update matchScoreboard\r\n                                                            states.setMatchScoreboard( JSON.parse(data).ScoreBoard );\r\n                                                            break;                                \r\n\r\n                            case \"PlayerLeaveMatch\"     :\r\n                                                            document.getElementById('confirmationMessage').innerHTML = 'Match left successfully!!';\r\n                                                            document.getElementById('noButtonConfirmation').style.display = 'none'; \r\n                                                            document.getElementById('yesButtonConfirmation').style.display = 'none'; \r\n                                                            document.getElementById('okButtonConfirmation').style.display = 'flex'; \r\n                                                            \r\n                                                            document.getElementById('popupConfirmation').style.display = 'block';\r\n                                                            document.getElementById('container').style.opacity = '0.5'; \r\n                                                            \r\n                                                            moveToHomepage(states);\r\n                                                            console.log('move to homepage');\r\n\r\n                                                            setTimeout(() => window.dispatchEvent(new Event('resize')), 100);\r\n                                                            break;\r\n\r\n                            case \"StartNewGame\"         :   // do nothing                                                            \r\n                                                            break;    \r\n                                                            \r\n                            case \"CallBiddingKeyboard\"  :   // update BiddingKeyboardValues\r\n                                                            states.setBiddingKeyboardValues( JSON.parse(data).Keyboard );\r\n                                                            break;                                \r\n\r\n                            case \"ResetMatch\"           :   \r\n                                                            document.getElementById('confirmationMessage').innerHTML = 'Match reset successfully!!';\r\n                                                            document.getElementById('noButtonConfirmation').style.display = 'none'; \r\n                                                            document.getElementById('yesButtonConfirmation').style.display = 'none'; \r\n                                                            document.getElementById('okButtonConfirmation').style.display = 'flex'; \r\n                                                            \r\n                                                            document.getElementById('popupConfirmation').style.display = 'block';\r\n                                                            document.getElementById('gameDetailsWrapper').style.opacity = 0.5;\r\n                                                            break;\r\n\r\n                            case \"GetCurrentPlayerHand\" :   // update CurrentPlayerHand\r\n                                                            states.setCurrentPlayerHand( JSON.parse(data).CurrentPlayerHand );\r\n                                                            break;\r\n\r\n                            case \"GetDiscardCards\"      :   // update DiscardCards\r\n                                                            states.setDiscardCards( JSON.parse(data).DiscardCards );\r\n                                                            break;\r\n\r\n                            case \"GetListWatchers\"      :   // update ListWatchers\r\n                                                            break;\r\n\r\n                            case \"ChangeMatch\"          :\r\n                                                            document.getElementById('confirmationMessage').innerHTML = 'Match settings changed successfully!!';\r\n                                                            document.getElementById('noButtonConfirmation').style.display = 'none'; \r\n                                                            document.getElementById('yesButtonConfirmation').style.display = 'none'; \r\n                                                            document.getElementById('okButtonConfirmation').style.display = 'flex'; \r\n                                                            \r\n                                                            document.getElementById('popupConfirmation').style.display = 'block';\r\n                                                            document.getElementById('gameDetailsWrapper').style.opacity = 0.5;\r\n\r\n                                                            \r\n\r\n                                                            document.getElementById('gameDetails').style.display= 'none';\r\n                                                            document.getElementById('container').style.opacity = '1';\r\n\r\n                                                            break;\r\n\r\n                            case \"DeleteMatch\"          :\r\n                                                            document.getElementById('confirmationMessage').innerHTML = 'Match deleted successfully!!';\r\n                                                            document.getElementById('noButtonConfirmation').style.display = 'none'; \r\n                                                            document.getElementById('yesButtonConfirmation').style.display = 'none'; \r\n                                                            document.getElementById('okButtonConfirmation').style.display = 'flex'; \r\n                                                            \r\n                                                            document.getElementById('popupConfirmation').style.display = 'block';\r\n                                                            document.getElementById('gameDetailsWrapper').style.opacity = 0.5;\r\n                                                            moveToHomepage(states);\r\n                                                            console.log('move to homepage');\r\n\r\n                                                            document.getElementById('gameDetails').style.display= 'none';\r\n                                                            document.getElementById('container').style.opacity = '1';\r\n                                                            break;\r\n\r\n                            case \"KickOutPlayer\"        :\r\n                                                            document.getElementById('confirmationMessage').innerHTML = 'Player kicked out successfully!!';\r\n                                                            document.getElementById('noButtonConfirmation').style.display = 'none'; \r\n                                                            document.getElementById('yesButtonConfirmation').style.display = 'none'; \r\n                                                            document.getElementById('okButtonConfirmation').style.display = 'flex'; \r\n                                                            \r\n                                                            document.getElementById('popupConfirmation').style.display = 'block';\r\n                                                            document.getElementById('gameDetailsWrapper').style.opacity = 0.5;\r\n                                                            break;\r\n\r\n                            case 'PlayCard'             :   // do nothing;\r\n                                                            break;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault\t\t\t    :\r\n                        \r\n        \t\t\t}\r\n\r\n\t\t\t\tresolve('pcCallSuccess ' + command);\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\telse {\r\n        \t\t\tconsole.log(tries + ' tries');\r\n\r\n                    //switching through error return codeds\r\n                    switch( json.returnCode ) {\r\n\r\n                        case 126    :\r\n                                        // invalid match, go to gameScreen\r\n                                        moveToHomepage(states);\r\n                                        console.log('move to homepage');\r\n\r\n                                        break;\r\n                        case 9999   :\r\n                        case 9996   :\r\n                                        // invalid session, go to login screen\r\n                                        window.location.href = \"https://www.56cardgameonline.com/newdesign/api/login.php\";\r\n                                        // window.location.href = \"https://www.56cardgameonline.com/56game/56gamelogin.php\";\r\n                                        break;\r\n                        default     :\r\n                        \r\n                    }\r\n\r\n                    if ( ++tries < 10)\r\n    \t\t\t\t    reject({ \"command\": command, \"states\": states});\r\n                    else\r\n                        resolve('pcCallFailed');\r\n \r\n    \t\t\t}\r\n    \r\n    \t\t})\r\n    \t\t.catch((error) => {\r\n        \t\tconsole.error('Error:', error);\r\n\t\t\t    reject({ \"commandArray\": command, \"states\": states});\r\n    \t\t});\r\n\r\n\t});\r\n\r\n}\r\n\r\nexport const processCommandJsonGenerator = ( command, states) => {\r\n\r\n    console.log('at processCommandJsonGen ' + command + \" \");\r\n    console.log(states);\r\n\r\n    // if previousCommand2 is CreateMatch  don't enter\r\n    // if previousCommand1 is CreateMatch and previousCommand2 is TakeChair don't enter\r\n    // please note that unlike CreateMatch, ChangeMatch doesn't need the below sync code since \r\n    // MatchState gives the correct MatchID initially itself unlike CreateMatch, where it's generated\r\n    // when CreateMatch is called\r\n\r\n    // if ( ! ( (prevCommand2 == \"CreateMatch\") || ( ( prevCommand1 == \"CreateMatch\" ) && ( prevCommand2 == \"TakeChairInTable\" ) ) ) )\r\n    //     matchId = states.ProcessCommandValues.MatchID;\r\n\r\n\r\n    // prevCommand1 = prevCommand2;\r\n    // prevCommand2 = command;\r\n\r\n\r\n\r\n    if ( ! ( (prevCommand3 == \"CreateMatch\") || ( ( prevCommand2 == \"CreateMatch\" ) && ( prevCommand3 == \"TakeChairInTable\" ) ) || ( ( prevCommand1 == \"CreateMatch\" ) && ( prevCommand2 == \"TakeChairInTable\" ) && ( prevCommand3 == \"GetMatchState\" ) ) ) )\r\n        matchId = states.ProcessCommandValues.MatchID;\r\n\r\n        console.log(\"matchid \" + matchId);\r\n\r\n    //prevCommand3 is the latest prevCall, prevCommand1 is the oldest\r\n    prevCommand2 = prevCommand3;\r\n    prevCommand1 = prevCommand2;\r\n    prevCommand3 = command;\r\n\r\n    var processCommandJson = {\r\n                                \"Control\": {\r\n                                \"UserID\": userId,\r\n                                \"CSRF\": csrf,\r\n                                \"Command\": command,\r\n                                \"Comment\": null,\r\n                                \"returnCode\": null,\r\n                                \"CurrentPage\": states.CurrentPage\r\n                                }\r\n                            }\r\n\r\n    switch(command) {\r\n\r\n        case 'CreateMatch'      :\r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = states.ProcessCommandValues.MatchID;\r\n                                    processCommandJson[\"Parameters\"][\"AllowedHelpLevel\"]    = states.ProcessCommandValues.AllowedHelpLevel;\r\n                                    processCommandJson[\"Parameters\"][\"MaxPlay\"]             = states.ProcessCommandValues.MaxPlay;\r\n                                    processCommandJson[\"Parameters\"][\"NumberOfPlayers\"]     = states.ProcessCommandValues.NumberOfPlayers;\r\n                                    processCommandJson[\"Parameters\"][\"GameRules\"]           = states.ProcessCommandValues.GameRules;\r\n                                    processCommandJson[\"Parameters\"][\"PlayerLevel\"]         = states.ProcessCommandValues.PlayerLevel;\r\n                                    processCommandJson[\"Parameters\"][\"EnforceFollowSuit\"]   = states.ProcessCommandValues.EnforceFollowSuit;\r\n                                    processCommandJson[\"Parameters\"][\"ShowGamePoints\"]      = states.ProcessCommandValues.ShowGamePoints;\r\n                                    processCommandJson[\"Parameters\"][\"ShowRemainingPoints\"] = states.ProcessCommandValues.ShowRemainingPoints;\r\n                                    processCommandJson[\"Parameters\"][\"EnableAllPass\"]       = states.ProcessCommandValues.EnableAllPass;\r\n                                    processCommandJson[\"Parameters\"][\"PublicMatch\"]         = states.ProcessCommandValues.PublicMatch;\r\n                                    break;\r\n\r\n        case 'TakeChairInTable' :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    processCommandJson[\"Parameters\"][\"ChairNo\"]             = states.ProcessCommandValues.ChairNo;\r\n                                    break;                  \r\n        \r\n        case \"GetDeckCards\"     :   //do nothing\r\n                                    break;\r\n\r\n        case 'GetMatchState'    :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    processCommandJson[\"Parameters\"][\"LastRefreshTimestamp\"]= states.ProcessCommandValues.LastRefreshTimestamp;\r\n                                    processCommandJson[\"Parameters\"][\"MyMatch\"]             = states.ProcessCommandValues.MyMatch;\r\n                                    break;\r\n\r\n        case 'FoldDiscardedCards'   :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    break;\r\n\r\n        case 'GetMatchScoreBoard'   :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    break;\r\n\r\n        case 'GetListWatchers'     :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    break;\r\n                                    \r\n        case 'PlayerLeaveMatch'     :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    break;\r\n\r\n        case 'StartNewGame'         :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    break;\r\n\r\n        case 'CallBiddingKeyboard'  :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    processCommandJson[\"Parameters\"][\"myBid\"]               = states.ProcessCommandValues.MyBid;\r\n                                    break;\r\n\r\n        case 'ResetMatch'           :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    break;\r\n\r\n        case 'GetCurrentPlayerHand' :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    break;   \r\n                                    \r\n        case 'GetDiscardCards'      :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    break;                                       \r\n\r\n        case 'ChangeMatch'      :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    processCommandJson[\"Parameters\"][\"AllowedHelpLevel\"]    = states.ProcessCommandValues.AllowedHelpLevel;\r\n                                    processCommandJson[\"Parameters\"][\"MaxPlay\"]             = states.ProcessCommandValues.MaxPlay;\r\n                                    processCommandJson[\"Parameters\"][\"NumberOfPlayers\"]     = states.ProcessCommandValues.NumberOfPlayers;\r\n                                    processCommandJson[\"Parameters\"][\"GameRules\"]           = states.ProcessCommandValues.GameRules;\r\n                                    processCommandJson[\"Parameters\"][\"PlayerLevel\"]         = states.ProcessCommandValues.PlayerLevel;\r\n                                    processCommandJson[\"Parameters\"][\"EnforceFollowSuit\"]   = states.ProcessCommandValues.EnforceFollowSuit;\r\n                                    processCommandJson[\"Parameters\"][\"ShowGamePoints\"]      = states.ProcessCommandValues.ShowGamePoints;\r\n                                    processCommandJson[\"Parameters\"][\"ShowRemainingPoints\"] = states.ProcessCommandValues.ShowRemainingPoints;\r\n                                    processCommandJson[\"Parameters\"][\"EnableAllPass\"]       = states.ProcessCommandValues.EnableAllPass;\r\n                                    processCommandJson[\"Parameters\"][\"PublicMatch\"]         = states.ProcessCommandValues.PublicMatch;\r\n                                    break;\r\n\r\n        case 'DeleteMatch'      :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    break;\r\n\r\n        case 'KickOutPlayer'    :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    processCommandJson[\"Parameters\"][\"ChairNo\"]             = states.ProcessCommandValues.ChairNo;\r\n                                    break;\r\n\r\n        case 'PlayCard'         :   \r\n                                    processCommandJson[\"Parameters\"]                        = {};\r\n                                    processCommandJson[\"Parameters\"][\"GroupID\"]             = states.ProcessCommandValues.GroupID;\r\n                                    processCommandJson[\"Parameters\"][\"MatchID\"]             = matchId;\r\n                                    processCommandJson[\"Parameters\"][\"myCardID\"]            = states.ProcessCommandValues.MyCardID;\r\n                                    break; \r\n        \r\n        default             :\r\n\r\n    }\r\n\r\n    return processCommandAPI( command, processCommandJson, states);\r\n\r\n}","var refreshUrl = 'https://www.56cardgameonline.com/56game/get_tables.php';\r\nvar timestampUrl = 'https://www.56cardgameonline.com/56game/get_timestamp.php';\r\n\r\n// var currentTimestamp = getTimestamp(timestampUrl);\r\nvar currentTimestamp;\r\nvar newTimestamp;\r\nvar flagTS = 0;\r\n\r\n// export const sortTables = (tableJson) => {\r\nexport const sortTables = (tableJson, setTableContent) => {\r\n\r\n    // console.log('tableJson', tableJson);\r\n    // debugger;\r\n\r\n    // tableJson = {\"Public\":{\"0\":{\"GroupID\":null},\"1\":{\"Name\":\"Start Public Match\",\"Difficulty\":null,\"Rules\":null,\"Players\":null,\"Status\":null,\"MyMatch\":null,\"TargetURL\":null,\"TargetWindow\":null,\"BackGround\":\"public\",\"TileType\":\"createTile\"},\"2\":{\"Name\":\"Table #64\",\"Difficulty\":\"Intermediate\",\"Rules\":\"International\",\"Players\":\"0\\/6\",\"Status\":\"Waiting for players\",\"MyMatch\":\"N\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=605bc00c22303\",\"TargetWindow\":\"_self\",\"BackGround\":\"public\",\"TileType\":\"tableTile\"},\"3\":{\"Name\":\"Table #55\",\"Difficulty\":\"Intermediate\",\"Rules\":\"International\",\"Players\":\"0\\/6\",\"Status\":\"Waiting for players\",\"MyMatch\":\"N\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=605bc027d1ad8\",\"TargetWindow\":\"_self\",\"BackGround\":\"public\",\"TileType\":\"tableTile\"},\"4\":{\"Name\":\"Table #68\",\"Difficulty\":\"Intermediate\",\"Rules\":\"International\",\"Players\":\"0\\/6\",\"Status\":\"Waiting for players\",\"MyMatch\":\"N\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=605bc02f8da2c\",\"TargetWindow\":\"_self\",\"BackGround\":\"public\",\"TileType\":\"tableTile\"}},\"second test\":{\"0\":{\"GroupID\":\"604f0c5587db4\"},\"1\":{\"Name\":\"New Table\",\"Difficulty\":null,\"Rules\":null,\"Players\":null,\"Status\":null,\"MyMatch\":null,\"TargetURL\":null,\"TargetWindow\":null,\"BackGround\":\"private\",\"TileType\":\"createTile\"},\"2\":{\"Name\":\"Table #64\",\"Difficulty\":\"Intermediate\",\"Rules\":\"International\",\"Players\":\"0\\/6\",\"Status\":\"Waiting for players\",\"MyMatch\":\"N\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=605bc00c22303\",\"TargetWindow\":\"_self\",\"BackGround\":\"public\",\"TileType\":\"tableTile\"},\"3\":{\"Name\":\"Table #11\",\"Difficulty\":\"Intermediate\",\"Rules\":\"International\",\"Players\":\"0\\/6\",\"Status\":\"Waiting for players\",\"MyMatch\":\"N\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=605bc00c22303\",\"TargetWindow\":\"_self\",\"BackGround\":\"public\",\"TileType\":\"tableTile\"},\"4\":{\"Name\":\"Table #2\",\"Difficulty\":\"Intermediate\",\"Rules\":\"International\",\"Players\":\"0\\/6\",\"Status\":\"Waiting for players\",\"MyMatch\":\"N\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=605bc00c22303\",\"TargetWindow\":\"_self\",\"BackGround\":\"public\",\"TileType\":\"tableTile\"},\"5\":{\"Name\":\"Table #77\",\"Difficulty\":\"Intermediate\",\"Rules\":\"International\",\"Players\":\"0\\/6\",\"Status\":\"Waiting for players\",\"MyMatch\":\"N\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=605bc00c22303\",\"TargetWindow\":\"_self\",\"BackGround\":\"public\",\"TileType\":\"tableTile\"},\"6\":{\"Name\":\"Table #8\",\"Difficulty\":\"Intermediate\",\"Rules\":\"International\",\"Players\":\"0\\/6\",\"Status\":\"Waiting for players\",\"MyMatch\":\"N\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=605bc00c22303\",\"TargetWindow\":\"_self\",\"BackGround\":\"public\",\"TileType\":\"tableTile\"}},\"Create your Private Group\":{\"0\":{\"GroupID\":null},\"1\":{\"Name\":\"Create Private Group\",\"Difficulty\":null,\"Rules\":null,\"Players\":null,\"Status\":null,\"MyMatch\":null,\"TargetURL\":\"\\/56game\\/56game_group.php\",\"TargetWindow\":\"_self\",\"BackGround\":\"private\",\"TileType\":\"createTile\"}}};\r\n\r\n    //below is the code for sorting the tables according to table numbers within each group\r\n\r\n    Object.keys(tableJson).map((item) => {\r\n\r\n        var flag = 0;\r\n\r\n        //performming bubble sort on each tileGroup\r\n        do { flag = 0;\r\n\r\n        for( var i=2 ; i<Object.keys(tableJson[item]).length ; i++) {\r\n    \r\n            // var flag = 0;\r\n    \r\n            // do {\r\n                \r\n                // flag = 0;\r\n                \r\n                try {\r\n                if( parseInt(tableJson[item][i].Name.split( \"#\")[1]) > parseInt(tableJson[item][i+1].Name.split( \"#\")[1]) ) {\r\n    \r\n                    var temp = tableJson[item][i];\r\n                    tableJson[item][i] = tableJson[item][i+1];\r\n                    tableJson[item][i+1] = temp;\r\n    \r\n                    flag = 1;\r\n    \r\n                }\r\n                }\r\n                catch {}\r\n    \r\n            // } while(flag == 1);\r\n    \r\n        }\r\n        } while(flag == 1);\r\n        \r\n    \r\n    })\r\n\r\n    // return tableJson;\r\n\r\n    setTableContent(tableJson);\r\n    setTimeout(() => window.dispatchEvent(new Event('resize')), 200);\r\n\r\n}\r\n\r\n//below function gets the tileJSON from the given url and refreshes the tables\r\nconst refresh = (refreshUrl, setTableContent) => {\r\n\r\n\t    fetch(refreshUrl).then(function (response) {\r\n\t\t    // The API call was successful!\r\n\t\t    return response.json();\r\n\t    }).then(function (data) {\r\n\t\t    // This is the JSON from our response\r\n\t\t    //console.log(data);\r\n\t\t    // var tiles = data;\r\n\t\t    // updateTiles(data);\r\n\t\t    // console.log(tiles);\r\n            // console.log(\"tiles updated\");\r\n\r\n            //call test1(data) and call setTableContent over there\r\n            // setTableContent(data);\r\n\r\n            // console.log('refresh', data);\r\n\t\t    currentTimestamp = newTimestamp;\r\n            // sortTables(data);\r\n            sortTables(data, setTableContent);\r\n\r\n\t    }).catch(function (err) {\r\n\t    \t// There was an error\r\n\t    \tconsole.warn('Something went wrong.', err);\r\n\t    });\r\n}\r\n\r\nexport const getTimestamp = (setTableContent) => {\r\n\r\n    \tfetch(timestampUrl).then(function (response) {\r\n\t    \t\t// The API call was successful!\r\n\t    \t\treturn response.json();\r\n\t    \t}).then(function (data) {\r\n\t\t    \t// This is the JSON from our response\r\n\t\t\t    //console.log(data);\r\n\t\t\t    // return data;\r\n\r\n                if (!flagTS) {\r\n                    currentTimestamp = data;\r\n                    newTimestamp = data;\r\n                    flagTS = 1;\r\n                    // console.log('first table change');\r\n\t\t\t\t    // refresh(refreshUrl);\r\n                    refresh(refreshUrl, setTableContent)\r\n                }\r\n                \r\n\r\n                newTimestamp = data;\r\n\r\n\t\t\t    // if ( currentTimestamp[\"aets\"] !== newTimestamp[\"aets\"] ) {\r\n                if ( currentTimestamp[\"aets\"] < newTimestamp[\"aets\"] ) {\r\n                    // tableChange();\r\n                    // console.log('table change', currentTimestamp, newTimestamp);\r\n                    // refresh(refreshUrl);\r\n                    refresh(refreshUrl, setTableContent)\r\n\t\t\t    }\r\n    \t\t    else {\r\n        \t\t    // console.log('no table change', currentTimestamp, newTimestamp);\r\n                    return false;\r\n                }\r\n    \t\t}).catch(function (err) {\r\n\t    \t\t// There was an error\r\n\t\t    \tconsole.warn('Something went wrong.', err);\r\n\t    });\r\n\r\n}\r\n\r\n\r\n// below is test code for new process command api\r\n\r\nvar userId = \"\";\r\nvar csrf = \"\";\r\nvar returnCode;\r\n\r\nexport const apiTest = () => {\r\n\r\n    do {\r\n        processCommandAPI( userId, csrf, \"Register\");\r\n    } while ( returnCode == 3 );\r\n\r\n    do {\r\n        processCommandAPI( userId, csrf, \"GetMenu\");\r\n    } while ( returnCode == 3 );\r\n\r\n    do {\r\n        processCommandAPI( userId, csrf, \"GetTables\");\r\n    } while ( returnCode == 3 );\r\n\r\n}\r\n\r\n// processCommandAPI( userId, csrf, \"GetMenu\");\r\n// processCommandAPI( userId, csrf, \"GetTables\");\r\n\r\nconst processCommandAPI = ( userId, csrf, command) => {\r\n\r\n    fetch('https://www.56cardgameonline.com/newdesign/api/process_command.php', {\r\n        method: 'POST', // or 'PUT'\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n\t        \"Control\": {\r\n\t\t        \"UserID\": userId,\r\n\t\t        \"CSRF\": csrf,\r\n\t\t        \"Command\": command,\r\n\t\t        \"Comment\": null,\r\n\t\t        \"returnCode\": null\r\n\t        }\r\n        }),\r\n    })\r\n    .then(response => response.text())\r\n    .then(data => {\r\n        userId = JSON.parse(data).Control.UserID;\r\n        csrf = JSON.parse(data).Control.CSRF;\r\n        returnCode = JSON.parse(data).Control.returnCode;\r\n        console.log('Success:', data);\r\n    })\r\n    .catch((error) => {\r\n        console.error('Error:', error);\r\n    });\r\n\r\n}","import { commandCalls } from './components/Content/Misc/Timestamp.scripts'\r\n\r\nexport const moveToHomepage = (states) => {\r\n\r\n    document.getElementById('adContent').style.height = 'calc( 100% - 60px )';\r\n    document.getElementById('adContent').lastChild.style.height = 'calc( 100% - 60px )';\r\n    document.getElementById('adContent').lastChild.firstChild.style.height = 'calc( 100% - 60px )';\r\n    document.getElementById('adContent').lastChild.firstChild.firstChild.style.height = 'calc( 100% - 60px )';\r\n    document.getElementById('adContent').lastChild.firstChild.firstChild.firstChild.style.height = 'calc( 100% - 60px )';\r\n\r\n    document.getElementById('navBarMatchDetails').style.display = 'none';\r\n    document.getElementById('navBarLeaveGame').style.display = 'none';\r\n    document.getElementById('navBarInfoIcon').style.display = 'none';\r\n    document.getElementById('navBarRefresh').style.display = 'none';\r\n\r\n    states.setCurrentPage('homepage');\r\n    // refresh tables when moving to homepage\r\n\r\n    states.setProcessCommandValues(values => ({\r\n        ...values,\r\n        MyBid: \"\"\r\n    }))\r\n\r\n    setTimeout(() => {\r\n        console.log('commandCalls ', [\"GetTables\"]);\r\n        commandCalls( [\"GetTables\"], states);\r\n        window.dispatchEvent(new Event('resize'))\r\n    }, 300);\r\n\r\n\r\n}\r\n\r\nexport const moveToGameScreen = (states) => {\r\n\r\n    document.getElementById('adContent').style.height = 'calc( 40% - 60px) ';\r\n    // document.getElementById('adContent').lastChild.style.height = 'calc( 40% - 60px) '\r\n    // document.getElementById('adContent').lastChild.firstChild.style.height = 'calc( 40% - 60px) '\r\n    // document.getElementById('adContent').lastChild.firstChild.firstChild.style.height = 'calc( 40% - 60px) '\r\n    // document.getElementById('adContent').lastChild.firstChild.firstChild.firstChild.style.height = 'calc( 40% - 60px) '\r\n    document.getElementById('adContent').lastChild.style.height = '100% '\r\n    document.getElementById('adContent').lastChild.firstChild.style.height = '100% '\r\n    document.getElementById('adContent').lastChild.firstChild.firstChild.style.height = '100% '\r\n    document.getElementById('adContent').lastChild.firstChild.firstChild.firstChild.style.height = '100% '\r\n\r\n    // document.getElementById('biddingKeyboardTitle').innerText = 'Place your Bid';\r\n\r\n    states.setCurrentPage('gameScreen');\r\n    setTimeout(() => window.dispatchEvent(new Event('resize')), 100);\r\n    \r\n}\r\n\r\nexport const stringToSuit = (id) => {\r\n\r\n    // console.log(id);\r\n\r\n    Array.from(document.getElementById(id).childNodes).forEach(item => {\r\n        // console.log(item.innerText)\r\n\r\n        item.style.removeProperty('background-image');\r\n\r\n        // searching for suit values to replace them with a background of the suit\r\n        switch ( item.innerText ) {\r\n\r\n            case 'hearts'   :\r\n                                item.style.backgroundImage = 'url(https://www.56cardgameonline.com/newdesign/others/hearts.PNG)';\r\n                                // item2.innerText = \"\";\r\n                                item.style.color = 'transparent';\r\n                                break;\r\n            case 'clubs'    :\r\n                                item.style.backgroundImage = 'url(https://www.56cardgameonline.com/newdesign/others/clubs.PNG)';\r\n                                // item2.innerText = \"\";\r\n                                item.style.color = 'transparent';\r\n                                break;\r\n            case 'spades'   :\r\n                                item.style.backgroundImage = 'url(https://www.56cardgameonline.com/newdesign/others/spades.PNG)';\r\n                                // item2.innerText = \"\";\r\n                                item.style.color = 'transparent';\r\n                                break;\r\n            case 'diams'    :\r\n                                item.style.backgroundImage = 'url(https://www.56cardgameonline.com/newdesign/others/diams.PNG)';\r\n                                // item2.innerText = \"\";\r\n                                item.style.color = 'transparent';\r\n                                break;                    \r\n            default         :   item.style.color = 'black';\r\n\r\n        }\r\n\r\n    })\r\n\r\n}\r\n\r\nexport const checkBidTitle = () => {\r\n\r\n    // getting all the bidMessages in MatchState\r\n    let bidValues = Array.from(document.getElementsByClassName('biddingKeyboardTitlePart'));\r\n    // bidValues.forEach(item => item.style.display = 'none');\r\n\r\n    // setTimeout(() => {\r\n    bidValues.forEach(item => {\r\n\r\n        // console.log(item1.childNodes)\r\n\r\n        // item1.style.display = 'flex';\r\n\r\n        // item1.childNodes.forEach(item2 => {\r\n\r\n            // if ( item2.innerText !== '' )\r\n            //     item1.style.display = 'flex';\r\n\r\n            // console.log(item2.innerText);\r\n\r\n            item.style.removeProperty('background-image');\r\n\r\n            // searching for suit values to replace them with a background of the suit\r\n            switch ( item.innerText ) {\r\n\r\n                case 'hearts'   :\r\n                                    item.style.backgroundImage = 'url(https://www.56cardgameonline.com/newdesign/others/hearts.PNG)';\r\n                                    // item2.innerText = \"\";\r\n                                    item.style.color = 'transparent';\r\n                                    break;\r\n                case 'clubs'    :\r\n                                    item.style.backgroundImage = 'url(https://www.56cardgameonline.com/newdesign/others/clubs.PNG)';\r\n                                    // item2.innerText = \"\";\r\n                                    item.style.color = 'transparent';\r\n                                    break;\r\n                case 'spades'   :\r\n                                    item.style.backgroundImage = 'url(https://www.56cardgameonline.com/newdesign/others/spades.PNG)';\r\n                                    // item2.innerText = \"\";\r\n                                    item.style.color = 'transparent';\r\n                                    break;\r\n                case 'diams'    :\r\n                                    item.style.backgroundImage = 'url(https://www.56cardgameonline.com/newdesign/others/diams.PNG)';\r\n                                    // item2.innerText = \"\";\r\n                                    item.style.color = 'transparent';\r\n                                    break;                    \r\n                default         :   item.style.color = 'white';\r\n\r\n            }\r\n\r\n        // })\r\n        \r\n\r\n    }) \r\n    // }, 5000);\r\n\r\n}\r\n\r\nexport const checkPlaceBid = () => {\r\n\r\n    // getting all the bidValues in the chairs\r\n    let bidValues = Array.from(document.getElementsByClassName('lastBid'));\r\n    bidValues.forEach(item => item.style.display = 'none');\r\n\r\n    // setTimeout(() => {\r\n    bidValues.forEach(item1 => {\r\n\r\n        // console.log(item1.childNodes)\r\n\r\n        // item1.style.display = 'flex';\r\n\r\n        item1.childNodes.forEach(item2 => {\r\n\r\n            if ( item2.innerText !== '' )\r\n                item1.style.display = 'flex';\r\n\r\n            // console.log(item2.innerText);\r\n\r\n            item2.style.removeProperty('background-image');\r\n\r\n            // searching for suit values to replace them with a background of the suit\r\n            switch ( item2.innerText ) {\r\n\r\n                case 'hearts'   :\r\n                                    item2.style.backgroundImage = 'url(https://www.56cardgameonline.com/newdesign/others/hearts.PNG)';\r\n                                    // item2.innerText = \"\";\r\n                                    item2.style.color = 'transparent';\r\n                                    break;\r\n                case 'clubs'    :\r\n                                    item2.style.backgroundImage = 'url(https://www.56cardgameonline.com/newdesign/others/clubs.PNG)';\r\n                                    // item2.innerText = \"\";\r\n                                    item2.style.color = 'transparent';\r\n                                    break;\r\n                case 'spades'   :\r\n                                    item2.style.backgroundImage = 'url(https://www.56cardgameonline.com/newdesign/others/spades.PNG)';\r\n                                    // item2.innerText = \"\";\r\n                                    item2.style.color = 'transparent';\r\n                                    break;\r\n                case 'diams'    :\r\n                                    item2.style.backgroundImage = 'url(https://www.56cardgameonline.com/newdesign/others/diams.PNG)';\r\n                                    // item2.innerText = \"\";\r\n                                    item2.style.color = 'transparent';\r\n                                    break;                    \r\n                default         :   item2.style.color = 'black';\r\n\r\n            }\r\n\r\n        })\r\n        \r\n\r\n    }) \r\n    // }, 5000);\r\n\r\n}\r\n\r\nexport const saveIconGameDetails = (states) => {\r\n\r\n    //same as in popup action, but updateTimestamp diff, public match code diff\r\n    let json = {};\r\n\r\n    switch ( document.getElementById('playerLevel').value ) {\r\n\r\n        case 'Beginner'     :   json[\"PlayerLevel\"] = 'B';\r\n                                break;\r\n        case 'Intermediate' :   json[\"PlayerLevel\"] = 'I';\r\n                                break;\r\n        case 'Expert'       :   json[\"PlayerLevel\"] = 'E';\r\n                                break;\r\n        default             :\r\n            \r\n    }\r\n\r\n    switch ( document.getElementById('gameRules').value ) {\r\n\r\n        case 'International':   json[\"GameRules\"] = 'INT';\r\n                                break;\r\n        case 'Kerala'       :   json[\"GameRules\"] = 'KER';\r\n                                break;            \r\n        default     :\r\n    }\r\n    switch ( document.getElementById('gamePoints').value ) {\r\n\r\n        case 'Show' :   json[\"ShowGamePoints\"] = 'Y';\r\n                        break;\r\n        case 'Hide' :   json[\"ShowGamePoints\"] = 'N';\r\n                        break;            \r\n        default     :\r\n    }\r\n    switch ( document.getElementById('remainingPoints').value ) {\r\n\r\n        case 'Show' :   json[\"ShowRemainingPoints\"] = 'Y';\r\n                        break;\r\n        case 'Hide' :   json[\"ShowRemainingPoints\"] = 'N';\r\n                        break;            \r\n        default     :\r\n    }\r\n    switch ( document.getElementById('allPass').value ) {\r\n\r\n        case 'Enabled'  :   json[\"EnableAllPass\"] = 'Y';\r\n                            break;\r\n        case 'Disabled' :   json[\"EnableAllPass\"] = 'N';\r\n                            break;  \r\n        default         :            \r\n\r\n    }\r\n\r\n\r\n\r\n    switch ( document.getElementById('numberOfPlayers').value ) {\r\n\r\n        case '4 Player'                     :   json[\"NumberOfPlayers\"] = '4';\r\n                                                break;\r\n        case '6 Player'                     :   json[\"NumberOfPlayers\"] = '6';\r\n                                                break;\r\n        case '8 Player with 6 cards each'   :   json[\"NumberOfPlayers\"] = '86';\r\n                                                break;\r\n        case '8 Player with 8 cards each'   :   json[\"NumberOfPlayers\"] = '88';\r\n                                                break;            \r\n        default                             :    \r\n\r\n    }\r\n\r\n\r\n    json[\"PublicMatch\"] = states.MatchState.PublicMatch;\r\n    \r\n\r\n    switch ( document.getElementById('maxGames').value ) {\r\n\r\n        case 'Match of 1 game'  :   json[\"MaxPlay\"] = 'GM1';\r\n                                    break;\r\n        case 'Match of 4 games' :   json[\"MaxPlay\"] = 'GM4';\r\n                                    break;\r\n        case 'Match of 6 games'  :  json[\"MaxPlay\"] = 'GM6';\r\n                                    break;\r\n        case 'Match of 8 games'  :  json[\"MaxPlay\"] = 'GM8';\r\n                                    break;\r\n        case 'Match of 12 games' :  json[\"MaxPlay\"] = 'GM12';\r\n                                    break;\r\n        case 'Match of 16 games' :  json[\"MaxPlay\"] = 'GM16';\r\n                                    break;\r\n        case 'Match of 18 games' :  json[\"MaxPlay\"] = 'GM18';\r\n                                    break;\r\n        case 'Match of 20 games' :  json[\"MaxPlay\"] = 'GM20';\r\n                                    break;\r\n        case 'Match of 24 games' :  json[\"MaxPlay\"] = 'GM24';\r\n                                    break;\r\n        case 'Match of 30 games' :  json[\"MaxPlay\"] = 'GM30';\r\n                                    break;\r\n        case 'Match of 32 games' :  json[\"MaxPlay\"] = 'GM32';\r\n                                    break;\r\n        case 'Match of 36 games' :  json[\"MaxPlay\"] = 'GM36';\r\n                                    break;\r\n        case 'Match of 40 games' :  json[\"MaxPlay\"] = 'GM40';\r\n                                    break;\r\n        case 'Match of 48 games' :  json[\"MaxPlay\"] = 'GM48';\r\n                                    break;\r\n\r\n        case 'Match with target 25 points'  :   json[\"MaxPlay\"] = 'PT25';\r\n                                                break;\r\n        case 'Match with target 50 points'  :   json[\"MaxPlay\"] = 'PT50';\r\n                                                break;\r\n        case 'Match with target 75 points'  :   json[\"MaxPlay\"] = 'PT75';\r\n                                                break;\r\n        case 'Match with target 100 points' :   json[\"MaxPlay\"] = 'PT100';\r\n                                                break;\r\n                                    \r\n                                    \r\n        default :    \r\n\r\n    }\r\n\r\n\r\n    states.setProcessCommandValues(values => ({...values, \r\n        GroupID: states.ProcessCommandValues.GroupID, \r\n        MatchID: states.ProcessCommandValues.MatchID,\r\n        EnableAllPass: json[\"EnableAllPass\"],\r\n        EnforceFollowSuit: states.PossibleValues.Defaults.EnforceFollowSuit,\r\n        GameRules: json[\"GameRules\"],\r\n        MaxPlay : json[\"MaxPlay\"],\r\n        NumberOfPlayers: json[\"NumberOfPlayers\"],\r\n        PlayerLevel: json[\"PlayerLevel\"],\r\n        ShowGamePoints: json[\"ShowGamePoints\"],\r\n        ShowRemainingPoints: json[\"ShowRemainingPoints\"],\r\n        PublicMatch: json[\"PublicMatch\"],\r\n        GameDetailsPopupSave: Math.random()\r\n\r\n    }));\r\n\r\n\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport {Navigation, NavBarButton, NavBarLogo, NavBarText, NavBarMatchDetails, NavBarIcon,NavBarLeaveGame, NavBarInfoIcon} from './NavBar/NavBar.style'\r\nimport {sideNavOpenClose} from './NavBar/NavBar.scripts'\r\nimport { moveToHomepage } from '../App.scripts'\r\nimport { commandCalls } from './Content/Misc/Timestamp.scripts'\r\n\r\nconst NavBar = ({theme, states, handlers}) => {\r\n\r\n\r\n    const leaveButtonClick = () => {\r\n\r\n        document.getElementById('confirmationMessage').innerHTML = 'Are you sure you want to leave the game?';\r\n        document.getElementById('noButtonConfirmation').style.display = 'flex'; \r\n        document.getElementById('yesButtonConfirmation').style.display = 'flex'; \r\n        document.getElementById('okButtonConfirmation').style.display = 'none'; \r\n        \r\n        document.getElementById('popupConfirmation').style.display = 'block';\r\n        document.getElementById('container').style.opacity = '0.5';  \r\n\r\n        // handlers.leaveGameHandler(states);\r\n\r\n    }\r\n\r\n    const infoIconHandler = () => {\r\n\r\n        let arrDisableButtons = Array.from(document.getElementsByClassName('gameDetailsTableButton'));\r\n\r\n        if ( states.MatchState.MatchAdmin == 'Y' ) {\r\n            \r\n            // below code finds which one is admin's chair\r\n            let adminChair;\r\n\r\n            for ( let i=1 ; i<=Object.keys(states.MatchState.Chairs).length ; i++ ) {\r\n\r\n                if ( states.MatchState.Chairs[i] !== null ) {\r\n            \r\n                    if ( states.MatchState.Chairs[i].MatchAdmin == 'Y' ) \r\n                        adminChair = states.MatchState.Chairs[i].ChairNo;\r\n            \r\n                }\r\n\r\n            }\r\n\r\n            arrDisableButtons.forEach(item => {\r\n                item.style.removeProperty('pointer-events');\r\n                item.style.backgroundColor = 'black';\r\n\r\n                //below code replaces buttons on popup\r\n                if ( item.parentNode.parentNode.childNodes[1].innerText == 'Free')\r\n                    item.innerText = 'Free';\r\n                else {\r\n                    // debugger;   \r\n\r\n                    if ( item.parentNode.parentNode.firstChild.innerText == adminChair)\r\n                        item.innerText = 'In Game';\r\n                    else\r\n                        item.innerText = 'Kick';\r\n                }\r\n\r\n                // debugger;\r\n            });\r\n        \r\n        }\r\n        else {\r\n\r\n            arrDisableButtons.forEach(item => {\r\n                item.style.pointerEvents = 'none';\r\n                item.style.backgroundColor = '#C0C0C0';\r\n\r\n                if ( item.parentNode.parentNode.childNodes[1].innerText == 'Free')\r\n                    item.innerText = 'Free';\r\n                else    \r\n                    item.innerText = 'In Game';\r\n\r\n            });\r\n\r\n        }\r\n\r\n        document.getElementById('gameDetails').style.display = \"block\";\r\n        document.getElementById('container').style.opacity = '0.5';\r\n\r\n    }\r\n\r\n    const refreshIconHandler = () => {\r\n\r\n        console.log(\"commandCalls\", [\"GetMatchState\"]);\r\n        commandCalls( [\"GetMatchState\"], states);\r\n\r\n    }\r\n\r\n    return (\r\n        <Navigation background={theme.NavBarBackground} >\r\n            <NavBarButton id=\"navBarButton\" onClick={() => sideNavOpenClose(theme.NavBarButtonBackgroundSelected)}>&#9776;</NavBarButton>\r\n            <NavBarLogo  onClick={() => moveToHomepage(states)} ></NavBarLogo>\r\n            <NavBarText fontColor={theme.NavBarFontColor} >Card Game Online</NavBarText>\r\n\r\n            {/* <NavBarInfoIcon id=\"navBarInfoIcon\" onClick={() => infoIconHandler()}/> */}\r\n            {/* <NavBarLeaveGame id=\"navBarLeaveGame\" onClick={() => leaveButtonClick()} /> */}\r\n\r\n            <NavBarIcon id=\"navBarRefresh\" onClick={() => refreshIconHandler()} bg={'others/refresh-solid.svg'}/>\r\n            <NavBarIcon id=\"navBarInfoIcon\" onClick={() => infoIconHandler()} bg={'others/gear-solid.svg'}/>\r\n            <NavBarIcon id=\"navBarLeaveGame\" onClick={() => leaveButtonClick()} bg={'others/leave-solid.svg'}/>\r\n\r\n            <NavBarMatchDetails id=\"navBarMatchDetails\" ></NavBarMatchDetails>\r\n        </Navigation>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export function sideNavOpenClose(selectedBackground) {\r\n\r\n    var scrollBarWidth = document.getElementById(\"area\").offsetWidth - document.getElementById(\"area\").clientWidth;\r\n\r\n    //control entering 'if' block means sideNav is open\r\n    if ( document.getElementById(\"sideNav\").style.width > \"0px\") {\r\n\r\n        document.getElementById(\"sideNav\").style.removeProperty('width');\r\n        document.getElementById(\"gameContent\").style.removeProperty('width');\r\n        document.getElementById(\"gameContent\").style.removeProperty('margin-left');\r\n        document.getElementById(\"navBarButton\").style.removeProperty('background-color');\r\n        document.getElementById(\"navBarButton\").style.removeProperty('box-shadow');\r\n        document.getElementById('navBarButton').classList.remove('selected');\r\n\r\n        var containerWidth = document.getElementById(\"container\").clientWidth;\r\n\r\n        //close the sideNav code below\r\n        document.getElementById(\"sideNav\").style.width = \"0px\";\r\n\r\n        // below code reduces card width of player hand\r\n        let handCards = document.getElementsByClassName('playerHandCard');\r\n        Array.from(handCards).forEach(item => item.style.width = '96px');\r\n\r\n        switch(true) {\r\n    \r\n            case ( containerWidth >= 721 ): \r\n                                            // document.getElementById(\"gameContent\").style.width = \"80%\"; \r\n                                            document.getElementById(\"gameContent\").style.width = \"calc( 100% - 275px )\"; \r\n                                            break;\r\n    \r\n            case ( containerWidth >= 481 && containerWidth <= 720):\r\n                                            // document.getElementById(\"gameContent\").style.width = \"70%\";\r\n                                            document.getElementById(\"gameContent\").style.width = \"calc( 100% - 150px )\"; \r\n                                            break;\r\n            \r\n            case ( containerWidth <= 480 ): \r\n                                            document.getElementById(\"gameContent\").style.width = \"100%\";\r\n                                            break;        \r\n        }\r\n\r\n    }\r\n    else {\r\n        document.getElementById(\"sideNav\").style.removeProperty('width');\r\n        document.getElementById(\"gameContent\").style.removeProperty('width');\r\n\r\n\r\n        // document.getElementById(\"navBarButton\").style.backgroundColor = \"rgb(88, 88, 88)\";\r\n        document.getElementById('navBarButton').classList.add('selected');\r\n        document.getElementById(\"navBarButton\").style.backgroundColor = selectedBackground;\r\n        document.getElementById(\"navBarButton\").style.boxShadow = \"white -1.5px 1.5px 1px\";\r\n        \r\n\r\n        var adWidth = document.getElementById(\"adContent\").clientWidth;\r\n        var containerWidth = document.getElementById(\"container\").clientWidth;\r\n\r\n        // below code restores card width of player hand\r\n        let handCards = document.getElementsByClassName('playerHandCard');\r\n        Array.from(handCards).forEach(item => item.style.width = '80px');\r\n    \r\n        switch(true) { \r\n    \r\n        case ( containerWidth >= 721 ): document.getElementById(\"sideNav\").style.width = \"250px\";\r\n                                        document.getElementById(\"gameContent\").style.marginLeft = \"250px\";\r\n                                        // document.getElementById(\"gameContent\").style.width = \"calc( 80% - 250px )\";                                          \r\n                                        // document.getElementById(\"adContent\").style.width = \"20%\";\r\n                                        document.getElementById(\"gameContent\").style.width = \"calc( 100% - 250px - 275px)\";                                          \r\n                                        document.getElementById(\"adContent\").style.width = \"275px\";\r\n                                        break;\r\n    \r\n        case ( containerWidth >= 481 && containerWidth <= 720):\r\n                                        // document.getElementById(\"sideNav\").style.width = \"calc( 70% - \" + scrollBarWidth + \"px)\";\r\n                                        // document.getElementById(\"adContent\").style.width = \"30%\";\r\n                                        document.getElementById(\"sideNav\").style.width = \"calc( 100% - 150px - \" + scrollBarWidth + \"px)\";\r\n                                        document.getElementById(\"adContent\").style.width = \"150px\";\r\n                                        break;\r\n                                        \r\n        case ( containerWidth <= 480 ): \r\n                                        document.getElementById(\"sideNav\").style.width = \"100%\";\r\n                                        break;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n//below is the resize code\r\n\r\nexport function containerResize() {\r\n\r\n// export const containerResize = () => {\r\n\r\n    window.addEventListener('resize', () => {\r\n\r\n        // (window.adsbygoogle = window.adsbygoogle || []).push({});\r\n        \r\n        var scrollBarWidth = document.getElementById(\"area\").offsetWidth - document.getElementById(\"area\").clientWidth;\r\n        document.getElementById(\"adContent\").style.right = scrollBarWidth.toString() + \"px\";\r\n\r\n        // var adContentWidth = document.getElementById(\"adContent\").clientWidth;\r\n        var containerWidth = document.getElementById(\"container\").clientWidth;\r\n\r\n        document.getElementById(\"adContent\").style.removeProperty('width');\r\n        document.getElementById(\"gameContent\").style.removeProperty('width');\r\n\r\n    switch(true) { \r\n\r\n    case ( containerWidth >= 721 ): \r\n\r\n                                    // document.getElementsByClassName(\"sideNavItem\")[document.getElementsByClassName(\"sideNavItem\").length - 1].style.removeProperty('margin-bottom');\r\n                                    document.getElementById('toggleTheme').parentElement.parentElement.style.removeProperty('margin-bottom');\r\n                                    // document.getElementById('adContent').lastChild.firstChild.style.removeProperty('max-height');\r\n\r\n                                    if( ! (document.getElementById(\"sideNav\").style.width > \"0px\") ) {\r\n\r\n                                        // document.getElementById(\"adContent\").style.width = \"20%\";\r\n                                        // document.getElementById(\"gameContent\").style.width = \"80%\";\r\n                                        document.getElementById(\"adContent\").style.width = \"275px\";\r\n                                        document.getElementById(\"gameScreenDetails\").style.width = \"275px\";\r\n                                        document.getElementById(\"gameContent\").style.width = \"calc( 100% - 275px )\";\r\n                                        \r\n                                    }\r\n                                    else {\r\n\r\n                                        document.getElementById(\"sideNav\").style.removeProperty('width');\r\n\r\n                                        // document.getElementById(\"sideNav\").style.width = \"250px\";\r\n                                        // document.getElementById(\"adContent\").style.width = \"20%\";\r\n                                        // var adContentWidth = document.getElementById(\"adContent\").clientWidth;\r\n                                        // document.getElementById(\"gameContent\").style.marginLeft = \"250px\";\r\n                                        // document.getElementById(\"gameContent\").style.width = \"calc(100vw - 250px - \" + adContentWidth + \"px)\";\r\n\r\n                                        document.getElementById(\"sideNav\").style.width = \"250px\";\r\n                                        document.getElementById(\"adContent\").style.width = \"275px\";\r\n                                        document.getElementById(\"gameScreenDetails\").style.width = \"275px\";\r\n                                        // var adContentWidth = document.getElementById(\"adContent\").clientWidth;\r\n                                        document.getElementById(\"gameContent\").style.marginLeft = \"250px\";\r\n                                        document.getElementById(\"gameContent\").style.width = \"calc(100vw - 250px - 275px)\";\r\n\r\n\r\n                                    }\r\n                                    break;\r\n\r\n    case ( containerWidth >= 481 && containerWidth <= 720):\r\n\r\n                                    // document.getElementsByClassName(\"sideNavItem\")[document.getElementsByClassName(\"sideNavItem\").length - 1].style.removeProperty('margin-bottom');\r\n                                    document.getElementById('toggleTheme').parentElement.parentElement.style.removeProperty('margin-bottom');\r\n                                    // document.getElementById('adContent').lastChild.firstChild.style.removeProperty('max-height');\r\n\r\n                                    if( ! (document.getElementById(\"sideNav\").style.width > \"0px\") ) {\r\n\r\n                                        // document.getElementById(\"gameContent\").style.width = \"70%\";\r\n                                        // document.getElementById(\"adContent\").style.width = \"30%\";\r\n                                        document.getElementById(\"gameContent\").style.width = \"calc( 100% - 150px )\";\r\n                                        document.getElementById(\"adContent\").style.width = \"150px\";\r\n                                        document.getElementById(\"gameScreenDetails\").style.width = \"150px\";\r\n\r\n                                    }\r\n                                    else {\r\n\r\n                                        document.getElementById(\"sideNav\").style.removeProperty('width');\r\n                                        document.getElementById(\"gameContent\").style.removeProperty('margin-left');\r\n                                        // document.getElementById(\"sideNav\").style.width = \"calc( 70% - \" + scrollBarWidth + \"px)\";\r\n                                        // document.getElementById(\"gameContent\").style.width = \"70%\";\r\n                                        // document.getElementById(\"adContent\").style.width = \"30%\";\r\n\r\n                                        document.getElementById(\"sideNav\").style.width = \"calc( 100% - 150px - \" + scrollBarWidth + \"px)\";\r\n                                        document.getElementById(\"gameContent\").style.width = \"calc( 100% - 150px )\";\r\n                                        document.getElementById(\"adContent\").style.width = \"150px\";\r\n                                        document.getElementById(\"gameScreenDetails\").style.width = \"150px\";\r\n\r\n                                    }\r\n                                    break;\r\n\r\n    case ( containerWidth <= 480 ):                \r\n\r\n                                    // document.getElementsByClassName(\"sideNavItem\")[document.getElementsByClassName(\"sideNavItem\").length - 1].style.marginBottom = \"20vh\";\r\n                                    document.getElementById('toggleTheme').parentElement.parentElement.style.marginBottom = \"20vh\";\r\n\r\n                                    if( ! (document.getElementById(\"sideNav\").style.width > \"0px\") ) {\r\n\r\n                                        document.getElementById(\"gameContent\").style.removeProperty('margin-left');\r\n\r\n                                        document.getElementById(\"gameContent\").style.width = \"100%\";\r\n                                        document.getElementById(\"adContent\").style.width = \"100%\";\r\n\r\n                                    }\r\n                                    else {\r\n\r\n                                        document.getElementById(\"sideNav\").style.removeProperty('width');\r\n                                        document.getElementById(\"gameContent\").style.removeProperty('margin-left');\r\n\r\n                                        document.getElementById(\"sideNav\").style.width = \"100%\";\r\n                                        document.getElementById(\"adContent\").style.width = \"100%\";\r\n\r\n                                    }\r\n                                    break;\r\n    }\r\n    \r\n    });\r\n\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport {subSideNavClick} from './SubSideNav.scripts'\r\n\r\nconst SubSideNav = ({ theme, subSideNavJson}) => {\r\n    \r\n    return (\r\n        <SubSideNavigation background={theme.SubSideNavBackground}>\r\n\r\n            {subSideNavJson.map((item) => <SubSideNavItem id={item} key={item} fontColor={theme.SubSideNavFontColor} onClick={(item) => subSideNavClick(item)}>{item.replaceAll( \" \", \"\\u00A0\")}</SubSideNavItem>)}\r\n\r\n        </SubSideNavigation>\r\n    )\r\n}\r\n\r\nconst SubSideNavigation = styled.div`\r\n    background-color: ${props => props.background};\r\n    width: calc( 100% - 20px );\r\n    display: none;\r\n    font-size: 18px;\r\n    padding-left: 20px;\r\n`\r\n\r\nconst SubSideNavItem = styled.a`\r\n    display: block;\r\n    padding: 8px 8px 8px 32px;\r\n    color: ${props => props.fontColor};\r\n    cursor: pointer;\r\n`\r\n\r\nexport default SubSideNav\r\n","export const subSideNavClick = (item) => {\r\n\r\n    if( item.target.parentElement.previousSibling.id == \"tables\" ) {\r\n\r\n        switch( item.target.id ) {\r\n        \r\n            case \"All\":\tdocument.getElementById('gameTablesContainer').childNodes.forEach((child) => child.style.removeProperty('display'))\r\n                    break;\r\n            case \"Public\":\tdocument.getElementById('gameTablesContainer').childNodes.forEach((child) => { \r\n                        if(child.id == \"Public\")\r\n                            child.style.removeProperty('display') \r\n                        else\r\n                            child.style.display = \"none\";\r\n                    \r\n                    })\r\n                    break;\r\n            case \"My groups\":document.getElementById('gameTablesContainer').childNodes.forEach((child) => { \r\n                        if(child.id != \"Public\")\r\n                            child.style.removeProperty('display') \r\n                        else\r\n                            child.style.display = \"none\";\r\n                    \r\n                    })\r\n                    break;\r\n    \r\n        }\r\n\r\n        //to move adContent to the right if no scrolls now and scrolls were there before\r\n        window.dispatchEvent(new Event('resize'));\r\n    \r\n    }\r\n\r\n}","import styled from 'styled-components'\r\n\r\nexport const SideNavItemLink = styled.a`\r\n    // background-color: green;\r\n    width: 234px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding: 8px 8px 8px 8px;\r\n    cursor: pointer;\r\n`\r\n\r\nexport const SideNavItemDrop = styled.div`\r\n    // background-color: blue;\r\n    width: 15%;\r\n    color: white;\r\n    font-size: 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const Arrow = styled.div`\r\n    border: solid ${props => props.fontColor};\r\n    border-width: 0 3px 3px 0;\r\n    display: inline-block;\r\n    padding: 3px;\r\n    transform: rotate(45deg);\r\n    transition: 0.5s;\r\n    z-index: -1;\r\n`\r\n\r\nexport const SideNavItemDesc = styled.div`\r\n    // background-color: red;\r\n    width: 85%;\r\n    color: ${props => props.fontColor};\r\n    font-size: 20px;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport SubSideNav from '../SubSideNav/SubSideNav'\r\nimport {sideNavClick} from './SideNavItem.scripts'\r\nimport {SideNavItemLink, SideNavItemDrop, Arrow, SideNavItemDesc} from './SideNavItem.style'\r\n\r\nconst SideNavItem = ({ theme, item, sideNavItemJson}) => {\r\n\r\n    return (\r\n        <div className=\"sideNavItem\">\r\n            <SideNavItemLink id={item.toLowerCase()} onClick={(e) => sideNavClick(e)}>\r\n                \r\n                {sideNavItemJson.length > 1 ? <SideNavItemDrop><Arrow fontColor={theme.SideNavFontColor}/></SideNavItemDrop> \r\n                : <SideNavItemDrop></SideNavItemDrop>}\r\n\r\n                <SideNavItemDesc fontColor={theme.SideNavFontColor}>{item.replaceAll( \" \", \"\\u00A0\")}</SideNavItemDesc>\r\n            </SideNavItemLink>\r\n        \r\n            <SubSideNav theme={theme} subSideNavJson={sideNavItemJson} />\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideNavItem\r\n","export function sideNavClick(e) {\r\n\r\n    var arrow = e.target.closest('.sideNavItem').firstChild.firstChild.firstChild;\r\n    var node = e.target.closest('.sideNavItem').lastChild;\r\n\r\n    if( node != null && arrow != null ) {\r\n        if ( node.style.display == \"block\" ) {\r\n            node.style.display = \"none\";\r\n            arrow.style.transform = \"rotate( 45deg)\";\r\n        }\r\n        else {    \r\n            node.style.display = \"block\";\r\n            arrow.style.transform = \"rotate( 225deg)\";\r\n        }\r\n    }\r\n\r\n}","export function sideNavDetect( SideNavItems, sideNavJson) {\r\n\r\n    if( Object.keys(SideNavItems).length > 0) {\r\n\r\n        SideNavItems.forEach((item) => {\r\n\r\n            var temp = [];\r\n\r\n            if(item.item_type == \"F\") {\r\n                //dropdowns, main\t\r\n                SideNavItems.forEach((innerItem) => {\r\n\r\n                    if(innerItem.parent_folder.toLowerCase() == item.item_name.toLowerCase())\r\n                        temp.push(innerItem.item_name);\r\n\r\n                });\r\n\r\n                sideNavJson[item.item_name] = temp;\r\n\r\n            }\r\n            else if(item.parent_folder == \"root\") {\r\n                //no dropdowns, main\r\n                sideNavJson[item.item_name] = temp;\r\n            }\r\n\r\n        }); \r\n\r\n    }\r\n\r\n}","import styled from 'styled-components'\r\n\r\nexport const SideNavigation = styled.div`\r\n    background-color: ${props => props.background};\r\n    height: calc( 100vh - 60px );\r\n    width: 0px;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    transition: 0.5s;\r\n    position: fixed;\r\n`\r\n\r\nexport const ToggleSwitchContainer = styled.div`\r\n    color: ${props => props.fontColor};\r\n    font-size: 15px;\r\n    // display: block;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    // flex-wrap: wrap;\r\n`\r\n\r\nexport const ToggleSwitchText = styled.span`\r\n    font-weight: 600;\r\n    padding: 7px;\r\n`","import React from 'react'\r\nimport './ToggleSwitch.css'\r\n\r\n// import App from '../../../../App'\r\n\r\nconst ToggleSwitch = ({ item, handler}) => {    \r\n\r\n    // const t = (e) => {debugger; App.testertheme()}\r\n\r\n    return (\r\n        <label className=\"switch\">\r\n            <input id={item} type=\"checkbox\" onChange={(e) => handler.toggleSwitchHandler(e)}/>\r\n            <span className=\"slider round\"></span>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default ToggleSwitch\r\n","import React from 'react'\r\nimport {useState} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport SideNavItem from './SideNavItem/SideNavItem'\r\nimport {sideNavDetect} from './SideNav.scripts'\r\nimport {SideNavigation, ToggleSwitchContainer, ToggleSwitchText} from './SideNav.style'\r\nimport ToggleSwitch from '../Misc/ToggleSwitch/ToggleSwitch'\r\n\r\nconst SideNav = ({ theme, SideNavItems,handler}) => {\r\n\r\n    // const [ SideNavItems, setSideNavItems] = useState ([{\"seq_no\":0,\"item_type\":\"item_t\",\"parent_folder\":\"Parent folder\",\"item_name\":\"item_name\",\"page\":\"page\",\"icon\":\"icon\"},\r\n    //     {\"seq_no\":1,\"item_type\":\"P\",\"parent_folder\":\"root\",\"item_name\":\"Home\",\"page\":\".\\/home.html\",\"icon\":\".\\/graphics\\/home.png\"},\r\n    //     {\"seq_no\":2,\"item_type\":\"F\",\"parent_folder\":\"root\",\"item_name\":\"Tables\",\"page\":\".\\/tables.html\",\"icon\":\".\\/graphics\\/matches.png\"},\r\n    //     {\"seq_no\":3,\"item_type\":\"P\",\"parent_folder\":\"tables\",\"item_name\":\"All\",\"page\":\".\\/allmatches.html\",\"icon\":\".\\/graphics\\/matches.png\"},\r\n    //     {\"seq_no\":4,\"item_type\":\"P\",\"parent_folder\":\"tables\",\"item_name\":\"Public\",\"page\":\".\\/public.html\",\"icon\":\".\\/graphics\\/matches.png\"},\r\n    //     {\"seq_no\":5,\"item_type\":\"P\",\"parent_folder\":\"tables\",\"item_name\":\"My groups\",\"page\":\".\\/mygroup.html\",\"icon\":\".\\/graphics\\/matches.png\"},\r\n    //     {\"seq_no\":6,\"item_type\":\"P\",\"parent_folder\":\"root\",\"item_name\":\"My Statistics\",\"page\":\".\\/mystats.html\",\"icon\":\".\\/graphics\\/myaccount.png\"},\r\n    //     {\"seq_no\":7,\"item_type\":\"P\",\"parent_folder\":\"root\",\"item_name\":\"My match logs\",\"page\":\".\\/matchlog.php\",\"icon\":\".\\/graphics\\/log.png\"},\r\n    //     {\"seq_no\":8,\"item_type\":\"P\",\"parent_folder\":\"root\",\"item_name\":\"Suggestions\",\"page\":\".\\/suggestions.php\",\"icon\":\".\\/graphics\\/feedback.png\"},\r\n    //     {\"seq_no\":9,\"item_type\":\"P\",\"parent_folder\":\"root\",\"item_name\":\"User Settings\",\"page\":\".\\/usersetting.php\",\"icon\":\".\\/graphics\\/usersettings.png\"},\r\n    //     {\"seq_no\":10,\"item_type\":\"F\",\"parent_folder\":\"root\",\"item_name\":\"Help\",\"page\":\"\",\"icon\":\".\\/graphics\\/help.png\"},\r\n    //     {\"seq_no\":11,\"item_type\":\"P\",\"parent_folder\":\"Help\",\"item_name\":\"Site Help\",\"page\":\".\\/sitehelp.html\",\"icon\":\".\\/graphics\\/help.png\"},\r\n    //     {\"seq_no\":12,\"item_type\":\"P\",\"parent_folder\":\"Help\",\"item_name\":\"56 Bidding rules\",\"page\":\".\\/56 bidding rules.html\",\"icon\":\".\\/graphics\\/help.png\"}\r\n    // ])\r\n\r\n    var sideNavJson = [];\r\n\r\n    return (\r\n        <SideNavigation background={theme.SideNavBackground} id=\"sideNav\">\r\n            {sideNavDetect( SideNavItems, sideNavJson)}\r\n\r\n            {\r\n                Object.keys(sideNavJson).map( (item) => \r\n                    <SideNavItem key={item} theme={theme} item={item} sideNavItemJson={sideNavJson[item]}/>\r\n                )\r\n            }\r\n\r\n            <div style={{display: \"block\"}}>\r\n            <ToggleSwitchContainer fontColor={theme.SideNavFontColor}>\r\n                <ToggleSwitchText>Light</ToggleSwitchText>\r\n                <ToggleSwitch item={\"toggleTheme\"} handler={handler}/>\r\n                <ToggleSwitchText>Dark</ToggleSwitchText>\r\n            </ToggleSwitchContainer>\r\n            </div>\r\n        </SideNavigation>\r\n    )\r\n}\r\n\r\nexport default SideNav\r\n","import styled from 'styled-components'\r\n\r\nexport const Tile = styled.a`\r\n\r\n    @media (max-width: 480px) {\r\n        height: 180px;\r\n        width: 42.5%;\r\n        // color: #337ab7;\r\n        margin: 5% 0% 5% 5%;\r\n        padding: 10px 0px 10px 0px;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        min-height: 180px;\r\n        height: auto;\r\n        width: 42.5%;\r\n        margin: 5% 0% 5% 5%;\r\n        // color: #337ab7;\r\n        padding: 10px 0px 10px 0px; \r\n    }\r\n    @media (min-width: 721px) {\r\n        min-height: 200px;\r\n        height: auto;\r\n        width: 220px;\r\n        // height: 200px;\r\n        // width: 250px;\r\n        margin: 20px;\r\n        padding: 15px;\r\n    }\r\n\r\n    text-decoration: none;\r\n    // height: 200px;\r\n    // width: 250px;\r\n    // margin: 20px;\r\n    background: ${props => props.background};\r\n    color: ${props => props.fontColor};\r\n    box-shadow: 0 4px 8px 0 rgb(0 0 0 / 20%);\r\n    // padding: 15px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        // background: rgba( 255, 255, 255, 0.6);\r\n        box-shadow: 0px 0px 5px 3px white;\r\n    }\r\n\r\n`\r\n\r\nexport const TileAdd = styled.div`\r\n\r\n@media (max-width: 480px) {\r\n    font-size: 80px;\r\n}\r\n@media (min-width: 481px) and (max-width: 720px) {\r\n    font-size: 100px;\r\n}\r\n@media (min-width: 721px) {\r\n    font-size: 100px;\r\n}\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    /* min-height: 200px; */\r\n    // font-size: 100px;\r\n`\r\n\r\nexport const TileName = styled.div`\r\n\r\n@media (max-width: 480px) {\r\n    font-size: 18px;\r\n}\r\n@media (min-width: 481px) and (max-width: 720px) {\r\n    font-size: 18px;\r\n}\r\n@media (min-width: 721px) {\r\n    font-size: 22px;\r\n}\r\n\r\n    // font-size: 25px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nexport const TilePlayers = styled.div`\r\n\r\n@media (max-width: 480px) {\r\n   font-size: 44px;\r\n}\r\n@media (min-width: 481px) and (max-width: 720px) {\r\n    font-size: 44px;\r\n}\r\n@media (min-width: 721px) {\r\n    font-size: 44px;\r\n}\r\n\r\n    // font-size: 50px;\r\n    margin-bottom: 15px;\r\n`\r\n\r\nexport const TileDifficulty = styled.div`\r\n\r\n@media (max-width: 480px) {\r\n    font-size: 16px;\r\n}\r\n@media (min-width: 481px) and (max-width: 720px) {\r\n    font-size: 16px;\r\n}\r\n@media (min-width: 721px) {\r\n    font-size: 18px;\r\n}\r\n\r\n    // font-size: 20px;\r\n    margin-bottom: 15px;\r\n`\r\n\r\nexport const TileStatus = styled.div`\r\n\r\n@media (max-width: 480px) {\r\n    font-size: 16px;\r\n}\r\n@media (min-width: 481px) and (max-width: 720px) {\r\n    font-size: 16px;\r\n}\r\n@media (min-width: 721px) {\r\n    font-size: 18px;\r\n}\r\n\r\n    // font-size: 20px;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport {Tile, TileName, TileAdd, TilePlayers, TileDifficulty, TileStatus} from './Table.style'\r\n\r\nconst Table = ({ theme, tile, groupID, handler}) => {\r\n    \r\n    const bgSelect = (background) => {\r\n\r\n        if( background == \"public\")\r\n            return theme.PublicTileBackground;\r\n        else    \r\n            return theme.PrivateTileBackground;\r\n\r\n    }\r\n    \r\n    return (\r\n\r\n        <Tile id={tile.Name} className={tile.BackGround + \" \" + tile.TileType + \" gameTile\"} data-groupid={groupID.GroupID} data-matchid={tile.MatchID} data-mymatch={tile.MyMatch} onClick={((e) => handler.gameTileClick(e))} background={() => bgSelect(tile.BackGround)} fontColor={theme.TileFontColor}>\r\n            <TileName>{tile.Name}</TileName>\r\n\r\n            {tile.TileType == \"createTile\" ? \r\n                <>\r\n                    <TileAdd>+</TileAdd>\r\n                </>\r\n            :\r\n                <>\r\n                    <TilePlayers>{tile.Players}</TilePlayers>\r\n                    <TileDifficulty>{tile.Difficulty}</TileDifficulty>\r\n                    <TileStatus>{tile.Status}</TileStatus>\r\n                </>\r\n            }\r\n\r\n\r\n        </Tile>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport {useState} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Table from '../Table/Table'\r\nimport { sortTables, getTimestamp, apiTest} from './GameTables.scripts'\r\n// import {getTimestamp} from './GameTables.scripts'\r\n\r\nconst GameTables = ({ theme, TableContent, setTableContent, handler}) => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <GameTablesContainer id=\"gameTablesContainer\">\r\n\r\n            {Object.keys(TableContent).map((item) => (\r\n                <TableGroup id={item} key={item} >\r\n                    <TableGroupDesc key={item} fontColor={theme.TileFontColor}>{item}</TableGroupDesc>\r\n\r\n\r\n                    {\r\n                        Object.keys(TableContent[item]).slice(1).map((itemSub) => \r\n                        <Table key={itemSub} theme={theme} tile={TableContent[item][itemSub]} groupID={TableContent[item][0]} handler={handler} />\r\n                        // console.log(TableContent[item][itemSub])\r\n                        )\r\n                    }\r\n\r\n                    {/* {console.log(item)} */}\r\n\r\n                </TableGroup>\r\n            \r\n            ))}\r\n\r\n        </GameTablesContainer>\r\n    )\r\n}\r\n\r\nconst GameTablesContainer = styled.div`\r\n    display: none;\r\n`\r\n\r\nconst TableGroup = styled.div`\r\n    // width: 100%;\r\n    // background-color: blue;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n`\r\n\r\nconst TableGroupDesc = styled.span`\r\n    width: 100%;\r\n    height: 50px;\r\n    padding: 10px 10px 10px 32px;\r\n    font-size: 20px;\r\n    color: ${props => props.fontColor};\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nexport default GameTables\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { checkBidTitle } from '../../../../../../App.scripts';\r\nimport { commandCalls } from '../../../../Misc/Timestamp.scripts';\r\n\r\nvar currentBid = \"\";\r\n\r\nconst BiddingKeyboard = ({states}) => {\r\n\r\n    // below function called when bid buttons are clicked\r\n    const bidButtonHandler = (e) => {\r\n\r\n        // if ( states.MatchState.Chairs[1].PlayerTurn == 'Y' ) {\r\n\r\n            // below code makes sure currentBid variable value is reset if previous call was double, pass, clear\r\n            // switch (currentBid) {\r\n\r\n            //     case 'double'   :\r\n            //     case 'redouble' :\r\n            //     case 'allpass'  :\r\n            //     case 'reset'    :\r\n            //                         currentBid = \"\";\r\n            //     default         :\r\n\r\n            // }\r\n\r\n\r\n            currentBid += e.target.getAttribute('data-bidvalue');\r\n\r\n            states.setProcessCommandValues(values =>({\r\n                ...values,\r\n                MyBid: currentBid\r\n            }))\r\n    \r\n        // }\r\n\r\n        // setTimeout(() => states.setBiddingKeyboardValues({\"suits\":{\"0\":\"hearts\",\"1\":\"clubs\",\"2\":\"diams\",\"3\":\"noos\",\"4\":\"notr\"},\"numbers\":{\"0\":29,\"1\":30,\"2\":31,\"3\":32,\"4\":33,\"5\":34,\"6\":35,\"7\":36,\"8\":37,\"9\":38,\"10\":39,\"11\":40,\"12\":41,\"13\":42,\"14\":43,\"15\":44,\"16\":45,\"17\":46,\"18\":47,\"19\":48,\"20\":49,\"21\":50,\"22\":51,\"23\":52,\"24\":53,\"25\":54,\"26\":55,\"27\":56},\"actions\":{\"0\":\"+\",\"1\":\"+1\",\"2\":\"+2\",\"3\":\"+3\",\"4\":\"+4\",\"5\":\"pass\",\"6\":\"reset\"},\"others\":{},\"myBid\":\"\"}), 5000);\r\n\r\n        \r\n    }\r\n\r\n    const bidActionHandler = (e) => {\r\n        // if ( states.MatchState.Chairs[1].PlayerTurn == 'Y' ) {\r\n\r\n            switch ( e.target.innerText ) {\r\n                \r\n                case 'Double'   :   \r\n                                    // console.log('Double');\r\n                                    currentBid = e.target.getAttribute('data-bidvalue');\r\n                                    break;\r\n                case 'Re-Double':   \r\n                                    // console.log('Double');\r\n                                    currentBid = e.target.getAttribute('data-bidvalue');\r\n                                    break;\r\n                case 'Pass'     :   \r\n                                    // console.log('Pass');\r\n                                    if ( currentBid == '28' )\r\n                                        currentBid += e.target.getAttribute('data-bidvalue');\r\n                                    else\r\n                                        currentBid = e.target.getAttribute('data-bidvalue');\r\n                                    break;\r\n                case 'All Pass'     :   \r\n                                    // console.log('Pass');\r\n                                    currentBid = e.target.getAttribute('data-bidvalue');\r\n                                    break;\r\n                case 'Clear'    :   \r\n                                    // console.log('Clear');\r\n                                    currentBid = e.target.getAttribute('data-bidvalue');\r\n                                    // send code to clear, delete below temp code\r\n\r\n\r\n                                    // document.getElementById('biddingKeyboardTitle').innerText = 'Place your Bid';\r\n\r\n                                    // document.getElementById('bidActionPassClear').innerText = 'Pass';\r\n                                    // document.getElementById('bidActionPassClear').setAttribute('data-bidvalue', 'pass');\r\n\r\n\r\n\r\n                                    break;\r\n                case 'Reconfirm':   \r\n                                    currentBid += e.target.getAttribute('data-bidvalue');\r\n                                    break;\r\n                // case 'Fold'     :   \r\n                                    // console.log('commandCalls', [\"FoldDiscardedCards\"]);\r\n                                    // commandCalls([\"FoldDiscardedCards\"], states);\r\n                                    // currentBid += e.target.getAttribute('data-bidvalue');\r\n                                    // break;\r\n                default:\r\n\r\n            }\r\n\r\n            // console.log(currentBid);\r\n\r\n            states.setProcessCommandValues(values =>({\r\n                ...values,\r\n                MyBid: currentBid\r\n            }))\r\n\r\n        // }\r\n        // setTimeout(() => states.setBiddingKeyboardValues({\"suits\":{\"0\":\"hearts\",\"1\":\"clubs\",\"2\":\"diams\",\"3\":\"noos\",\"4\":\"notr\"},\"numbers\":{\"0\":29,\"1\":30,\"2\":31,\"3\":32,\"4\":33,\"5\":34,\"6\":35,\"7\":36,\"8\":37,\"9\":38,\"10\":39,\"11\":40,\"12\":41,\"13\":42,\"14\":43,\"15\":44,\"16\":45,\"17\":46,\"18\":47,\"19\":48,\"20\":49,\"21\":50,\"22\":51,\"23\":52,\"24\":53,\"25\":54,\"26\":55,\"27\":56},\"actions\":{\"0\":\"+\",\"1\":\"+1\",\"2\":\"+2\",\"3\":\"+3\",\"4\":\"+4\",\"5\":\"double\",\"6\":\"reset\",\"7\":\"allpass\"},\"others\":{},\"myBid\":\"\"}), 1000);\r\n        // states.setBiddingKeyboardValues({\"suits\":{},\"numbers\":{},\"actions\":{},\"others\":{\"0\":\"reconfirm\"},\"myBid\":\"double\"})\r\n        // states.setBiddingKeyboardValues({\"suits\":{},\"numbers\":{},\"actions\":{\"0\":\"reset\"},\"others\":{\"0\":\"reconfirm\"},\"myBid\":\"pass\",\"MessagePart1\":\"Confirm your bid\",\"MessagePart2\":null,\"MessagePart3\":null});\r\n        // states.setMatchState({\"MatchStatus\":\"PlaceBid\",\"NumberOfPlayers\":4,\"AllowedHelpLevel\":null,\"MaxPlay\":\"GM8\",\"GameRules\":\"INT\",\"PlayerLevel\":\"I\",\"EnforceFollowSuit\":\"Y\",\"ShowGamePoints\":\"Y\",\"ShowRemainingPoints\":\"Y\",\"EnableAllPass\":\"N\",\"PublicMatch\":null,\"MatchAdmin\":\"Y\",\"MinimumWaitSeconds\":0,\"RefreshRequired\":\"N\",\"LastRefreshTimestamp\":\"2021-04-28 09:00:00\",\"ElapsedSeconds\":957,\"RefreshCalls\":{\"0\": \"GetCurrentPlayerHand\",\"1\": \"CallBiddingKeyboard\",\"2\": \"GetMatchScoreBoard\",\"3\": \"GetDiscardCards\"},\"Chairs\":{\"1\":{\"ChairNo\":3,\"PlayerName\":\"federer\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"N\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"Y\",\"ChairEmpty\":\"N\",\"LastBid\":{\"1\":\"diams\",\"2\":\"+2\",\"3\":\"(42)\"}},\"2\":null,\"3\":{\"ChairNo\":4,\"PlayerName\":\"nadal\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Y\",\"MatchAdmin\":\"Y\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":{\"1\":\"spades\",\"2\":\"+2\",\"3\":\"(32)\"}},\"4\":null,\"5\":{\"ChairNo\":1,\"PlayerName\":\"djokovic\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"N\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":{\"1\":\"spades\",\"2\":\"+2\",\"3\":\"(32)\"}},\"6\":null,\"7\":{\"ChairNo\":2,\"PlayerName\":\"AJM\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"N\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":{\"1\":\"diams\",\"2\":\"+2\",\"3\":\"(32)\"}},\"8\":null}})\r\n        // states.setMatchState({\"MatchStatus\":\"PlaceBid\",\"NumberOfPlayers\":4,\"AllowedHelpLevel\":null,\"MaxPlay\":\"GM8\",\"GameRules\":\"INT\",\"PlayerLevel\":\"I\",\"EnforceFollowSuit\":\"Y\",\"ShowGamePoints\":\"Y\",\"ShowRemainingPoints\":\"Y\",\"EnableAllPass\":\"N\",\"PublicMatch\":null,\"MatchAdmin\":\"Y\",\"MinimumWaitSeconds\":0,\"RefreshRequired\":\"N\",\"LastRefreshTimestamp\":\"2021-04-28 09:00:00\",\"ElapsedSeconds\":957,\"RefreshCalls\":{\"0\": \"GetCurrentPlayerHand\",\"1\": \"CallBiddingKeyboard\",\"2\": \"GetMatchScoreBoard\",\"3\": \"GetDiscardCards\"},\"Chairs\":{\"1\":{\"ChairNo\":3,\"PlayerName\":\"federer\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"N\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"Y\",\"ChairEmpty\":\"N\",\"LastBid\":\"\"},\"2\":null,\"3\":{\"ChairNo\":4,\"PlayerName\":\"nadal\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Y\",\"MatchAdmin\":\"Y\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":\"\"},\"4\":null,\"5\":{\"ChairNo\":1,\"PlayerName\":\"djokovic\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"N\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":\"\"},\"6\":null,\"7\":{\"ChairNo\":2,\"PlayerName\":\"AJM\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"N\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":\"\"},\"8\":null}})\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        document.getElementById('bidActionDoubleRedouble').style.display = 'none';\r\n        document.getElementById('bidActionAllPass').style.display = 'none';\r\n        document.getElementById('bidActionClear').style.display = 'none';\r\n        document.getElementById('bidActionPass').style.display = 'none';\r\n        document.getElementById('bidActionReconfirmed').style.display = 'none';\r\n        // document.getElementById('bidActionFoldButton').style.display = 'none';\r\n\r\n        // if ( (states.BiddingKeyboardValues.myBid == '')  || (states.ProcessCommandValues.MyBid == 'reset') ) \r\n        //     currentBid = '';\r\n        // else    \r\n        //     currentBid = states.BiddingKeyboardValues.myBid;\r\n\r\n\r\n\r\n\r\n        // if others field is empty, since it's used for reconfirm\r\n        // if ( Object.keys(states.BiddingKeyboardValues.others).length == 0 ) {\r\n\r\n            {Object.keys(states.BiddingKeyboardValues.actions).forEach(item => {\r\n\r\n                // below code is for initializing display of bidActionButtons \r\n\r\n                switch( states.BiddingKeyboardValues.actions[item] ) {\r\n\r\n                    case 'double'   :   document.getElementById('bidActionDoubleRedouble').style.display = 'flex';\r\n                                        document.getElementById('bidActionDoubleRedouble').innerText = 'Double';\r\n                                        document.getElementById('bidActionDoubleRedouble').setAttribute('data-bidvalue', 'double');\r\n                                        break;\r\n                    case 'redouble' :   document.getElementById('bidActionDoubleRedouble').style.display = 'flex';\r\n                                        document.getElementById('bidActionDoubleRedouble').innerText = 'Re-Double';\r\n                                        document.getElementById('bidActionDoubleRedouble').setAttribute('data-bidvalue', 'redouble');\r\n                                        break;\r\n                    case 'allpass'  :\r\n                                        document.getElementById('bidActionAllPass').style.display = 'flex';\r\n                                        break;\r\n                    case 'pass'     :   document.getElementById('bidActionPass').style.display = 'flex';\r\n                                        // document.getElementById('bidActionPassClear').innerText = 'Pass';\r\n                                        // document.getElementById('bidActionPassClear').setAttribute('data-bidvalue', 'pass')\r\n                                        break;\r\n\r\n                    case 'reset'    :   document.getElementById('bidActionClear').style.display = 'flex';\r\n                                        // document.getElementById('bidActionPassClear').innerText= 'Clear';\r\n                                        // document.getElementById('bidActionPassClear').setAttribute('data-bidvalue', 'reset');\r\n                                        break;\r\n                    default     :   \r\n\r\n                }\r\n\r\n            })}\r\n\r\n        // }\r\n        // else runs when reconfirm is present\r\n        // else {\r\n            Object.keys(states.BiddingKeyboardValues.others).forEach(item => {\r\n\r\n                switch ( states.BiddingKeyboardValues.others[item] ) {\r\n\r\n                    case 'reconfirm'    :   document.getElementById('bidActionReconfirmed').style.display = 'flex';\r\n                                            break;\r\n                    default :\r\n\r\n                }\r\n                \r\n            })\r\n            \r\n        // }\r\n\r\n        //  if complete bid\r\n        //      put myBid as MyBid and call CallBiddingKeyboard\r\n\r\n        if ( states.BiddingKeyboardValues.CompleteBid !== 'Y' ) {\r\n\r\n        //     // call CallBiddingKeyboard with same ProcessCommand MyBid value\r\n        //     // console.log('commandCalls', [\"CallBiddingKeyboard\"]);\r\n        //     // commandCalls([\"CallBiddingKeyboard\"], states);\r\n\r\n        //     // states.setProcessCommandValues(values => ({\r\n        //     //     ...values,\r\n        //     //     MyBid: states.BiddingKeyboardValues.myBid\r\n        //     // }))\r\n\r\n        // }\r\n        // else {\r\n\r\n            // currentBid value should be directly taken from values sent by backend\r\n            currentBid = states.BiddingKeyboardValues.myBid;\r\n            \r\n            console.log(currentBid)\r\n\r\n            states.setProcessCommandValues(values => ({\r\n                ...values,\r\n                MyBid: \"\"\r\n            }))\r\n        }\r\n\r\n            \r\n\r\n        checkBidTitle();\r\n\r\n    }, [states.BiddingKeyboardValues])\r\n\r\n    React.useEffect(() => {\r\n\r\n        \r\n\r\n        if ( (states.ProcessCommandValues.MyBid !== '') ) {\r\n\r\n            console.log(states.ProcessCommandValues.MyBid);\r\n            console.log('commandCalls', [\"CallBiddingKeyboard\"]);\r\n            commandCalls([\"CallBiddingKeyboard\"], states);\r\n            // reset myBid inside ProcessCommand, currentBid doesn't change\r\n            // states.setProcessCommandValues(values => ({\r\n            //     ...values,\r\n            //     MyBid: \"\"\r\n            // }))\r\n        }\r\n\r\n    }, [states.ProcessCommandValues.MyBid])\r\n\r\n    React.useEffect(() => {\r\n\r\n        // below is the code for resetting ProcessCommand MyBid when MatchStatus is PlayCard\r\n\r\n        if ( states.MatchState.MatchStatus == 'PlayCard' ) {\r\n\r\n            states.setProcessCommandValues(values => ({\r\n                ...values,\r\n                MyBid: \"\"\r\n            }))\r\n\r\n        }\r\n\r\n        \r\n\r\n    }, [states.MatchState])\r\n\r\n    return (\r\n        <BiddingKeyboardContainer id=\"biddingKeyboard\">\r\n                \r\n            <BiddingKeyboardButtons>\r\n\r\n                <BiddingKeyboardTitle id=\"biddingKeyboardTitle\">\r\n                    <TitlePart className=\"biddingKeyboardTitlePart\" >{states.BiddingKeyboardValues.MessagePart1}</TitlePart>\r\n                    <TitlePart className=\"biddingKeyboardTitlePart\" >{states.BiddingKeyboardValues.MessagePart2}</TitlePart>\r\n                    <TitlePart className=\"biddingKeyboardTitlePart\" >{states.BiddingKeyboardValues.MessagePart3}</TitlePart>\r\n                </BiddingKeyboardTitle>\r\n\r\n                <BiddingKeyboardButtonsSuits id=\"biddingKeyboardSuits\" >\r\n\r\n                    {Object.keys(states.BiddingKeyboardValues.suits).map(item => {\r\n\r\n                        switch  ( states.BiddingKeyboardValues.suits[item] ) {\r\n\r\n                            case 'hearts'   :\r\n                                                return <BidButton key={item} className=\"bidButton suit\" data-bidvalue=\"hearts\" bg={\"https://www.56cardgameonline.com/newdesign/others/hearts.PNG\"} onClick={e => bidButtonHandler(e)} ></BidButton>\r\n                            case 'clubs'    :\r\n                                                return <BidButton key={item} className=\"bidButton suit\" data-bidvalue=\"clubs\" bg={\"https://www.56cardgameonline.com/newdesign/others/clubs.PNG\"} onClick={e => bidButtonHandler(e)} ></BidButton>\r\n                            case 'spades'   :\r\n                                                return <BidButton key={item} className=\"bidButton suit\" data-bidvalue=\"spades\" bg={\"https://www.56cardgameonline.com/newdesign/others/spades.PNG\"} onClick={e => bidButtonHandler(e)} ></BidButton>\r\n                            case 'diams'    :\r\n                                                return <BidButton key={item} className=\"bidButton suit\" data-bidvalue=\"diams\" bg={\"https://www.56cardgameonline.com/newdesign/others/diams.PNG\"} onClick={e => bidButtonHandler(e)} ></BidButton>\r\n                            case 'noos'     :\r\n                                                return <BidButton key={item} className=\"bidButton suit\" data-bidvalue=\"NS\" onClick={e => bidButtonHandler(e)} >NS</BidButton>\r\n                            case 'notr'     :\r\n                                                return <BidButton key={item} className=\"bidButton suit\" data-bidvalue=\"NT\" onClick={e => bidButtonHandler(e)} >NT</BidButton>\r\n                            default         :\r\n\r\n                        }\r\n\r\n                    })}\r\n\r\n                </BiddingKeyboardButtonsSuits>\r\n\r\n                <BiddingKeyboardButtonsActions id=\"biddingKeyboardActions\" >\r\n\r\n                    {Object.keys(states.BiddingKeyboardValues.actions).map(item => {\r\n\r\n                        switch( states.BiddingKeyboardValues.actions[item] ) {\r\n\r\n                            case 'double'   : \r\n                            case 'redouble' :  \r\n                            case 'allpass'  :   \r\n                            case 'pass'     :   \r\n                            case 'reset'    :\r\n                                                return;\r\n\r\n                            default         :   return <BidButton key={item} className=\"bidButton actions\" data-bidvalue={states.BiddingKeyboardValues.actions[item]} onClick={e => bidButtonHandler(e)} >{states.BiddingKeyboardValues.actions[item]}</BidButton>\r\n\r\n                        }\r\n            \r\n                    })}\r\n\r\n                </BiddingKeyboardButtonsActions>\r\n\r\n                <BiddingKeyboardButtonsNumbers id=\"biddingKeyboardNumbers\" >\r\n\r\n                    {Object.keys(states.BiddingKeyboardValues.numbers).map(item => \r\n                        <BidButton key={item} className=\"bidButton numbers\" data-bidvalue={states.BiddingKeyboardValues.numbers[item]} onClick={e => bidButtonHandler(e)} >{states.BiddingKeyboardValues.numbers[item]}</BidButton>\r\n                    )}\r\n\r\n                </BiddingKeyboardButtonsNumbers>\r\n\r\n                <BidAction id=\"bidActionReconfirmed\" className=\"actions\" data-bidvalue='reconfirmed' onClick={e => bidActionHandler(e)} top=\"calc( (100% - 50px) * 0.5  )\" left=\"calc( (100% - 90px) / 2 )\" >Reconfirm</BidAction>\r\n\r\n\r\n            </BiddingKeyboardButtons>\r\n\r\n            <BiddingKeyboardAction>\r\n\r\n                <BidAction id=\"bidActionDoubleRedouble\" className=\"actions\" data-bidvalue='double' onClick={e => bidActionHandler(e)} top=\"calc( (100% - 200px) * 0.35 )\" left=\"calc( (100% - 90px) / 2 )\" >Double</BidAction>\r\n                <BidAction id=\"bidActionAllPass\" className=\"actions\" data-bidvalue='allpass' onClick={e => bidActionHandler(e)} top=\"calc( ( (100% - 200px) * 0.45 ) + 50px )\" left=\"calc( (100% - 90px) / 2 )\" >All Pass</BidAction>\r\n                <BidAction id=\"bidActionClear\" className=\"actions\" data-bidvalue='reset' onClick={e => bidActionHandler(e)} top=\"calc( ( (100% - 200px) * 0.55 ) + 100px )\" left=\"calc( (100% - 90px) / 2 )\" >Clear</BidAction>\r\n                <BidAction id=\"bidActionPass\" className=\"actions\" data-bidvalue='pass' onClick={e => bidActionHandler(e)} top=\"calc( ( (100% - 200px) * 0.65 ) + 150px )\" left=\"calc( (100% - 90px) / 2 )\" >Pass</BidAction>\r\n\r\n            </BiddingKeyboardAction>\r\n\r\n            {/* <BidAction id=\"bidActionFoldButton\" className=\"actions\" data-bidvalue='fold' onClick={e => bidActionHandler(e)} top=\"calc( (100% - 50px) * 0.5  )\" left=\"calc( (100% - 90px) / 2 )\" >Fold</BidAction> */}\r\n\r\n\r\n        </BiddingKeyboardContainer>\r\n    )\r\n}\r\n\r\nconst BiddingKeyboardContainer = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    // display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    display: none;\r\n    overflow-y: auto;\r\n`\r\n\r\nconst BiddingKeyboardButtons = styled.div`\r\n    height: 100%;\r\n    width: calc( 80% - 100px );\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    // background-color: red;\r\n`\r\n\r\nconst BiddingKeyboardTitle = styled.div`\r\n    height: 15%;\r\n    // width: calc( 80% - 100px );\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    // background-color: purple;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: white;\r\n`\r\n\r\nconst TitlePart = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex;\r\n    height: 100%;\r\n    // background-color: yellow;\r\n    margin-left: 15px;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: 60%;\r\n    color: white;\r\n`\r\n\r\nconst BiddingKeyboardAction = styled.div`\r\n    height: 100%;\r\n    width: calc( 20% );\r\n    // background-color: blue;\r\n    position: relative;\r\n`\r\n\r\nconst BidButton = styled.div`\r\n    height: 35px;\r\n    width: 35px;\r\n    background-color: white;\r\n    margin-left: 10px;\r\n    border-radius: 5px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n\r\n    background-image: url(${props => props.bg});\r\n    background-size: 75%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n`\r\n\r\nconst BidAction = styled.div`\r\n    height: 50px;\r\n    width: 90px;\r\n    background-color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    position: absolute;\r\n    top: ${props => props.top};\r\n    left: ${props => props.left};\r\n    border-radius: 5px;\r\n\r\n    // display: flex;\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n`\r\n\r\nconst BiddingKeyboardButtonsSuits = styled.div`\r\n    height: 14%;\r\n    width: 100%;\r\n    // background-color: yellow;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst BiddingKeyboardButtonsActions = styled.div`\r\n    height: 14%;\r\n    width: 100%;\r\n    // background-color: lightblue;    \r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst BiddingKeyboardButtonsNumbers = styled.div`\r\n    height: 55%;\r\n    width: 100%;\r\n    // background-color: gray;\r\n    margin-top: 1%;\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nexport default BiddingKeyboard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BiddingKeyboard from './BiddingKeyboard/BiddingKeyboard'\r\n\r\nimport { commandCalls } from '../../../Misc/Timestamp.scripts'\r\n\r\nconst discardCardsLoc = {\"1\":{\"top\":\"calc( 100% - 100px )\", \"left\":\"calc( (100% - 74px) / 2)\"}, \"2\":{\"top\":\"calc( 100% - 100px )\", \"left\":\"calc( 100% - 74px )\"}, \"3\":{\"top\":\"calc( (100% - 100px) / 2 )\", \"left\":\"calc( 100% - 74px )\"}, \"4\":{\"top\":\"0\", \"left\":\"calc( 100% - 74px )\"}, \"5\":{\"top\":\"0\", \"left\":\"calc( (100% - 100px) / 2 )\"}, \"6\":{\"top\":\"0\", \"left\":\"0\"}, \"7\":{\"top\":\"calc( (100% - 100px) / 2)\", \"left\":\"0\"}, \"8\":{\"top\":\"calc( 100% - 100px )\", \"left\":\"0\"}, };\r\n\r\nconst OvalTable = ({states}) => {\r\n\r\n    const newGameHandler = () => {\r\n\r\n        console.log('command calls ', [\"StartNewGame\", \"GetMatchState\"]);\r\n        commandCalls([\"StartNewGame\", \"GetMatchState\"], states);\r\n\r\n    }\r\n\r\n    const foldGameHandler = () => {\r\n\r\n        console.log('commandCalls', [\"FoldDiscardedCards\"]);\r\n        commandCalls([\"FoldDiscardedCards\"], states);\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        // if ( (states.CurrentPage == 'gameScreen') ) {\r\n\r\n        document.getElementById('bidActionFoldButton').style.display = 'none';\r\n\r\n\r\n            setTimeout(() => {\r\n                \r\n                switch ( states.MatchState.MatchStatus ) {\r\n\r\n                    case 'StartNewGame'     :   // code to display only ovalTableNewGame\r\n                                                document.getElementById('ovalTableNewGame').style.display = 'flex';\r\n                                                document.getElementById('biddingKeyboard').style.display = 'none';  \r\n                                                document.getElementById('discardCards').style.display = 'none';                                          \r\n                                                break;\r\n                    case 'PlaceBid'         :   // code to display only biddingKeyboard\r\n                                                document.getElementById('ovalTableNewGame').style.display = 'none';\r\n                                                document.getElementById('biddingKeyboard').style.display = 'flex';   \r\n                                                document.getElementById('discardCards').style.display = 'none';     \r\n                                                break;\r\n                    case 'PlayCard'         :   // code to display only discardedCards\r\n                                                document.getElementById('ovalTableNewGame').style.display = 'none';\r\n                                                document.getElementById('biddingKeyboard').style.display = 'none';   \r\n                                                document.getElementById('discardCards').style.display = 'flex';\r\n                                                break;  \r\n                    case 'Fold'             :   // code to display discardedCards and foldButton\r\n                                                document.getElementById('ovalTableNewGame').style.display = 'none';\r\n                                                document.getElementById('biddingKeyboard').style.display = 'none';   \r\n                                                document.getElementById('discardCards').style.display = 'flex';\r\n\r\n                                                // display fold button only if it's the user's turn\r\n                                                if ( states.MatchState.Chairs[1].PlayerTurn == 'Y' ) {\r\n                                                    \r\n                                                    document.getElementById('bidActionFoldButton').style.display = 'flex';\r\n                                                    \r\n                                                    // below code makes sure fold button isn't clickable for atleast 3 seconds\r\n                                                    document.getElementById('bidActionFoldButton').style.pointerEvents = 'none';\r\n                                                    setTimeout(() => document.getElementById('bidActionFoldButton').style.removeProperty('pointer-events'), 3 * 1000)\r\n\r\n                                                    // if no one clicks fold in 10s, auto click\r\n                                                    setTimeout(() => {\r\n\r\n                                                        if ( states.MatchState.MatchStatus == 'Fold')\r\n                                                            document.getElementById('bidActionFoldButton').click();\r\n\r\n                                                    }, 10 * 1000)\r\n\r\n                                                }                                               \r\n                                                break;\r\n\r\n                    default                 :   document.getElementById('ovalTableNewGame').style.display = 'none';\r\n                                                document.getElementById('biddingKeyboard').style.display = 'none'; \r\n                                                document.getElementById('discardCards').style.display = 'none';     \r\n\r\n                }\r\n            }, 100);\r\n\r\n        // }\r\n\r\n    // })\r\n    }, [states.MatchState])\r\n\r\n    return (\r\n        <OvalTableContainer id=\"ovalTable\">\r\n            \r\n            {/* below is the code for start new game screen */}\r\n\r\n            <OvalTableNewGame id=\"ovalTableNewGame\">\r\n                Click to start <NewGameButton id=\"newGameButton\" onClick={() => newGameHandler()}>New Game</NewGameButton>\r\n            </OvalTableNewGame>\r\n\r\n            {/* below is the code for biddingKeyboard */}\r\n\r\n            <BiddingKeyboard states={states} />\r\n\r\n            <BidAction id=\"bidActionFoldButton\" className=\"actions\" data-bidvalue='fold' onClick={() => foldGameHandler()} top=\"calc( (100% - 50px) * 0.5  )\" left=\"calc( (100% - 90px) / 2 )\" >Fold</BidAction>\r\n\r\n            {/* below is the code for discardCards */}\r\n\r\n            <DiscardCards id=\"discardCards\">\r\n                {Object.keys(states.DiscardCards).map(card => {\r\n\r\n                    if ( card !== null )\r\n                        return <Card key={card} className=\"discaredCard\" top={discardCardsLoc[card].top} left={discardCardsLoc[card].left} bg={states.CardDeck[states.DiscardCards[card]]} />;\r\n\r\n                })}\r\n            </DiscardCards>\r\n        \r\n        </OvalTableContainer>\r\n    )\r\n}\r\n\r\nconst OvalTableContainer = styled.div`\r\n    width: 62%;\r\n    height: 65%;\r\n    min-width: 650px;\r\n    min-height: 300px;\r\n    //above min width is a temp value\r\n    // height: 250px;\r\n    background-color: green;\r\n    border: 15px solid darkred;\r\n    border-radius: 200px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\nconst OvalTableNewGame = styled.div`\r\n    height: 25%;\r\n    width: 50%;\r\n    // background-color: red;\r\n    font-size: 18px;\r\n    color: white;\r\n    font-weight: 600;\r\n\r\n    display: none;\r\n    // display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst NewGameButton = styled.div`\r\n    height: 50px;\r\n    width: 120px;\r\n    background-color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 16px;\r\n    margin-left: 25px;\r\n    border-radius: 5px;\r\n    color: black;\r\n    cursor: pointer;\r\n`\r\n\r\nconst DiscardCards = styled.div`\r\n    height: 100%;\r\n    width: 65%;\r\n    // background-color: blue;\r\n    // opacity: 0.7;\r\n    position: relative;\r\n    display: none;\r\n    z-index: 1;\r\n`\r\n\r\nconst Card = styled.div`\r\n    width: 74px;\r\n    height: 100px;\r\n    background-repeat: no-repeat;\r\n    background-size: 100%;\r\n    background-position: center;\r\n    // background-color: blue;\r\n    // background-image: url(others/spadesJ.PNG);\r\n    background-image: url(${props => props.bg});\r\n\r\n    position: absolute;\r\n    top: ${props => props.top};\r\n    left: ${props => props.left};\r\n\r\n    // margin-left: 5px;\r\n    // cursor: pointer;\r\n    // transition: 0.3s;\r\n`\r\n\r\nconst BidAction = styled.div`\r\n    height: 50px;\r\n    width: 90px;\r\n    background-color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    position: absolute;\r\n    top: ${props => props.top};\r\n    left: ${props => props.left};\r\n    border-radius: 5px;\r\n\r\n    // display: flex;\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    z-index: 2;\r\n`\r\n\r\nexport default OvalTable\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { commandCalls } from '../../../Misc/Timestamp.scripts';\r\n\r\nconst GameScreenCards = ({states}) => {\r\n\r\n    const cardClickHandler = (e) => {\r\n\r\n        if (states.MatchState.MatchStatus == 'PlayCard') {\r\n\r\n            // let selectedCards = Array.from(document.getElementsByClassName('selectedCard'));\r\n            let selectedCards = Array.from(document.getElementsByClassName('playerHandCard'));\r\n            selectedCards.forEach(item => {\r\n                item.style.removeProperty('margin-bottom');\r\n                // item.classList.remove('selectedCard');\r\n            })\r\n\r\n            e.target.style.marginBottom = '25px';\r\n            // e.target.classList.add('selectedCard');\r\n\r\n\r\n            let cardSelected = e.target.getAttribute('data-card');\r\n\r\n            states.setProcessCommandValues(values => ({\r\n                ...values,\r\n                MyCardID: cardSelected\r\n            }))\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        console.log(states.ProcessCommandValues.MyCardID);\r\n\r\n        if ( states.ProcessCommandValues.MyCardID !== 'init' ) {\r\n\r\n            console.log('commandCalls', [\"PlayCard\", \"GetMatchState\"]);\r\n            commandCalls( [\"PlayCard\", \"GetMatchState\"], states);\r\n\r\n\r\n        }\r\n\r\n    }, [states.ProcessCommandValues.MyCardID])\r\n\r\n    return (\r\n        <GameScreenCardsContainer id=\"gameScreenCardsContainer\">\r\n            \r\n            {Object.keys(states.CurrentPlayerHand).map(suit => {\r\n\r\n                // console.log(suit);\r\n\r\n                return <CardGroup key={suit}>\r\n                    \r\n                    {Object.keys(states.CurrentPlayerHand[suit]).map(card => {\r\n\r\n                        // console.log(states.CardDeck[states.CurrentPlayerHand[suit][card]]);\r\n                        // console.log(states.CurrentPlayerHand[suit][card]);\r\n                        return <Card key={card} className=\"playerHandCard\" onClick={e => cardClickHandler(e)} data-card={states.CurrentPlayerHand[suit][card]} bg={states.CardDeck[states.CurrentPlayerHand[suit][card]]} />;\r\n\r\n                })}</CardGroup>;\r\n\r\n            })}\r\n\r\n        </GameScreenCardsContainer>\r\n    )\r\n}\r\n\r\nconst GameScreenCardsContainer = styled.div`\r\n    width: 100%;\r\n    height: 25%;\r\n    // background-color: red;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    overflow-y: auto;\r\n`\r\n\r\nconst CardGroup = styled.div`\r\n    width: auto;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n\r\n    // margin-left: 25px;\r\n    @media (max-width: 480px) {\r\n        margin-left: 5px;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        margin-left: 10px;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        margin-left: 10px;\r\n    }\r\n    @media (min-width: 992px) and (max-width: 1199px) {\r\n        margin-left: 20px;\r\n    }\r\n    @media (min-width: 1200px) {\r\n        margin-left: 25px;\r\n    }\r\n \r\n`\r\n\r\nconst Card = styled.div`\r\n    // width: 111px;\r\n    // height: 150px;\r\n\r\n    @media (max-width: 480px) {\r\n        width: 80px;\r\n        margin-left: 2px;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        width: 80px;\r\n        margin-left: 2px;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        width: 60px;\r\n        margin-left: 2px;\r\n    }\r\n    @media (min-width: 992px) and (max-width: 1199px) {\r\n        width: 75px;\r\n        margin-left: 3px;\r\n    }\r\n    @media (min-width: 1200px) {\r\n        width: 96px;\r\n        margin-left: 5px;\r\n    }\r\n \r\n    // width: 96px;\r\n    height: 130px;\r\n    background-repeat: no-repeat;\r\n    background-size: 100%;\r\n    background-position: center;\r\n    // background-color: blue;\r\n    // background-image: url(others/spadesJ.PNG);\r\n    background-image: url(${props => props.bg});\r\n\r\n    // margin-left: 5px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n`\r\n\r\nexport default GameScreenCards\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { stringToSuit } from '../../../../../App.scripts'\r\n\r\nconst GameSummary = ({states}) => {\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n        \r\n        // console.log(states.MatchScoreboard)\r\n        // document.getElementById('navBarMatchDetails').innerText = \"Table #\" + states.MatchScoreboard.TableNo + \" (\" + states.MatchScoreboard.MatchGamesPoints + \")\";\r\n\r\n        if ( states.CurrentPage == 'gameScreen' ) {\r\n\r\n            document.getElementById('gameToStart').style.display = 'none';\r\n            document.getElementById('biddingInProgress').style.display = 'none';\r\n            document.getElementById('gameInProgress').style.display = 'none';\r\n            document.getElementById('gameCompleted').style.display = 'none';\r\n\r\n            switch ( states.MatchScoreboard.GameStatus ) {\r\n\r\n                case 'Game to start'        :\r\n                                                document.getElementById('gameToStart').style.display = 'flex';\r\n                                                break;\r\n                case 'Bidding in progress'  :\r\n                                                document.getElementById('biddingInProgress').style.display = 'flex';\r\n                                                stringToSuit('biddingInProgressValue');\r\n                                                break;\r\n                case 'Game in progress'     :\r\n                                                document.getElementById('gameInProgress').style.display = 'flex';\r\n                                                stringToSuit('bidWonValueInProgress');\r\n                                                break;\r\n                case 'Game completed'       :   document.getElementById('gameCompleted').style.display = 'flex';\r\n                                                stringToSuit('bidWonValueCompleted');\r\n                                                break;\r\n                default :\r\n\r\n            }\r\n\r\n            \r\n\r\n        }\r\n\r\n    }, [states.MatchScoreboard])\r\n\r\n    React.useEffect(() => {\r\n\r\n        // inside biddingInProgressValue, don't display a bidPart if it has no value code below\r\n\r\n        Array.from(document.getElementsByClassName('bidInProgressValuePart')).forEach(item => (item.innerText == \"\" ? item.style.display='none' : item.style.display='flex'));\r\n\r\n\r\n\r\n    })\r\n\r\n    return (\r\n        <GameScreenBox2 id=\"test2\">\r\n            <GameScreenBoxHeading>Game Summary</GameScreenBoxHeading>\r\n            <GameScreenBoxContent>\r\n\r\n                <GameToStart id=\"gameToStart\">Game to start</GameToStart>\r\n\r\n                <BiddingInProgress id=\"biddingInProgress\">\r\n                    <BiddingInProgressTitle>Bidding in progress</BiddingInProgressTitle>\r\n                    <BiddingInProgressValueTitle bg={states.MatchScoreboard.CurrentHighestBidTeam == 'A' ? '#ffc299' : '#ffff99' }>Highest Bid by : {states.MatchScoreboard.CurrentHighestBidPlayer == undefined ? \"\" : states.MatchScoreboard.CurrentHighestBidPlayer}</BiddingInProgressValueTitle>\r\n                    <BiddingInProgressValue id=\"biddingInProgressValue\" bg={states.MatchScoreboard.CurrentHighestBidTeam == 'A' ? '#ffc299' : '#ffff99' }>\r\n                        {/* <BiddingInProgressPart>{states.MatchScoreboard.CurrentTrump == undefined ? \"\" : states.MatchScoreboard.CurrentTrump}</BiddingInProgressPart> */}\r\n                        {/* <BiddingInProgressPart>{states.MatchScoreboard.CurrentHighestBidValue == undefined ? \"\" : states.MatchScoreboard.CurrentHighestBidValue}</BiddingInProgressPart> */}\r\n                        <BiddingInProgressPart className=\"bidInProgressValuePart\" >{states.MatchScoreboard.CurrentHighestBid == undefined ? \"\" : states.MatchScoreboard.CurrentHighestBid[1]}</BiddingInProgressPart>\r\n                        <BiddingInProgressPart className=\"bidInProgressValuePart\" >{states.MatchScoreboard.CurrentHighestBid == undefined ? \"\" : states.MatchScoreboard.CurrentHighestBid[2]}</BiddingInProgressPart>\r\n                        <BiddingInProgressPart className=\"bidInProgressValuePart\" >{states.MatchScoreboard.CurrentHighestBid == undefined ? \"\" : states.MatchScoreboard.CurrentHighestBid[3]}</BiddingInProgressPart>\r\n                    </BiddingInProgressValue>\r\n                </BiddingInProgress>\r\n\r\n                <GameInProgress id=\"gameInProgress\">\r\n                    <GameTitle>Game in progress</GameTitle>\r\n                    <BidWonDetails>\r\n                        <BidWonDesc bg={states.MatchScoreboard.FinalBidWinningTeam == 'A' ? '#ffc299' : '#ffff99' }>Bid won by : {states.MatchScoreboard.FinalBidWinningPlayer == undefined ? \"\" : states.MatchScoreboard.FinalBidWinningPlayer}</BidWonDesc>\r\n                        <BidWonValue id=\"bidWonValueInProgress\"  bg={states.MatchScoreboard.FinalBidWinningTeam == 'A' ? '#ffc299' : '#ffff99' }>\r\n                            <BidWonValuePart>{states.MatchScoreboard.FinalBidTrump == undefined ? \"\" : states.MatchScoreboard.FinalBidTrump}</BidWonValuePart>\r\n                            <BidWonValuePart>{states.MatchScoreboard.FinalBidValue == undefined ? \"\" : states.MatchScoreboard.FinalBidValue}</BidWonValuePart>\r\n                        </BidWonValue>\r\n                    </BidWonDetails>\r\n                    <GamePointsDetails>\r\n                        <GamePointsPart left={\"10%\"} bg={\"#ffc299\"}>{states.MatchScoreboard.TeamAGamePoints == undefined ? \"\" : states.MatchScoreboard.TeamAGamePoints}</GamePointsPart>\r\n                        <GamePointsPart left={\"65%\"} bg={\"#ffff99\"}>{states.MatchScoreboard.TeamBGamePoints == undefined ? \"\" : states.MatchScoreboard.TeamBGamePoints}</GamePointsPart>\r\n                    </GamePointsDetails>\r\n                    <RemainingPointsDetails>Remaining Points : {states.MatchScoreboard.RemainingPoints == undefined ? \"\" : states.MatchScoreboard.RemainingPoints}</RemainingPointsDetails>\r\n                    <FirstDoubled bg={states.MatchScoreboard.FinalBidDoubledTeam == 'A' ? '#ffc299' : '#ffff99' }>First doubled player : {states.MatchScoreboard.FinalBidDoubledPlayer == undefined ? \"\" : states.MatchScoreboard.FinalBidDoubledPlayer}</FirstDoubled>\r\n                    <FirstRedoubled bg={states.MatchScoreboard.FinalBidRedoubledTeam == 'A' ? '#ffc299' : '#ffff99' }>First re-doubled player : {states.MatchScoreboard.FinalBidRedoubledPlayer == undefined ? \"\" : states.MatchScoreboard.FinalBidRedoubledPlayer}</FirstRedoubled>\r\n                </GameInProgress>\r\n\r\n                <GameCompleted id=\"gameCompleted\"> \r\n                    <GameTitle>Game completed</GameTitle>\r\n                        <BidWonDetails>\r\n                            <BidWonDesc  bg={states.MatchScoreboard.FinalBidWinningTeam == 'A' ? '#ffc299' : '#ffff99' }>Bid won by : Team {states.MatchScoreboard.FinalBidWinningTeam == undefined ? \"\" : states.MatchScoreboard.FinalBidWinningTeam}</BidWonDesc>\r\n                            <BidWonValue id=\"bidWonValueCompleted\" bg={states.MatchScoreboard.FinalBidWinningTeam == 'A' ? '#ffc299' : '#ffff99' }>\r\n                                <BidWonValuePart>{states.MatchScoreboard.FinalBidValue == undefined ? \"\" : states.MatchScoreboard.FinalBidValue}</BidWonValuePart>\r\n                            </BidWonValue>\r\n                        </BidWonDetails>\r\n                        <GamePointsDetails>\r\n                            <GamePointsPart left={\"10%\"} bg={\"#ffc299\"}>{states.MatchScoreboard.TeamAGamePoints == undefined ? \"\" : states.MatchScoreboard.TeamAGamePoints}</GamePointsPart>\r\n                            <GamePointsPart left={\"65%\"} bg={\"#ffff99\"}>{states.MatchScoreboard.TeamBGamePoints == undefined ? \"\" : states.MatchScoreboard.TeamBGamePoints}</GamePointsPart>\r\n                        </GamePointsDetails>\r\n                        <MatchPointsDetails bg={states.MatchScoreboard.MatchPointsAddedToTeam == 'A' ? '#ffc299' : '#ffff99' }>Match Points Added : {states.MatchScoreboard.MatchPointsAdded == undefined ? \"\" : states.MatchScoreboard.MatchPointsAdded}</MatchPointsDetails>\r\n                </GameCompleted>\r\n\r\n                {/* <GameScreenBox2Line bg={'#B0B0B0'} >Game started</GameScreenBox2Line>\r\n                <GameScreenBox2Line bg={'#E0E0E0'} >Move 1 complete</GameScreenBox2Line>\r\n                <GameScreenBox2Line bg={'#B0B0B0'} >Player 2 next move</GameScreenBox2Line>\r\n                <GameScreenBox2Line bg={'#E0E0E0'} >Move 2 complete</GameScreenBox2Line>\r\n                <GameScreenBox2Line bg={'#B0B0B0'} >Player 3 next move</GameScreenBox2Line>\r\n                <GameScreenBox2Line bg={'#E0E0E0'} >Move 3 complete</GameScreenBox2Line>\r\n                <GameScreenBox2Line bg={'#B0B0B0'} >Move 4 complete</GameScreenBox2Line> */}\r\n            </GameScreenBoxContent>\r\n        </GameScreenBox2> \r\n    )\r\n}\r\n\r\nconst GameScreenBox2 = styled.div`\r\n    background-color: #E0E0E0;\r\n    height: 65%;\r\n    width: 90%;\r\n    // overflow-y: auto;\r\n    max-height: 225px;\r\n    position: relative;\r\n    // top: 5%;\r\n`\r\n\r\nconst GameScreenBoxHeading = styled.div`\r\n    background-color: black;\r\n    color: white;\r\n    height: 50px;\r\n    width: 100%;\r\n    display: flexbox;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n`\r\n\r\nconst GameScreenBoxContent = styled.div`\r\n    overflow-y: auto;\r\n    height: calc( 100% - 50px );\r\n    width: 100%;\r\n`\r\n\r\nconst GameScreenBox2Line = styled.div`\r\n    background-color: ${props => props.bg};\r\n    width: calc( 100% - 10px );\r\n    height: calc( 100% / 6 );\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    display: flex;\r\n    align-items: center;\r\n    padding-left: 10px;\r\n`\r\n\r\nconst GameToStart = styled.div`\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    \r\n    height: 100%;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`\r\n\r\nconst BiddingInProgress = styled.div`\r\n    display: none;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    height: 100%;\r\n    padding-bottom: 5%;\r\n`\r\n\r\nconst BiddingInProgressTitle = styled.div`\r\n    width: 100%;\r\n    height: 30%;\r\n    // background-color: red;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst BiddingInProgressValueTitle = styled.div`\r\n    height: 35%;\r\n    width: 75%;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: ${props => props.bg};\r\n    border-radius: 5px 5px 0px 0px;\r\n`\r\n\r\nconst BiddingInProgressValue = styled.div`\r\n    width: 75%;\r\n    height: 35%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    background-color: ${props => props.bg};\r\n    border-radius: 0px 0px 5px 5px;\r\n    justify-content: center;\r\n`\r\n\r\nconst BiddingInProgressPart = styled.div`\r\n    // width: 50%;\r\n    width: calc( 100% / 3 );\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    // background-color: orange;\r\n\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: 60%;\r\n`\r\n\r\nconst GameInProgress = styled.div`\r\n    display: none;\r\n    flex-wrap: wrap;\r\n    height: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-bottom: 5%;\r\n`\r\n\r\nconst GameTitle = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 15%;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    // background-color: red;\r\n`\r\n\r\nconst BidWonDetails = styled.div`\r\n    width: 100%;\r\n    height: 50%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst BidWonDesc = styled.div`\r\n    width: 95%;\r\n    height: 35%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    background-color: ${props => props.bg};\r\n    border-radius: 5px 5px 0px 0px;\r\n`\r\n\r\nconst BidWonValue = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 95%;\r\n    height: 65%;\r\n    background-color: ${props => props.bg};\r\n    border-radius: 0px 0px 5px 5px;\r\n`\r\n\r\nconst BidWonValuePart = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n    width: 30%;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    background-color: ${props => props.bg};\r\n\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: 50%;\r\n`\r\n\r\nconst FirstDoubled = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 95%;\r\n    height: 20%;\r\n    border-radius: 5px;\r\n    margin: 5px 0px 5px 0px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    background-color: ${props => props.bg};\r\n`\r\n\r\nconst FirstRedoubled = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 95%;\r\n    height: 20%;\r\n    border-radius: 5px;\r\n    margin: 5px 0px 5px 0px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    background-color: ${props => props.bg};\r\n`\r\n\r\nconst GamePointsDetails = styled.div`\r\n    display:flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    // justify-content: center;\r\n    height: 35%;\r\n    width: 100%;\r\n    position: relative;\r\n`\r\n\r\nconst GamePointsPart = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 80%;\r\n    width: 25%;\r\n    background-color: ${props => props.bg};\r\n    position: absolute;\r\n    left: ${props => props.left};\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    border-radius: 30%;\r\n`\r\n\r\nconst RemainingPointsDetails = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 20%;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    // background-color: yellow;\r\n`\r\n\r\nconst GameCompleted = styled.div`\r\n    display: none;\r\n    flex-wrap: wrap;\r\n    height: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-bottom: 5%;\r\n`\r\n\r\nconst MatchPointsDetails = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 95%;\r\n    height: 20%;\r\n    border-radius: 5px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    background-color: ${props => props.bg};\r\n`\r\n\r\nexport default GameSummary\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport OvalTable from './OvalTable/OvalTable'\r\nimport GameScreenCards from './GameScreenCards/GameScreenCards'\r\nimport { keyframes } from 'styled-components'\r\nimport './GameScreen.css'\r\n\r\nimport GameSummary from './GameSummary/GameSummary'\r\n\r\nimport { useState } from 'react'\r\nimport { commandCalls, processCommandJsonGenerator } from '../../Misc/Timestamp.scripts'\r\nimport { checkPlaceBid, checkBidTitle } from '../../../../App.scripts'\r\n// import {getTimestamp} from '../../Misc/Timestamp.scripts'\r\n\r\n// var chairDetails = [];\r\nvar interval;\r\nvar currentTimestamp;\r\nvar newTimestamp;\r\n\r\nconst GameScreen = ({ states, handlers }) => {\r\n\r\n    React.useEffect(() => {\r\n\r\n        if ( states.CurrentPage == 'gameScreen') { \r\n            \r\n            // document.getElementById('navBarMatchDetails').innerText = document.getElementById('gameDetailsTitle').innerText + \" (Game 0 of 12)\";\r\n            // document.getElementById('navBarMatchDetails').innerText = \"Table #\" + states.MatchScoreboard.TableNo + \" (\" + states.MatchScoreboard.MatchGamesPoints + \")\";\r\n\r\n            document.getElementById('navBarMatchDetails').style.display = 'block';\r\n\r\n            document.getElementById('navBarLeaveGame').style.right = ( parseInt(getComputedStyle(document.getElementById('navBarMatchDetails')).width) + 100 ).toString() + 'px';\r\n            document.getElementById('navBarLeaveGame').style.display = 'block';\r\n\r\n            document.getElementById('navBarInfoIcon').style.right = ( parseInt(getComputedStyle(document.getElementById('navBarLeaveGame')).right) + 75 ).toString() + 'px';\r\n            document.getElementById('navBarInfoIcon').style.display = 'block';\r\n\r\n            document.getElementById('navBarRefresh').style.right = ( parseInt(getComputedStyle(document.getElementById('navBarInfoIcon')).right) + 75 ).toString() + 'px';\r\n            document.getElementById('navBarRefresh').style.display = 'block';\r\n\r\n\r\n            // Array.from(document.getElementsByClassName('gameChair')).forEach(item => {\r\n            \r\n            //     if( item.getAttribute('data-trickstarter') == 'Y')\r\n            //         trickStarterChair = item;\r\n\r\n            // });\r\n            checkBidTitle();\r\n            checkPlaceBid();\r\n\r\n        }\r\n        \r\n\r\n        //works like componentWillUnmount\r\n        return function unMount() {\r\n            // clearInterval(interval);\r\n            // document.getElementById('navBarMatchDetails').innerText = '';\r\n\r\n            // if ( states.CurrentPage !== 'gameScreen' ) {\r\n            //     document.getElementById('navBarMatchDetails').style.display = 'none';\r\n            //     document.getElementById('navBarLeaveGame').style.display = 'none';\r\n            //     document.getElementById('navBarInfoIcon').style.display = 'none';\r\n            //     document.getElementById('navBarRefresh').style.display = 'none';\r\n            // }\r\n\r\n        }\r\n\r\n\r\n    });\r\n\r\n    React.useEffect(() => {\r\n\r\n        // removing at start to make sure all are in sync\r\n        Array.from(document.getElementsByClassName('gameChair')).forEach(item => item.classList.remove('blinking'));\r\n        \r\n        // timeout to make sure everthing has been rendered\r\n        setTimeout(() => {\r\n            \r\n            Array.from(document.getElementsByClassName('gameChair')).forEach(item => {\r\n\r\n                if( item.getAttribute('data-playerturn') == 'Y') \r\n                    // add class blinker\r\n                    item.classList.add('blinking');\r\n\r\n            });\r\n\r\n        }, 100);\r\n\r\n    }, [states.MatchState])\r\n\r\n    React.useEffect(() => {\r\n\r\n        // if ( states.CurrentPage == 'gameScreen' ) {\r\n            document.getElementById('navBarMatchDetails').innerText = \"Table #\" + states.MatchScoreboard.TableNo + \" (\" + states.MatchScoreboard.MatchGamesPoints + \")\";\r\n            \r\n            document.getElementById('navBarLeaveGame').style.right = ( parseInt(getComputedStyle(document.getElementById('navBarMatchDetails')).width) + 100 ).toString() + 'px';\r\n            document.getElementById('navBarInfoIcon').style.right = ( parseInt(getComputedStyle(document.getElementById('navBarLeaveGame')).right) + 75 ).toString() + 'px';\r\n            document.getElementById('navBarRefresh').style.right = ( parseInt(getComputedStyle(document.getElementById('navBarInfoIcon')).right) + 75 ).toString() + 'px';\r\n\r\n        // }\r\n    }, [states.MatchScoreboard])\r\n\r\n    return (\r\n        <GameScreenContainer id=\"gameScreenContainer\" >\r\n\r\n            {/* GameArea code start */}\r\n\r\n            <GameScreenMain>\r\n\r\n                <GameScreenTable id=\"gameScreenTable\">\r\n\r\n                <OvalTable id=\"ovalTable\" states={states} />\r\n\r\n                <ChairUser id=\"userChair\" className=\"gameChair\" data-playerturn={states.MatchState.Chairs[1].PlayerTurn} bg={(parseInt(states.MatchState.Chairs[1].ChairNo) % 2 ) == 0 ? '#ffff99' : '#ffc299'}  >\r\n                   \r\n                    {(states.MatchState.Chairs[1].TrickStarter == 'Y') ? <TrickStarterFlag /> : <></>}        \r\n                    \r\n                    <ChairNum>{states.MatchState.Chairs[1].ChairNo }</ChairNum>\r\n                    <ChairName>\r\n                        {states.MatchState.Chairs[1].PlayerName === \"\" ? \"Free\" : states.MatchState.Chairs[1].PlayerName }\r\n                    </ChairName>\r\n\r\n                    <LastBid className=\"lastBid\">\r\n                        <LastBidPart>{states.MatchState.Chairs[1].LastBid !== undefined ? states.MatchState.Chairs[1].LastBid[1] : \"\"}</LastBidPart>\r\n                        <LastBidPart>{states.MatchState.Chairs[1].LastBid !== undefined ? states.MatchState.Chairs[1].LastBid[2] : \"\"}</LastBidPart>\r\n                        <LastBidPart>{states.MatchState.Chairs[1].LastBid !== undefined ? states.MatchState.Chairs[1].LastBid[3] : \"\"}</LastBidPart>\r\n                    </LastBid>\r\n\r\n                </ChairUser>\r\n\r\n                \r\n                {   \r\n                    Object.keys(states.GameChairs).map(item => (\r\n                    // GameChairs.map(item => (\r\n                                                                    \r\n                        <ChairOthers className=\"othersChair gameChair\" key={Object.keys(states.GameChairs)[item]} bg={(parseInt(states.GameChairs[item].Details.ChairNo) % 2 ) == 0 ? '#ffff99' : '#ffc299'} data-playerturn={states.GameChairs[item].Details.PlayerTurn} left={states.GameChairs[item].Location.left} top={states.GameChairs[item].Location.top} >\r\n                        \r\n                            {(states.GameChairs[item].Details.TrickStarter == 'Y') ? <TrickStarterFlag /> : <></>}  \r\n                        \r\n                            <ChairNum>{states.GameChairs[item].Details.ChairNo}</ChairNum>\r\n                            <ChairName>\r\n                                {states.GameChairs[item].Details.PlayerName === \"\" ? \"Free\" : states.GameChairs[item].Details.PlayerName }\r\n                            </ChairName>\r\n\r\n                            <LastBid className=\"lastBid\">\r\n                                <LastBidPart>{states.GameChairs[item].Details.LastBid !== \"\" ? states.GameChairs[item].Details.LastBid[1] : \"\"}</LastBidPart>\r\n                                <LastBidPart>{states.GameChairs[item].Details.LastBid !== \"\" ? states.GameChairs[item].Details.LastBid[2] : \"\"}</LastBidPart>\r\n                                <LastBidPart>{states.GameChairs[item].Details.LastBid !== \"\" ? states.GameChairs[item].Details.LastBid[3] : \"\"}</LastBidPart>\r\n                            </LastBid>\r\n\r\n                            {/* <ChairKick className=\"kickChair\" onClick={e => handlers.kickOutGameHandler( e, states)}/> */}\r\n                        </ChairOthers>                        \r\n\r\n                    ))\r\n                }\r\n                \r\n                </GameScreenTable>\r\n\r\n                <GameScreenCards states={states} />\r\n\r\n            </GameScreenMain>\r\n            \r\n            {/* Side Boxes code start */}\r\n\r\n            <GameScreenDetails id=\"gameScreenDetails\">\r\n                <GameScreenBox1 id=\"test1\">\r\n                    {/* <GameScreenBoxHeading>Table #36 Summary (Game 0 of 12)</GameScreenBoxHeading> */}\r\n                    <GameScreenBox1Line bg={'#B0B0B0'}>\r\n                        <GameScreenBox1LineItem >Team A</GameScreenBox1LineItem>\r\n                        <GameScreenBox1LineItem >Team B</GameScreenBox1LineItem>\r\n                    </GameScreenBox1Line>\r\n                    <GameScreenBox1Line bg={'#E0E0E0'} >\r\n                        <GameScreenBox1LineItem >{states.MatchScoreboard.TeamAMatchPoints}</GameScreenBox1LineItem>\r\n                        <GameScreenBox1LineItem >{states.MatchScoreboard.TeamBMatchPoints}</GameScreenBox1LineItem>\r\n                    </GameScreenBox1Line>\r\n                </GameScreenBox1> \r\n\r\n                <GameSummary states={states} />\r\n\r\n                {/* <GameScreenBox2 id=\"test2\">\r\n                    <GameScreenBoxHeading>Game Summary</GameScreenBoxHeading>\r\n                    <GameScreenBoxContent>\r\n                        <GameScreenBox2Line bg={'#B0B0B0'} >Game started</GameScreenBox2Line>\r\n                        <GameScreenBox2Line bg={'#E0E0E0'} >Move 1 complete</GameScreenBox2Line>\r\n                        <GameScreenBox2Line bg={'#B0B0B0'} >Player 2 next move</GameScreenBox2Line>\r\n                        <GameScreenBox2Line bg={'#E0E0E0'} >Move 2 complete</GameScreenBox2Line>\r\n                        <GameScreenBox2Line bg={'#B0B0B0'} >Player 3 next move</GameScreenBox2Line>\r\n                        <GameScreenBox2Line bg={'#E0E0E0'} >Move 3 complete</GameScreenBox2Line>\r\n                        <GameScreenBox2Line bg={'#B0B0B0'} >Move 4 complete</GameScreenBox2Line>\r\n                    </GameScreenBoxContent>\r\n                </GameScreenBox2>  */}\r\n                \r\n                {/* <GameScreenBox2>\r\n                    <GameScreenBoxHeading>Chat</GameScreenBoxHeading>\r\n                    \r\n                    <ChatboxInput>\r\n                        <ChatboxIcon bg={'/others/grin-solid.svg'} />\r\n                        <ChatboxLine>\r\n                            <ChatInput />\r\n                        </ChatboxLine>\r\n                        <ChatboxIcon bg={'/others/send-solid.svg'} />\r\n                    </ChatboxInput>\r\n\r\n                </GameScreenBox2>  */}\r\n            </GameScreenDetails>  \r\n        \r\n        </GameScreenContainer>\r\n    )\r\n}\r\n\r\nconst GameScreenContainer = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    // display: flex;\r\n    display:none;\r\n    flex-wrap: wrap;\r\n    // position: relative;\r\n`\r\n\r\nconst GameScreenMain = styled.div`\r\n    // background-color: red;\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flexbox;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n`\r\n\r\nconst GameScreenTable = styled.div`\r\n    height: 75%;\r\n    width: 100%;\r\n    position: relative;\r\n    display: flexbox;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst TrickStarterFlag = styled.div`\r\n    height: 40px;\r\n    width: 40px;\r\n    // position: absolute;\r\n    /* background-color: gray; */\r\n    background-image: url(others/flag-solid.svg);\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: 70%;\r\n    // top: calc( 45% - 40px );\r\n    // left: 82.80%;\r\n`\r\n\r\n// const OvalTable = styled.div`\r\n//     width: 60%;\r\n//     height: 60%;\r\n//     background-color: green;\r\n//     border: 15px solid darkred;\r\n//     border-radius: 200px;\r\n// `\r\n\r\n// const GameScreenCards = styled.div`\r\n//     width: 100%;\r\n//     height: 30%;\r\n//     // background-color: red;\r\n// `\r\n\r\nconst GameScreenDetails = styled.div`\r\n    background-color: #95C8D8;\r\n    // height: 100%;\r\n    // width: 25%;\r\n    display: flexbox;\r\n    flex-wrap: wrap;\r\n    // align-items: center;\r\n    justify-content: center;\r\n\r\n    height: 60%;\r\n    width: 275px;\r\n    position: fixed;\r\n    right: 0px;\r\n`\r\n\r\n// const GameScreenBoxHeading = styled.div`\r\n//     background-color: black;\r\n//     color: white;\r\n//     height: 50px;\r\n//     width: 100%;\r\n//     display: flexbox;\r\n//     justify-content: center;\r\n//     align-items: center;\r\n//     font-size: 14px;\r\n//     font-weight: 600;\r\n// `\r\n\r\n// const GameScreenBoxContent = styled.div`\r\n//     overflow-y: auto;\r\n//     height: calc( 100% - 50px );\r\n//     width: 100%;\r\n// `\r\n\r\nconst GameScreenBox1 = styled.div`\r\n    background-color: #E0E0E0;\r\n    height: 20%;\r\n    width: 90%;\r\n    // overflow-y: auto;\r\n    max-height: 120px;\r\n\r\n    position: relative;\r\n    top: 5%;\r\n`\r\n\r\nconst GameScreenBox1Line = styled.div`\r\n    background-color: ${props => props.bg};\r\n    width: 100%;\r\n    // height: calc( (100% - 50px) / 2 );\r\n    height: 50%;\r\n    display: flexbox;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst GameScreenBox1LineItem = styled.div`\r\n    width: 50%;\r\n    height: 100%;\r\n    display: flexbox;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n`\r\n\r\n// const GameScreenBox2 = styled.div`\r\n//     background-color: #E0E0E0;\r\n//     height: 65%;\r\n//     width: 90%;\r\n//     // overflow-y: auto;\r\n//     max-height: 225px;\r\n//     position: relative;\r\n//     // top: 5%;\r\n// `\r\n\r\n// const GameScreenBox2Line = styled.div`\r\n//     background-color: ${props => props.bg};\r\n//     width: calc( 100% - 10px );\r\n//     height: calc( 100% / 6 );\r\n//     font-size: 14px;\r\n//     font-weight: 600;\r\n//     display: flex;\r\n//     align-items: center;\r\n//     padding-left: 10px;\r\n// `\r\n\r\nconst ChatboxInput = styled.div`\r\n    height: calc( 100% / 6 );\r\n    width: 100%;\r\n    display: flexbox;\r\n    flex-wrap: wrap;\r\n    background-color: white;\r\n    position: absolute;\r\n    bottom: 0;\r\n`\r\n\r\nconst ChatboxIcon = styled.div`\r\n    height: 100%;\r\n    width: 15%;\r\n    background: url(${props => props.bg});\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: 60%;\r\n`\r\n\r\nconst ChatboxLine = styled.div`\r\n    height: 100%;\r\n    width: 70%;\r\n    // background-color: limegreen;\r\n`\r\n\r\nconst ChatInput = styled.input`\r\n    height: 100%;\r\n    width: 100%;\r\n    outline: none;\r\n    box-sizing: border-box;\r\n    border: 0px;\r\n    padding: 5px;\r\n`\r\n\r\nconst ChairUser = styled.div`\r\n    height: 10%;\r\n    width: 30%;\r\n    background-color: ${props => props.bg};\r\n    position: absolute;\r\n    // bottom: calc( ( 15% - 15px ) / 2 );\r\n    top: 87%;\r\n    left: 35%;\r\n    border-radius: 20px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst ChairOthers = styled.div`\r\n    height: 10%;\r\n    width: 15%;\r\n    background-color: ${props => props.bg};\r\n    position: absolute;\r\n    // top: calc( ( 15% - 15px ) / 2 );\r\n    top: ${props => props.top};\r\n    left: ${props => props.left};\r\n    // right: ${props => props.right};\r\n    border-radius: 20px;\r\n    display: flexbox;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst ChairKick = styled.div`\r\n    height: 25px;\r\n    width: 25px;\r\n    background-color: red;\r\n    position: absolute;\r\n    border-radius: 50%;\r\n\r\n    right: 5%;\r\n    background-image: url(others/kick-solid.svg);\r\n    background-size: 60%;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n}\r\n`\r\n\r\n// const ChairOthersBottom = styled.div`\r\n//     height: 10%;\r\n//     width: 15%;\r\n//     background-color: ${props => props.bg};\r\n//     position: absolute;\r\n//     // bottom: calc( ( 15% - 15px ) / 2 );\r\n//     top: ${props => props.top};\r\n//     left: ${props => props.left};\r\n//     // right: ${props => props.right};\r\n//     border-radius: 20px;\r\n//     display: flexbox;\r\n//     flex-wrap: wrap;\r\n//     justify-content: center;\r\n//     align-items: center;\r\n// `\r\n\r\nconst ChairNum = styled.div`\r\n    display: flexbox;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 25px;\r\n    width: 25px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    border: 2px solid gray;\r\n    border-radius: 50%;\r\n    // margin-left: 5px;\r\n`\r\n\r\nconst ChairName = styled.div`\r\n    display: flexbox;\r\n    align-items: center;\r\n    // justify-content: center;\r\n    padding-left: 5px;\r\n    height: 100%;\r\n    width: auto;\r\n    max-width: 50%;\r\n    overflow-x: hidden;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n`\r\n\r\nconst LastBid = styled.div`\r\n    // background-color: red;\r\n    height: 25px;\r\n    width: 75px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-left: 5px;\r\n    display: none;\r\n`\r\n\r\nconst LastBidPart = styled.div`\r\n    // background-color: yellow;\r\n    height: 100%;\r\n    width: 25px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    // background-image: url(${props => props.bg});\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: 75%;\r\n\r\n`\r\n\r\nexport default GameScreen\r\n","import styled from 'styled-components'\r\n\r\nexport const Area = styled.div`\r\n    height: calc( 100vh - 60px );\r\n    width: 100%;\r\n    overflow-y: auto;\r\n    // background-color: green;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nexport const GameContent = styled.div`\r\n\r\n    @media (max-width: 480px) {\r\n        width: 100%;\r\n        margin-bottom: 20vh;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        // width: 70%;\r\n        width: calc( 100% - 215px );\r\n    }\r\n    @media (min-width: 721px) {\r\n        // width: 80%;\r\n        width: calc( 100% - 275px );\r\n    }\r\n\r\n    height: auto;\r\n    // width: 80%;\r\n    // background-color: blueviolet;\r\n    transition: 0.5s;\r\n    \r\n    // margin-bottom: 20vh;\r\n`\r\nexport const AdContent = styled.div`\r\n\r\n    @media (max-width: 480px) {\r\n        width: 100%;\r\n        height: 20vh !important;\r\n        bottom: 0px;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        // width: 30%;\r\n        width: 215px;\r\n        // height: 100%;\r\n        height: calc( 100vh - 60px );\r\n        // top: 60px;\r\n        bottom: 0px;\r\n    }\r\n    @media (min-width: 721px) {\r\n        // width: 20;\r\n        width: 275px;\r\n        // height: 100%;\r\n        height: calc( 100vh - 60px );\r\n        // top: 60px;\r\n        bottom: 0px;\r\n    }\r\n\r\n    // height: 100%;\r\n    // width: 20%;\r\n    background-color: skyblue;\r\n    position: fixed;\r\n    z-index: 1;\r\n    // top: 60px;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport SideNav from './Content/SideNav/SideNav'\r\nimport GameTables from './Content/GameContent/GameTables/GameTables'\r\nimport GameScreen from './Content/GameContent/GameScreen/GameScreen'\r\nimport {Area,  GameContent, AdContent} from './Content/Content.style'\r\nimport { initialize } from './Content/Content.scripts'\r\nimport { containerResize } from './NavBar/NavBar.scripts'\r\nimport { getTimestamp, startGetTimestampLoop, stopGetTimestampLoop } from './Content/Misc/Timestamp.scripts'\r\nimport './Content/Content.css'\r\n\r\n// var flagAd = 1;\r\nvar interval;\r\nvar flag = 0;\r\n\r\nconst Content = ({ theme, states, handlers}) => {\r\n\r\n    \r\n\r\n    React.useEffect(() => {\r\n        \r\n        initialize();\r\n        containerResize();\r\n\r\n        //makes sure below code only runs once        \r\n        if(!flag) {\r\n            flag = 1;\r\n            // console.log('commandCalls',  [\"Register\", \"GetMenu\", \"GetTables\", \"GetPossibleValues\"]);\r\n            getTimestamp(states);\r\n        }\r\n\r\n\r\n        // startGetTimestampLoop(states);\r\n        interval = setInterval(function() {\r\n\r\n            getTimestamp(states);\r\n\r\n            // if( (states.CurrentPage == 'homepage') && (document.getElementById('gameDetails').style.display !== 'block') )\r\n                // console.log('commandCalls Timestamp call');\r\n         \r\n        }, 1.5 * 1000);\r\n\r\n\r\n            try{\r\n\r\n                // if (flagAd) {\r\n\r\n                setTimeout(() => {\r\n\r\n                    // flagAd = 0;\r\n                    \r\n                    if (document.getElementById('adContent').lastChild.innerHTML === \"\")\r\n                        (window.adsbygoogle = window.adsbygoogle || []).push({})\r\n            \r\n                }, 500);\r\n\r\n                // }\r\n            }\r\n            catch{}\r\n        // }\r\n\r\n        return function unMount() {\r\n            // stopGetTimestampLoop();\r\n            clearInterval(interval);\r\n        }\r\n\r\n    })\r\n\r\n    return (\r\n        <Area id=\"area\">\r\n            <SideNav theme={theme} SideNavItems={states.SideNavItems} handler={handlers}/>\r\n            <GameContent id=\"gameContent\" >\r\n                <GameTables theme={theme} TableContent={states.TableContent} setTableContent={states.setTableContent} handler={handlers}/>\r\n                <GameScreen states={states} handlers={handlers} />\r\n            </GameContent>\r\n            <AdContent id=\"adContent\">\r\n\r\n                <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\r\n                <ins className=\"adsbygoogle adStyle\"\r\n                    style={{display: \"inline-block\"}}\r\n                    data-ad-client=\"ca-pub-9142249718992342\"\r\n                    data-ad-slot=\"3227850256\"\r\n                    // data-ad-format=\"auto\"\r\n                    data-full-width-responsive=\"true\">\r\n                </ins>\r\n                    \r\n            </AdContent>\r\n        </Area>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","export function initialize() {\r\n\r\n    //below code makes sure adContent doesn't come above the scrollbar\r\n    var right = document.getElementById(\"area\").offsetWidth - document.getElementById(\"area\").clientWidth;\r\n    document.getElementById(\"adContent\").style.right = right.toString() + \"px\";\r\n\r\n    //below code makes sure that sideNav and adContent don't overlap in cell phone view\r\n    // if ( document.getElementById(\"container\").style.width < \"480px\" )\r\n    //     document.getElementsByClassName(\"sideNavItem\")[document.getElementsByClassName(\"sideNavItem\").length - 1].style.marginBottom = \"20vh\";\r\n\r\n    if ( parseInt(getComputedStyle(document.getElementById('container')).width) < 480 )\r\n        document.getElementById('toggleTheme').parentElement.parentElement.style.marginBottom = \"20vh\";\r\n\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ChairPopup = ({ bg, chairInfo, states, handlers}) => {\r\n\r\n    return (\r\n        <GameDetailsTableItem className={'chairRowMatchDetails'} bg={bg}>\r\n\r\n            { null == chairInfo ? <></> : \r\n            <>\r\n                <TableItem>\r\n                    <ChairIcon />\r\n                    <ChairNumber>{chairInfo.ChairNo}</ChairNumber>\r\n                </TableItem>\r\n                <TableItem>\r\n                    { chairInfo.PlayerName == \"\" ? \"Free\" : chairInfo.PlayerName}   \r\n                </TableItem>\r\n                <TableItem>\r\n                    <TableItemButton className={'gameDetailsTableButton'} onClick={e => handlers.actionGameDetailsPopup( e, states)}>\r\n                        { chairInfo.PlayerName == \"\" ? \"Join\" : \"Watch\"} \r\n                    </TableItemButton>\r\n                </TableItem>\r\n            </>\r\n            }\r\n\r\n        </GameDetailsTableItem>\r\n    )\r\n}\r\n\r\nconst GameDetailsTableItem = styled.div`\r\n    background-color: ${props => props.bg};\r\n    height: 11%;\r\n    width: 100%;\r\n    color: #373737;\r\n    display: flexbox;\r\n    flex-wrap: wrap;\r\n    transition: 0.3s;\r\n`\r\n\r\nconst TableItem = styled.div`\r\n    height: 100%;\r\n    width: 33.33%;\r\n    display: flexbox;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`\r\n\r\nconst ChairIcon = styled.div`\r\n    height: 100%;\r\n    width: 35px;\r\n    background: url(others/chair-solid.svg);\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: 50%;\r\n`\r\n\r\nconst ChairNumber = styled.div`\r\n    height: 30px;\r\n    width: 30px;\r\n    border: 2px solid #808080;\r\n    border-radius: 50%;\r\n    display: flexbox;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst TableItemButton = styled.div`\r\n    height: 75%;\r\n    width: 60%;\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 14px;\r\n    border-radius: 5px;\r\n    display: flexbox;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n\r\n    // &:hover {\r\n    //     background-color: #606060;\r\n    //     transition: 0.3s;\r\n    // }\r\n\r\n`\r\n\r\nexport default ChairPopup\r\n","import React from 'react'\r\n\r\n//below function sorts chairs in the popupScreen\r\nexport const sortChairsMatchState = (states) => {\r\n\r\n    var chairsMatchState = [];\r\n\r\n    Object.keys(states.MatchState.Chairs).forEach((item) => {\r\n\r\n        if ( states.MatchState.Chairs[item] !== null )\r\n            chairsMatchState.push(states.MatchState.Chairs[item]);\r\n\r\n    })\r\n\r\n    // chairs popup should be 8 all the time\r\n    for ( let i=0 ; i<8 ; i++) {\r\n\r\n        if ( chairsMatchState[i] == undefined )\r\n            chairsMatchState.push({\"ChairNo\":i+1,\"PlayerName\":\"\",\"PlayerTeam\": ( (i % 2) == 0 ) ? \"A\": \"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"});\r\n\r\n    }\r\n\r\n    var flag = 1;\r\n\r\n    while ( flag == 1 ) {\r\n\r\n        flag = 0;\r\n\r\n        for( var i=0 ; i<chairsMatchState.length - 1 ; i++ ) {\r\n\r\n            if( chairsMatchState[i].ChairNo > chairsMatchState[i+1].ChairNo ) {\r\n        \r\n                flag = 1;\r\n                var temp = chairsMatchState[i];\r\n                chairsMatchState[i] = chairsMatchState[i+1];\r\n                chairsMatchState[i+1] = temp;\r\n    \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    states.setPopupChairs(chairsMatchState);\r\n\r\n}\r\n\r\n//below function initializes all options in the popup, depending on whether it's a createTile or a gameTile\r\nexport const initializeOptions = (popupType, states) => {\r\n\r\n    if( popupType == 'createTile') {\r\n\r\n        switch ( states.PossibleValues.Defaults.PlayerLevel ) {\r\n\r\n            case 'B':   document.getElementById('playerLevel').value = 'Beginner';\r\n                        break;\r\n            case 'I':   document.getElementById('playerLevel').value = 'Intermediate';\r\n                        break;\r\n            case 'E':document.getElementById('playerLevel').value = 'Expert';\r\n                        break;\r\n            default :\r\n                \r\n        }\r\n\r\n        switch ( states.PossibleValues.Defaults.GameRules ) {\r\n\r\n            case 'INT'  :   document.getElementById('gameRules').value = 'International';\r\n                            break;\r\n            case 'KER'  :   document.getElementById('gameRules').value = 'Kerala';\r\n                            break;            \r\n            default     :\r\n        }\r\n\r\n        switch ( states.PossibleValues.Defaults.ShowGamePoints ) {\r\n\r\n            case 'Y':   document.getElementById('gamePoints').value = 'Show';\r\n                        break;\r\n            case 'N':   document.getElementById('gamePoints').value = 'Hide';\r\n                        break;            \r\n            default :\r\n        }\r\n        switch ( states.PossibleValues.Defaults.ShowRemainingPoints ) {\r\n\r\n            case 'Y':   document.getElementById('remainingPoints').value = 'Show';\r\n                        break;\r\n            case 'N':   document.getElementById('remainingPoints').value = 'Hide';\r\n                        break;  \r\n            default :\r\n        }\r\n        switch ( states.PossibleValues.Defaults.EnableAllPass ) {\r\n\r\n            case 'Y':   document.getElementById('allPass').value = 'Enabled';\r\n                        break;\r\n            case 'N':   document.getElementById('allPass').value = 'Disabled';\r\n                        break;  \r\n            default :            \r\n\r\n        }\r\n        switch ( states.PossibleValues.Defaults.NumberOfPlayers ) {\r\n\r\n            case '4'    :   document.getElementById('numberOfPlayers').value = '4 Player';\r\n                            break;\r\n            case '6'    :   document.getElementById('numberOfPlayers').value = '6 Player';\r\n                            break;\r\n            case '86'   :   document.getElementById('numberOfPlayers').value = '8 Player with 6 cards each';\r\n                            break;\r\n            case '88'   :   document.getElementById('numberOfPlayers').value = '8 Player with 8 cards each';\r\n                            break;     \r\n            default :    \r\n\r\n        }\r\n\r\n        // setTimeout(() => maxGamesEvent(states), 1);\r\n        \r\n        maxGamesEvent(states, 'createMatch');\r\n\r\n        // this is when new table is created\r\n        // switch ( states.PossibleValues.Defaults.MaxPlay[states.PossibleValues.Defaults.NumberOfPlayers] ) {\r\n\r\n        //     case 'GM1'  :   document.getElementById('maxGames').value = 'Match of 1 game';\r\n        //                     break;\r\n        //     case 'GM4'  :   document.getElementById('maxGames').value = 'Match of 4 games';\r\n        //                     break;\r\n        //     case 'GM6'  :   document.getElementById('maxGames').value = 'Match of 6 games';\r\n        //                     break;\r\n        //     case 'GM8'  :   document.getElementById('maxGames').value = 'Match of 8 games';\r\n        //                     break;\r\n        //     case 'GM12' :   document.getElementById('maxGames').value = 'Match of 12 games';\r\n        //                     break;\r\n        //     case 'GM16' :   document.getElementById('maxGames').value = 'Match of 16 games';\r\n        //                     break;\r\n        //     case 'GM18' :   document.getElementById('maxGames').value = 'Match of 18 games';\r\n        //                     break;\r\n        //     case 'GM20' :   document.getElementById('maxGames').value = 'Match of 20 games';\r\n        //                     break;\r\n        //     case 'GM24' :   document.getElementById('maxGames').value = 'Match of 24 games';\r\n        //                     break;\r\n        //     case 'GM30' :   document.getElementById('maxGames').value = 'Match of 30 games';\r\n        //                     break;\r\n        //     case 'GM32' :   document.getElementById('maxGames').value = 'Match of 32 games';\r\n        //                     break;\r\n        //     case 'GM36' :   document.getElementById('maxGames').value = 'Match of 36 games';\r\n        //                     break;\r\n        //     case 'GM40' :   document.getElementById('maxGames').value = 'Match of 40 games';\r\n        //                     break;\r\n        //     case 'GM48' :   document.getElementById('maxGames').value = 'Match of 48 games';\r\n        //                     break;\r\n    \r\n        //     case 'PT25' :   document.getElementById('maxGames').value = 'Match with target 25 points';\r\n        //                     break;\r\n        //     case 'PT50' :   document.getElementById('maxGames').value = 'Match with target 50 points';\r\n        //                     break;\r\n        //     case 'PT75' :   document.getElementById('maxGames').value = 'Match with target 75 points';\r\n        //                     break;\r\n        //     case 'PT100':   document.getElementById('maxGames').value = 'Match with target 100 points';\r\n        //                     break;\r\n        //     default     :\r\n    \r\n        // }\r\n\r\n        // switch ( states.PossibleValues.Defaults.MaxPlay[states.PossibleValues.Defaults.NumberOfPlayers] ) {\r\n\r\n        //     case 'GM8'  :   document.getElementById('maxGames').value = 'Match of 8 games';\r\n        //                     break;\r\n        //     case 'GM12' :   document.getElementById('maxGames').value = 'Match of 12 games';\r\n        //                     break;\r\n        //     case 'GM16' :   document.getElementById('maxGames').value = 'Match of 16 games';\r\n        //                     break;\r\n        //     default :    \r\n\r\n        // }\r\n\r\n    }\r\n\r\n    else if ( popupType == 'tableTile' ) {\r\n\r\n        switch ( states.MatchState.PlayerLevel ) {\r\n\r\n            case 'B':   document.getElementById('playerLevel').value = 'Beginner';\r\n                        break;\r\n            case 'I':   document.getElementById('playerLevel').value = 'Intermediate';\r\n                        break;\r\n            case 'E':document.getElementById('playerLevel').value = 'Expert';\r\n                        break;\r\n            default :\r\n                        \r\n        }\r\n        \r\n        switch ( states.MatchState.GameRules ) {\r\n\r\n            case 'INT'  :   document.getElementById('gameRules').value = 'International';\r\n                            break;\r\n            case 'KER'  :   document.getElementById('gameRules').value = 'Kerala';\r\n                            break;            \r\n            default     :\r\n        }\r\n\r\n        switch ( states.MatchState.ShowGamePoints ) {\r\n\r\n            case 'Y':   document.getElementById('gamePoints').value = 'Show';\r\n                        break;\r\n            case 'N':   document.getElementById('gamePoints').value = 'Hide';\r\n                        break;            \r\n            default :\r\n\r\n        }\r\n        switch ( states.MatchState.ShowRemainingPoints ) {\r\n\r\n            case 'Y':   document.getElementById('remainingPoints').value = 'Show';\r\n                        break;\r\n            case 'N':   document.getElementById('remainingPoints').value = 'Hide';\r\n                        break;  \r\n            default :        \r\n\r\n        }\r\n        switch ( states.MatchState.EnableAllPass ) {\r\n\r\n            case 'Y':   document.getElementById('allPass').value = 'Enabled';\r\n                        break;\r\n            case 'N':   document.getElementById('allPass').value = 'Disabled';\r\n                        break;  \r\n            default :        \r\n\r\n        }\r\n        switch ( states.MatchState.NumberOfPlayers.toString() ) {\r\n\r\n            case '4'    :   document.getElementById('numberOfPlayers').value = '4 Player';\r\n                            break;\r\n            case '6'    :   document.getElementById('numberOfPlayers').value = '6 Player';\r\n                            break;\r\n            case '86'   :   document.getElementById('numberOfPlayers').value = '8 Player with 6 cards each';\r\n                            break;\r\n            case '88'   :   document.getElementById('numberOfPlayers').value = '8 Player with 8 cards each';\r\n                            break;                \r\n            default :        \r\n\r\n        }\r\n\r\n        // setTimeout(() => maxGamesEvent(states), 100);\r\n        maxGamesEvent(states, 'existingMatch');\r\n\r\n        // this is for existing tables display\r\n        // switch ( states.MatchState.MaxPlay ) {\r\n\r\n        //     case 'GM1'  :   document.getElementById('maxGames').value = 'Match of 1 game';\r\n        //                     break;\r\n        //     case 'GM4'  :   document.getElementById('maxGames').value = 'Match of 4 games';\r\n        //                     break;\r\n        //     case 'GM6'  :   document.getElementById('maxGames').value = 'Match of 6 games';\r\n        //                     break;\r\n        //     case 'GM8'  :   document.getElementById('maxGames').value = 'Match of 8 games';\r\n        //                     break;\r\n        //     case 'GM12' :   document.getElementById('maxGames').value = 'Match of 12 games';\r\n        //                     break;\r\n        //     case 'GM16' :   document.getElementById('maxGames').value = 'Match of 16 games';\r\n        //                     break;\r\n        //     case 'GM18' :   document.getElementById('maxGames').value = 'Match of 18 games';\r\n        //                     break;\r\n        //     case 'GM20' :   document.getElementById('maxGames').value = 'Match of 20 games';\r\n        //                     break;\r\n        //     case 'GM24' :   document.getElementById('maxGames').value = 'Match of 24 games';\r\n        //                     break;\r\n        //     case 'GM30' :   document.getElementById('maxGames').value = 'Match of 30 games';\r\n        //                     break;\r\n        //     case 'GM32' :   document.getElementById('maxGames').value = 'Match of 32 games';\r\n        //                     break;\r\n        //     case 'GM36' :   document.getElementById('maxGames').value = 'Match of 36 games';\r\n        //                     break;\r\n        //     case 'GM40' :   document.getElementById('maxGames').value = 'Match of 40 games';\r\n        //                     break;\r\n        //     case 'GM48' :   document.getElementById('maxGames').value = 'Match of 48 games';\r\n        //                     break;\r\n    \r\n        //     case 'PT25' :   document.getElementById('maxGames').value = 'Match with target 25 points';\r\n        //                     break;\r\n        //     case 'PT50' :   document.getElementById('maxGames').value = 'Match with target 50 points';\r\n        //                     break;\r\n        //     case 'PT75' :   document.getElementById('maxGames').value = 'Match with target 75 points';\r\n        //                     break;\r\n        //     case 'PT100':   document.getElementById('maxGames').value = 'Match with target 100 points';\r\n        //                     break;\r\n        //     default     :\r\n    \r\n        // }\r\n\r\n        // switch ( states.MatchState.MaxPlay ) {\r\n\r\n        //     case 'GM8'  :   document.getElementById('maxGames').value = 'Match of 8 games';\r\n        //                     break;\r\n        //     case 'GM12' :   document.getElementById('maxGames').value = 'Match of 12 games';\r\n        //                     break;\r\n        //     case 'GM16' :   document.getElementById('maxGames').value = 'Match of 16 games';\r\n        //                     break;\r\n        //     default :        \r\n\r\n        // }            \r\n\r\n    }\r\n    \r\n}\r\n\r\n//below two functions aid initializeOptions\r\nexport const maxGamesEvent = (states, refreshType) => {\r\n\r\n    var arrChairRows = Array.from(document.getElementsByClassName('chairRowMatchDetails'));\r\n    arrChairRows.forEach(item => item.style.display = 'none')\r\n    // debugger;\r\n\r\n    switch ( document.getElementById('numberOfPlayers').value ) {\r\n\r\n        case '4 Player'                     :   for( var i=0; i<4 ; i++ ) \r\n                                                    document.getElementsByClassName('chairRowMatchDetails')[i].style.display = 'flex';\r\n                                                maxGames('4', states, refreshType);\r\n                                                break;\r\n        case '6 Player'                     :   for( var i=0; i<6 ; i++ ) \r\n                                                    document.getElementsByClassName('chairRowMatchDetails')[i].style.display = 'flex';\r\n                                                maxGames('6', states, refreshType);\r\n                                                break;\r\n        case '8 Player with 6 cards each'   :   for( var i=0; i<8 ; i++ ) \r\n                                                    document.getElementsByClassName('chairRowMatchDetails')[i].style.display = 'flex';\r\n                                                maxGames('8', states, refreshType);\r\n                                                break;\r\n        case '8 Player with 8 cards each'   :   for( var i=0; i<8 ; i++ ) \r\n                                                    document.getElementsByClassName('chairRowMatchDetails')[i].style.display = 'flex';\r\n                                                maxGames('8',states, refreshType);\r\n                                                break;\r\n        default                             :\r\n\r\n    }\r\n\r\n}\r\n\r\nconst maxGames = ( players, states, refreshType) => {\r\n\r\n    document.getElementById('maxGames').innerHTML = \"\";\r\n\r\n    Object.keys(states.PossibleValues.ListOfValues.MaxPlay[players]).forEach((item2) => {\r\n\r\n        Object.keys(states.PossibleValues.ListOfValues.MaxPlay[players][item2]).forEach((item3) => {\r\n\r\n            var option = document.createElement('option');\r\n            option.text = states.PossibleValues.ListOfValues.MaxPlay[players][item2][item3];\r\n            document.getElementById('maxGames').add(option);\r\n\r\n        })\r\n    })\r\n\r\n    // return players;\r\n\r\n    let initializeMaxGames;\r\n\r\n    switch ( refreshType ) {\r\n\r\n        case 'createMatch'      :\r\n                                    initializeMaxGames = states.PossibleValues.Defaults.MaxPlay[states.PossibleValues.Defaults.NumberOfPlayers];\r\n                                    break;\r\n        case 'existingMatch'    :\r\n                                    initializeMaxGames = states.MatchState.MaxPlay;\r\n                                    break;\r\n        case 'popupClick'       :\r\n                                    initializeMaxGames = states.PossibleValues.Defaults.MaxPlay[players];\r\n                                    break;\r\n        \r\n        default             :\r\n\r\n    }\r\n\r\n    // this is when user changes number of players, default value of those players should come\r\n    // switch ( states.PossibleValues.Defaults.MaxPlay[players] ) {\r\n    switch ( initializeMaxGames ) {\r\n\r\n        case 'GM1'  :   document.getElementById('maxGames').value = 'Match of 1 game';\r\n                        break;\r\n        case 'GM4'  :   document.getElementById('maxGames').value = 'Match of 4 games';\r\n                        break;\r\n        case 'GM6'  :   document.getElementById('maxGames').value = 'Match of 6 games';\r\n                        break;\r\n        case 'GM8'  :   document.getElementById('maxGames').value = 'Match of 8 games';\r\n                        break;\r\n        case 'GM12' :   document.getElementById('maxGames').value = 'Match of 12 games';\r\n                        break;\r\n        case 'GM16' :   document.getElementById('maxGames').value = 'Match of 16 games';\r\n                        break;\r\n        case 'GM18' :   document.getElementById('maxGames').value = 'Match of 18 games';\r\n                        break;\r\n        case 'GM20' :   document.getElementById('maxGames').value = 'Match of 20 games';\r\n                        break;\r\n        case 'GM24' :   document.getElementById('maxGames').value = 'Match of 24 games';\r\n                        break;\r\n        case 'GM30' :   document.getElementById('maxGames').value = 'Match of 30 games';\r\n                        break;\r\n        case 'GM32' :   document.getElementById('maxGames').value = 'Match of 32 games';\r\n                        break;\r\n        case 'GM36' :   document.getElementById('maxGames').value = 'Match of 36 games';\r\n                        break;\r\n        case 'GM40' :   document.getElementById('maxGames').value = 'Match of 40 games';\r\n                        break;\r\n        case 'GM48' :   document.getElementById('maxGames').value = 'Match of 48 games';\r\n                        break;\r\n\r\n        case 'PT25' :   document.getElementById('maxGames').value = 'Match with target 25 points';\r\n                        break;\r\n        case 'PT50' :   document.getElementById('maxGames').value = 'Match with target 50 points';\r\n                        break;\r\n        case 'PT75' :   document.getElementById('maxGames').value = 'Match with target 75 points';\r\n                        break;\r\n        case 'PT100':   document.getElementById('maxGames').value = 'Match with target 100 points';\r\n                        break;\r\n        default     :\r\n\r\n    }\r\n\r\n}","var chairLoc = [ {\"left\":\"82.80%\", \"top\":\"65%\"}, {\"left\":\"82.80%\", \"top\":\"45%\"}, {\"left\":\"82.80%\", \"top\":\"25%\"}, {\"left\":\"42.48%\", \"top\":\"3%\"}, {\"left\":\"2.16%\", \"top\":\"25%\"}, {\"left\":\"2.16%\", \"top\":\"45%\"}, {\"left\":\"2.16%\", \"top\":\"65%\"}]\r\n    \r\nexport const pushChairsToState = (states) => {\r\n\r\n    var chairDetails = [];\r\n\r\n    for( var i=2 ; i<=Object.keys(states.MatchState.Chairs).length ; i++ ) {\r\n\r\n        if(states.MatchState.Chairs[i] !== null) {\r\n\r\n            chairDetails.push({\"Details\": states.MatchState.Chairs[i], \"Location\": chairLoc[i-2] });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // console.log(chairDetails);\r\n    states.setGameChairs(chairDetails);\r\n\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ChairPopup from './GameDetailsPopup/ChairPopup'\r\nimport { maxGamesEvent, sortChairsMatchState } from './GameDetailsPopup/GameDetailsPopup.scripts'\r\nimport { pushChairsToState } from '../Content/GameContent/GameScreen/GameScreen.scripts'\r\nimport { commandCalls, processCommandJsonGenerator } from '../Content/Misc/Timestamp.scripts' \r\nimport { moveToGameScreen } from '../../App.scripts'\r\nimport { kickOutGameHandler } from '../../App.scripts'\r\n\r\n\r\nconst GameDetailsPopup = ({ states, handlers}) => {\r\n\r\n    var chairSelected;\r\n\r\n    React.useEffect(() => {\r\n\r\n        console.log('hit at popuprefresh')\r\n        let arrDisableButtons = Array.from(document.getElementsByClassName('gameDetailsTableButton'));\r\n\r\n        if ( ! (states.CurrentPage == 'gameScreen') ) {\r\n\r\n            arrDisableButtons.forEach(item => {\r\n\r\n                if ( item.parentNode.parentNode.childNodes[1].innerText == 'Free')\r\n                    item.innerText = 'Join';\r\n                else    \r\n                    item.innerText = 'Watch';\r\n\r\n                item.style.removeProperty('pointer-events');\r\n                item.style.backgroundColor = 'black';\r\n\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }, [states.CurrentPage])\r\n\r\n    //when you click on join/watch in the popup\r\n    const detailsTableItemClick = (e) => {\r\n        // debugger;\r\n\r\n        chairSelected = parseInt(e.target.parentElement.parentElement.firstChild.lastChild.textContent);\r\n\r\n        document.querySelectorAll('.gameDetailsTableButton').forEach(item => {\r\n\r\n            if (item !== e.target)\r\n                item.style.backgroundColor = 'black';\r\n\r\n        });\r\n\r\n        if (window.getComputedStyle(e.target).backgroundColor == 'rgb(0, 0, 0)')\r\n            e.target.style.backgroundColor = '#C0C0C0';\r\n        else    \r\n            e.target.style.backgroundColor = 'black';\r\n\r\n    }\r\n\r\n    // const closeGameDetailsPopup = () => {\r\n\r\n    //     document.getElementById('gameDetails').style.display= 'none';\r\n    //     document.getElementById('container').style.opacity = '1';\r\n\r\n    // }\r\n\r\n    // const history = useHistory();\r\n\r\n    const actionGameDetailsPopup = ( e, states) => {\r\n     \r\n        console.log('match admin ' + states.MatchState.MatchAdmin);\r\n        // console.log(document.getElementById('gameDetailsMatchAdmin').innerText == 'Match Admin');\r\n\r\n        //below code works if in gameScreen, so Kick can work for admin\r\n        if ( states.CurrentPage == 'gameScreen' ) {\r\n\r\n            // debugger;\r\n\r\n            if ( e.target.innerText == 'Kick' ) {\r\n\r\n                let userName = e.target.parentNode.parentNode.childNodes[1].innerText;\r\n                let chairNo = e.target.parentNode.parentNode.firstChild.innerText;\r\n\r\n                // opening confirmation popup\r\n                document.getElementById('gameDetailsWrapper').style.opacity = 0.5;\r\n                document.getElementById('confirmationMessage').innerHTML = 'Are you sure you want to kick out ' + userName + ' ?';\r\n                document.getElementById('noButtonConfirmation').style.display = 'flex'; \r\n                document.getElementById('yesButtonConfirmation').style.display = 'flex'; \r\n                document.getElementById('okButtonConfirmation').style.display = 'none'; \r\n                \r\n                states.setProcessCommandValues(values => ({\r\n                    ...values,\r\n                    ChairNo: chairNo\r\n                }));\r\n\r\n                document.getElementById('popupConfirmation').style.display = 'block';\r\n                document.getElementById('container').style.opacity = '0.5';  \r\n\r\n                // console.log('new kick hit');\r\n                // kickOutGameHandler( e, states);\r\n        \r\n            }\r\n\r\n        }\r\n\r\n        //below code works for other pages, so Join works for everyone\r\n        else {\r\n\r\n            //'if' works if it's gameTile\r\n            // if ( document.getElementById('playerLevel').hasAttribute('disabled') ) {\r\n            // if (document.getElementById('gameDetailsMatchAdmin').innerText !== 'Match Admin' ) {\r\n            if ( states.ProcessCommandValues.TileType == 'tableTile' ) {\r\n\r\n                states.setProcessCommandValues(values => ({...values, \r\n                    GroupID: states.ProcessCommandValues.GroupID, \r\n                    MatchID: states.ProcessCommandValues.MatchID,\r\n                    ChairNo: e.target.parentNode.parentNode.firstChild.lastChild.innerText,\r\n                    EnableAllPass: states.MatchState.EnableAllPass,\r\n                    EnforceFollowSuit: states.PossibleValues.Defaults.EnforceFollowSuit,\r\n                    GameRules: states.PossibleValues.Defaults.GameRules,\r\n                    MaxPlay : states.MatchState.MaxPlay,\r\n                    NumberOfPlayers: states.MatchState.NumberOfPlayers,\r\n                    PlayerLevel: states.MatchState.PlayerLevel,\r\n                    ShowGamePoints: states.MatchState.ShowGamePoints,\r\n                    ShowRemainingPoints: states.MatchState.ShowRemainingPoints,\r\n                    PublicMatch: states.MatchState.PublicMatch,\r\n                    GameDetailsPopupEnd: Math.random()\r\n\r\n                }));\r\n\r\n                // commandCalls( [\"Register\", \"TakeChairInTable, GetMatchState\"], states);\r\n                pushChairsToState(states);\r\n\r\n            }    \r\n            //else works if it's a createTile\r\n            else {\r\n\r\n                let json = {};\r\n\r\n                switch ( document.getElementById('playerLevel').value ) {\r\n\r\n                    case 'Beginner'     :   json[\"PlayerLevel\"] = 'B';\r\n                                            break;\r\n                    case 'Intermediate' :   json[\"PlayerLevel\"] = 'I';\r\n                                            break;\r\n                    case 'Expert'       :   json[\"PlayerLevel\"] = 'E';\r\n                                            break;\r\n                    default             :\r\n                        \r\n                }\r\n\r\n                switch ( document.getElementById('gameRules').value ) {\r\n\r\n                    case 'International':   json[\"GameRules\"] = 'INT';\r\n                                            break;\r\n                    case 'Kerala'       :   json[\"GameRules\"] = 'KER';\r\n                                            break;            \r\n                    default     :\r\n                }\r\n                switch ( document.getElementById('gamePoints').value ) {\r\n\r\n                    case 'Show' :   json[\"ShowGamePoints\"] = 'Y';\r\n                                    break;\r\n                    case 'Hide' :   json[\"ShowGamePoints\"] = 'N';\r\n                                    break;            \r\n                    default     :\r\n                }\r\n                switch ( document.getElementById('remainingPoints').value ) {\r\n\r\n                    case 'Show' :   json[\"ShowRemainingPoints\"] = 'Y';\r\n                                    break;\r\n                    case 'Hide' :   json[\"ShowRemainingPoints\"] = 'N';\r\n                                    break;            \r\n                    default     :\r\n                }\r\n                switch ( document.getElementById('allPass').value ) {\r\n\r\n                    case 'Enabled'  :   json[\"EnableAllPass\"] = 'Y';\r\n                                        break;\r\n                    case 'Disabled' :   json[\"EnableAllPass\"] = 'N';\r\n                                        break;  \r\n                    default         :            \r\n\r\n                }\r\n\r\n                let currentChair = parseInt(e.target.parentNode.parentNode.firstChild.lastChild.innerText);\r\n                let chairs = [];\r\n\r\n                switch ( document.getElementById('numberOfPlayers').value ) {\r\n\r\n                    case '4 Player'                     :   json[\"NumberOfPlayers\"] = '4';\r\n\r\n                                                            //below is for the initial render of gameScreen\r\n                                                            chairs = [ currentChair, (currentChair + 1) % 4, (currentChair + 2) % 4, (currentChair + 3) % 4];\r\n\r\n                                                            for (let i=0 ; i<chairs.length ; i++) {\r\n                                                                if ( chairs[i]==0 )\r\n                                                                    chairs[i] = 4;\r\n                                                            }\r\n                                                            //other matchstate values dont matter now\r\n                                                            states.setMatchState(values => ({\r\n                                                                ...values,\r\n                                                                Chairs: {\"1\":{\"ChairNo\":chairs[0],\"PlayerName\":\"Player 1\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"2\":null,\"3\":{\"ChairNo\":chairs[1],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"4\":null,\"5\":{\"ChairNo\":chairs[2],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"6\":null,\"7\":{\"ChairNo\":chairs[3],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"8\":null}\r\n                                                            })\r\n                                                                // {\"MatchStatus\":\"StartNewGame\",\"NumberOfPlayers\":4,\"AllowedHelpLevel\":null,\"MaxPlay\":\"GM12\",\"GameRules\":\"KER\",\"PlayerLevel\":\"I\",\"EnforceFollowSuit\":\"Y\",\"ShowGamePoints\":\"Y\",\"ShowRemainingPoints\":\"N\",\"EnableAllPass\":\"N\",\"PublicMatch\":null,\"MatchAdmin\":\"Y\",\"MinimumWaitSeconds\":0,\"RefreshRequired\":\"No\",\"LastRefreshTimestamp\":\"2021-04-28 09:00:00\",\"RefreshCalls\":{},\"Chairs\":{\"1\":{\"ChairNo\":chairs[0],\"PlayerName\":\"Player 1\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"2\":null,\"3\":{\"ChairNo\":chairs[1],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"4\":null,\"5\":{\"ChairNo\":chairs[2],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"6\":null,\"7\":{\"ChairNo\":chairs[3],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"8\":null}}\r\n                                                            );\r\n                                                            break;\r\n                    case '6 Player'                     :   json[\"NumberOfPlayers\"] = '6';\r\n                                                            chairs = [ currentChair, (currentChair + 1) % 6, (currentChair + 2) % 6, (currentChair + 3) % 6, (currentChair + 4) % 6, (currentChair + 5) % 6];\r\n\r\n                                                            for (let i=0 ; i<chairs.length ; i++) {\r\n                                                                if ( chairs[i]==0 )\r\n                                                                    chairs[i] = 6;\r\n                                                            }\r\n                                                            states.setMatchState(values => ({\r\n                                                                ...values,\r\n                                                                Chairs: {\"1\":{\"ChairNo\":chairs[0],\"PlayerName\":\"Player 1\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"2\":{\"ChairNo\":chairs[1],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"3\":null,\"4\":{\"ChairNo\":chairs[2],\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"5\":{\"ChairNo\":chairs[3],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"6\":{\"ChairNo\":chairs[4],\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"7\":null,\"8\":{\"ChairNo\":chairs[5],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}}\r\n                                                            })\r\n                                                                // {\"MatchStatus\":\"StartNewGame\",\"NumberOfPlayers\":6,\"AllowedHelpLevel\":null,\"MaxPlay\":\"GM12\",\"GameRules\":\"KER\",\"PlayerLevel\":\"I\",\"EnforceFollowSuit\":\"Y\",\"ShowGamePoints\":\"Y\",\"ShowRemainingPoints\":\"N\",\"EnableAllPass\":\"N\",\"PublicMatch\":null,\"MatchAdmin\":\"Yes\",\"MinimumWaitSeconds\":0,\"RefreshRequired\":\"No\",\"LastRefreshTimestamp\":\"2021-04-28 09:00:00\",\"RefreshCalls\":{},\"Chairs\":{\"1\":{\"ChairNo\":chairs[0],\"PlayerName\":\"Player 1\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"2\":{\"ChairNo\":chairs[1],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"3\":null,\"4\":{\"ChairNo\":chairs[2],\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"5\":{\"ChairNo\":chairs[3],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"6\":{\"ChairNo\":chairs[4],\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"7\":null,\"8\":{\"ChairNo\":chairs[5],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}}}\r\n                                                            );\r\n                                                            break;\r\n                    case '8 Player with 6 cards each'   :   json[\"NumberOfPlayers\"] = '86';\r\n                                                            chairs = [ currentChair, (currentChair + 1) % 8, (currentChair + 2) % 8, (currentChair + 3) % 8, (currentChair + 4) % 8, (currentChair + 5) % 8, (currentChair + 6) % 8, (currentChair + 7) % 8];\r\n\r\n                                                            for (let i=0 ; i<chairs.length ; i++) {\r\n                                                                if ( chairs[i]==0 )\r\n                                                                    chairs[i] = 8;\r\n                                                            }\r\n                                                            states.setMatchState(values => ({\r\n                                                                ...values,\r\n                                                                Chairs: {\"1\":{\"ChairNo\":chairs[0],\"PlayerName\":\"Player 1\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"2\":{\"ChairNo\":chairs[1],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"3\":{\"ChairNo\":chairs[2],\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"4\":{\"ChairNo\":chairs[3],\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"5\":{\"ChairNo\":chairs[4],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"6\":{\"ChairNo\":chairs[5],\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"7\":{\"ChairNo\":chairs[6],\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"8\":{\"ChairNo\":chairs[7],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}}\r\n                                                            })\r\n                                                                // {\"MatchStatus\":\"StartNewGame\",\"NumberOfPlayers\":6,\"AllowedHelpLevel\":null,\"MaxPlay\":\"GM12\",\"GameRules\":\"KER\",\"PlayerLevel\":\"I\",\"EnforceFollowSuit\":\"Y\",\"ShowGamePoints\":\"Y\",\"ShowRemainingPoints\":\"N\",\"EnableAllPass\":\"N\",\"PublicMatch\":null,\"MatchAdmin\":\"Yes\",\"MinimumWaitSeconds\":0,\"RefreshRequired\":\"No\",\"LastRefreshTimestamp\":\"2021-04-28 09:00:00\",\"RefreshCalls\":{},\"Chairs\":{\"1\":{\"ChairNo\":chairs[0],\"PlayerName\":\"Player 1\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"2\":{\"ChairNo\":chairs[1],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"3\":{\"ChairNo\":chairs[2],\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"4\":{\"ChairNo\":chairs[3],\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"5\":{\"ChairNo\":chairs[4],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"6\":{\"ChairNo\":chairs[5],\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"7\":{\"ChairNo\":chairs[6],\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"8\":{\"ChairNo\":chairs[7],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}}}\r\n                                                            );\r\n                                                            break;\r\n                    case '8 Player with 8 cards each'   :   json[\"NumberOfPlayers\"] = '88';\r\n                                                            chairs = [ currentChair, (currentChair + 1) % 8, (currentChair + 2) % 8, (currentChair + 3) % 8, (currentChair + 4) % 8, (currentChair + 5) % 8, (currentChair + 6) % 8, (currentChair + 7) % 8];\r\n\r\n                                                            for (let i=0 ; i<chairs.length ; i++) {\r\n                                                                if ( chairs[i]==0 )\r\n                                                                    chairs[i] = 8;\r\n                                                            }\r\n                                                            states.setMatchState(values => ({\r\n                                                                ...values,\r\n                                                                Chairs: {\"1\":{\"ChairNo\":chairs[0],\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"2\":{\"ChairNo\":chairs[1],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"3\":{\"ChairNo\":chairs[2],\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"4\":{\"ChairNo\":chairs[3],\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"5\":{\"ChairNo\":chairs[4],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"6\":{\"ChairNo\":chairs[5],\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"7\":{\"ChairNo\":chairs[6],\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"8\":{\"ChairNo\":chairs[7],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}}\r\n                                                            })\r\n                                                                // {\"MatchStatus\":\"StartNewGame\",\"NumberOfPlayers\":6,\"AllowedHelpLevel\":null,\"MaxPlay\":\"GM12\",\"GameRules\":\"KER\",\"PlayerLevel\":\"I\",\"EnforceFollowSuit\":\"Y\",\"ShowGamePoints\":\"Y\",\"ShowRemainingPoints\":\"N\",\"EnableAllPass\":\"N\",\"PublicMatch\":null,\"MatchAdmin\":\"Yes\",\"MinimumWaitSeconds\":0,\"RefreshRequired\":\"No\",\"LastRefreshTimestamp\":\"2021-04-28 09:00:00\",\"RefreshCalls\":{},\"Chairs\":{\"1\":{\"ChairNo\":chairs[0],\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"2\":{\"ChairNo\":chairs[1],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"3\":{\"ChairNo\":chairs[2],\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"4\":{\"ChairNo\":chairs[3],\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"5\":{\"ChairNo\":chairs[4],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"6\":{\"ChairNo\":chairs[5],\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"7\":{\"ChairNo\":chairs[6],\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"8\":{\"ChairNo\":chairs[7],\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}}}\r\n                                                            );\r\n                                                            break;            \r\n                    default                             :    \r\n\r\n                }\r\n                switch ( document.getElementById('gameDetailsTitle').innerText ) {\r\n\r\n                    case 'Start Public Match'           :   json[\"PublicMatch\"] = \"Y\";\r\n                                                            break;\r\n                    default                             :\r\n                    \r\n                }\r\n\r\n                switch ( document.getElementById('maxGames').value ) {\r\n\r\n                    case 'Match of 1 game'  :   json[\"MaxPlay\"] = 'GM1';\r\n                                                break;\r\n                    case 'Match of 4 games' :   json[\"MaxPlay\"] = 'GM4';\r\n                                                break;\r\n                    case 'Match of 6 games'  :  json[\"MaxPlay\"] = 'GM6';\r\n                                                break;\r\n                    case 'Match of 8 games'  :  json[\"MaxPlay\"] = 'GM8';\r\n                                                break;\r\n                    case 'Match of 12 games' :  json[\"MaxPlay\"] = 'GM12';\r\n                                                break;\r\n                    case 'Match of 16 games' :  json[\"MaxPlay\"] = 'GM16';\r\n                                                break;\r\n                    case 'Match of 18 games' :  json[\"MaxPlay\"] = 'GM18';\r\n                                                break;\r\n                    case 'Match of 20 games' :  json[\"MaxPlay\"] = 'GM20';\r\n                                                break;\r\n                    case 'Match of 24 games' :  json[\"MaxPlay\"] = 'GM24';\r\n                                                break;\r\n                    case 'Match of 30 games' :  json[\"MaxPlay\"] = 'GM30';\r\n                                                break;\r\n                    case 'Match of 32 games' :  json[\"MaxPlay\"] = 'GM32';\r\n                                                break;\r\n                    case 'Match of 36 games' :  json[\"MaxPlay\"] = 'GM36';\r\n                                                break;\r\n                    case 'Match of 40 games' :  json[\"MaxPlay\"] = 'GM40';\r\n                                                break;\r\n                    case 'Match of 48 games' :  json[\"MaxPlay\"] = 'GM48';\r\n                                                break;\r\n\r\n                    case 'Match with target 25 points'  :   json[\"MaxPlay\"] = 'PT25';\r\n                                                            break;\r\n                    case 'Match with target 50 points'  :   json[\"MaxPlay\"] = 'PT50';\r\n                                                            break;\r\n                    case 'Match with target 75 points'  :   json[\"MaxPlay\"] = 'PT75';\r\n                                                            break;\r\n                    case 'Match with target 100 points' :   json[\"MaxPlay\"] = 'PT100';\r\n                                                            break;\r\n                                                \r\n                                                \r\n                    default :    \r\n\r\n                }\r\n\r\n\r\n                states.setProcessCommandValues(values => ({...values, \r\n                    GroupID: states.ProcessCommandValues.GroupID, \r\n                    MatchID: '',\r\n                    ChairNo: e.target.parentNode.parentNode.firstChild.lastChild.innerText,\r\n                    EnableAllPass: json[\"EnableAllPass\"],\r\n                    EnforceFollowSuit: states.PossibleValues.Defaults.EnforceFollowSuit,\r\n                    GameRules: json[\"GameRules\"],\r\n                    MaxPlay : json[\"MaxPlay\"],\r\n                    NumberOfPlayers: json[\"NumberOfPlayers\"],\r\n                    PlayerLevel: json[\"PlayerLevel\"],\r\n                    ShowGamePoints: json[\"ShowGamePoints\"],\r\n                    ShowRemainingPoints: json[\"ShowRemainingPoints\"],\r\n                    PublicMatch: json[\"PublicMatch\"],\r\n                    GameDetailsPopupEnd: Math.random()\r\n\r\n                }));\r\n\r\n\r\n\r\n            }        \r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n        // console.log(states.ProcessCommandValues);\r\n        \r\n        // runs when join/watch is clicked, below code also won't run in initial render\r\n        if (states.ProcessCommandValues.GameDetailsPopupEnd !== 'init') {\r\n\r\n            console.log('popupwindow close');\r\n\r\n\r\n            try {\r\n\r\n                document.getElementById('adContent').style.height = 'calc( 40% - 60px) ';\r\n                document.getElementById('adContent').lastChild.style.height = 'calc( 40% - 60px) '\r\n                document.getElementById('adContent').lastChild.firstChild.style.height = 'calc( 40% - 60px) '\r\n                document.getElementById('adContent').lastChild.firstChild.firstChild.style.height = 'calc( 40% - 60px) '\r\n                document.getElementById('adContent').lastChild.firstChild.firstChild.firstChild.style.height = 'calc( 40% - 60px) '\r\n        \r\n                switch ( document.getElementById('gameDetailsTitle').innerText ) {\r\n\r\n                    case 'Start Public Match'   :\r\n                    case 'New Table'            :\r\n                                                    commandCalls( [\"CreateMatch\", \"TakeChairInTable\", \"GetMatchState\"], states);\r\n                                                    console.log('commandCalls',  [\"CreateMatch\",\"TakeChairInTable\", \"GetMatchState\"]);\r\n                                                    break;\r\n                    default                     :\r\n                                                    //if user already in match no need to call TakeChairInTable\r\n                                                    if ( states.ProcessCommandValues.MyMatch == 'Y' ) {                                               \r\n                                                        commandCalls( [\"GetMatchState\"], states);\r\n                                                        console.log('commandCalls at join',  [\"GetMatchState\"]);\r\n                                                    }\r\n                                                    else {\r\n                                                        commandCalls( [\"TakeChairInTable\", \"GetMatchState\"], states);\r\n                                                        console.log('commandCalls at join',  [\"TakeChairInTable\", \"GetMatchState\"]);\r\n                                                    }\r\n\r\n                }\r\n        \r\n                moveToGameScreen(states);\r\n                console.log('moved to gamescreen')\r\n                handlers.closeGameDetailsPopup();\r\n            }\r\n        \r\n            catch {\r\n                document.getElementById('adContent').style.height = 'calc( 100vh - 60px) ';\r\n                alert('Please enable ads and then refresh to continue!!');\r\n            }\r\n            \r\n\r\n\r\n\r\n           \r\n\r\n            // pushChairsToState(states);\r\n\r\n        }\r\n       \r\n\r\n        \r\n    // }, [states.ProcessCommandValues]);\r\n    }, [states.ProcessCommandValues.GameDetailsPopupEnd]);\r\n\r\n    React.useEffect(() => {\r\n        \r\n        if (states.CurrentPage == 'gameScreen'){\r\n            console.log('hit at gameScreenpuchchair');\r\n            pushChairsToState(states);\r\n        }\r\n            // pushChairsToState(states);\r\n\r\n    }, [states.MatchState]);\r\n\r\n\r\n\r\n    return (\r\n        <GameDetailsContainer id=\"gameDetails\">\r\n            <GameDetailsContainerWrapper id=\"gameDetailsWrapper\">\r\n            <GameDetailsHeader>\r\n                <GameDetailsTitle id=\"gameDetailsTitle\">\r\n                    New Public Match\r\n                </GameDetailsTitle>\r\n\r\n                <GameDetailsAdmin id=\"gameDetailsMatchAdmin\"></GameDetailsAdmin>\r\n\r\n                <GameDetailsIcons id=\"gameDetailsIcons\">\r\n                    <Icon id=\"saveButton\" onClick={e => handlers.gameDetailsIconHandler(e) } bg={'others/save-solid.svg'} />\r\n                    <Icon id=\"deleteButton\" onClick={e => handlers.gameDetailsIconHandler(e) } bg={'others/trash-solid.svg'} />\r\n                    <Icon id=\"resetButton\" onClick={e => handlers.gameDetailsIconHandler(e) } bg={'others/reset-solid.svg'} />\r\n                    <Icon id=\"copyLinkButton\" onClick={e => handlers.gameDetailsIconHandler(e) } bg={'others/copy-solid.svg'} />\r\n                </GameDetailsIcons>\r\n            </GameDetailsHeader>\r\n            \r\n            <GameDetailsContent>\r\n                <GameDetailsSheet1>\r\n\r\n                    <GameDetailsItem>\r\n                        <GameDetailsLabel>Player Level</GameDetailsLabel>\r\n                        <GameDetailsSelect className=\"matchDetailsItem\" id=\"playerLevel\">\r\n                       \r\n                            {Object.keys(states.PossibleValues.ListOfValues.PlayerLevel).map((item1) => (\r\n\t\r\n                                Object.keys(states.PossibleValues.ListOfValues.PlayerLevel[item1]).map((item2) => (\r\n                                    // <p>{console.log(states.PossibleValues.ListOfValues.PlayerLevel[item1][item2])}</p>\r\n                                    <option key={Object.keys(states.PossibleValues.ListOfValues.PlayerLevel)}>{states.PossibleValues.ListOfValues.PlayerLevel[item1][item2]}</option>\r\n                                ))\r\n                            ))}\r\n\r\n                            {/* <option>Beginner</option> */}\r\n                        </GameDetailsSelect>\r\n                    </GameDetailsItem>\r\n\r\n                    <GameDetailsItem>\r\n                        <GameDetailsLabel>Max Games / Points</GameDetailsLabel>\r\n                        <GameDetailsSelect className=\"matchDetailsItem\" id=\"maxGames\">\r\n\r\n                            {/* <option>Match of 12 games</option> */}\r\n                        </GameDetailsSelect>\r\n                    </GameDetailsItem>\r\n                    \r\n                    <GameDetailsItem>\r\n                        <GameDetailsLabel>Game Rules</GameDetailsLabel>\r\n                        <GameDetailsSelect className=\"matchDetailsItem\" id=\"gameRules\">\r\n\r\n                            {Object.keys(states.PossibleValues.ListOfValues.GameRules).map((item1) => (\r\n\t\r\n                                Object.keys(states.PossibleValues.ListOfValues.GameRules[item1]).map((item2) => (\r\n                                    // <p>{console.log(states.PossibleValues.ListOfValues.PlayerLevel[item1][item2])}</p>\r\n                                    <option  key={Object.keys(states.PossibleValues.ListOfValues.GameRules)}>{states.PossibleValues.ListOfValues.GameRules[item1][item2]}</option>\r\n                                ))\r\n                            ))}\r\n\r\n                            {/* <option>Show</option> */}\r\n                        </GameDetailsSelect>\r\n                    </GameDetailsItem>\r\n\r\n                    <GameDetailsItem>\r\n                        <GameDetailsLabel>Game Points</GameDetailsLabel>\r\n                        <GameDetailsSelect className=\"matchDetailsItem\" id=\"gamePoints\">\r\n\r\n                            {Object.keys(states.PossibleValues.ListOfValues.ShowGamePoints).map((item1) => (\r\n\t\r\n                                Object.keys(states.PossibleValues.ListOfValues.ShowGamePoints[item1]).map((item2) => (\r\n                                    // <p>{console.log(states.PossibleValues.ListOfValues.PlayerLevel[item1][item2])}</p>\r\n                                    <option  key={Object.keys(states.PossibleValues.ListOfValues.ShowGamePoints)}>{states.PossibleValues.ListOfValues.ShowGamePoints[item1][item2]}</option>\r\n                                ))\r\n                            ))}\r\n\r\n                            {/* <option>Show</option> */}\r\n                        </GameDetailsSelect>\r\n                    </GameDetailsItem>\r\n\r\n                    <GameDetailsItem>\r\n                        <GameDetailsLabel>Remaining Points</GameDetailsLabel>\r\n                        <GameDetailsSelect className=\"matchDetailsItem\" id=\"remainingPoints\">\r\n\r\n                            {Object.keys(states.PossibleValues.ListOfValues.ShowRemainingPoints).map((item1) => (\r\n\t\r\n                                Object.keys(states.PossibleValues.ListOfValues.ShowRemainingPoints[item1]).map((item2) => (\r\n                                    // <p>{console.log(states.PossibleValues.ListOfValues.PlayerLevel[item1][item2])}</p>\r\n                                    <option  key={Object.keys(states.PossibleValues.ListOfValues.ShowRemainingPoints)} >{states.PossibleValues.ListOfValues.ShowRemainingPoints[item1][item2]}</option>\r\n                                ))\r\n                            ))}\r\n\r\n                            {/* <option>Show</option> */}\r\n                        </GameDetailsSelect>\r\n                    </GameDetailsItem>\r\n\r\n                    <GameDetailsItem>\r\n                        <GameDetailsLabel>All Pass</GameDetailsLabel>\r\n                        <GameDetailsSelect className=\"matchDetailsItem\" id=\"allPass\">\r\n\r\n                            {Object.keys(states.PossibleValues.ListOfValues.EnableAllPass).map((item1) => (\r\n\t\r\n                                Object.keys(states.PossibleValues.ListOfValues.EnableAllPass[item1]).map((item2) => (\r\n                                    // <p>{console.log(states.PossibleValues.ListOfValues.PlayerLevel[item1][item2])}</p>\r\n                                    <option  key={Object.keys(states.PossibleValues.ListOfValues.EnableAllPass)} >{states.PossibleValues.ListOfValues.EnableAllPass[item1][item2]}</option>\r\n                                ))\r\n                            ))}\r\n\r\n                            {/* <option>Disabled</option> */}\r\n                        </GameDetailsSelect>\r\n                    </GameDetailsItem>\r\n\r\n                    <GameDetailsItem>\r\n                        <GameDetailsLabel>Number of Players</GameDetailsLabel>\r\n                        <GameDetailsSelect onChange={() => maxGamesEvent(states, 'popupClick')} className=\"matchDetailsItem\" id=\"numberOfPlayers\">\r\n\r\n                            {Object.keys(states.PossibleValues.ListOfValues.NumberOfPlayers).map((item1) => (\r\n\t\r\n                                Object.keys(states.PossibleValues.ListOfValues.NumberOfPlayers[item1]).map((item2) => (\r\n                                    // <p>{console.log(states.PossibleValues.ListOfValues.PlayerLevel[item1][item2])}</p>\r\n                                    <option key={Object.keys(states.PossibleValues.ListOfValues.NumberOfPlayers)} >{states.PossibleValues.ListOfValues.NumberOfPlayers[item1][item2]}</option>\r\n                                ))\r\n                            ))}\r\n\r\n                            {/* <option>8 players with 8 cards each</option> */}\r\n                        </GameDetailsSelect>\r\n                    </GameDetailsItem>\r\n\r\n                    {/* <GameDetailsItem>\r\n                        <GameDetailsLabel>Match Admin</GameDetailsLabel>\r\n                        <GameDetailsSelect className=\"matchDetailsItem\" id=\"matchAdmin\">\r\n                            <option>rohith8194</option>\r\n                        </GameDetailsSelect>\r\n                    </GameDetailsItem> */}\r\n                    \r\n                \r\n                </GameDetailsSheet1>\r\n                \r\n                <GameDetailsSheet2>\r\n\r\n                    <GameDetailsTable>\r\n                        <GameDetailsTableHeading>\r\n                            <TableHeadingItem>Chair No</TableHeadingItem>\r\n                            <TableHeadingItem>Chair Status</TableHeadingItem>\r\n                            <TableHeadingItem>Action</TableHeadingItem>\r\n                        </GameDetailsTableHeading>\r\n\r\n                        {/* {Object.keys(states.MatchState.Chairs).map((item) => ( */}\r\n\r\n                        {/* {sortChairsMatchState()} */}\r\n\r\n                        {states.PopupChairs.map((item) => (\r\n                            // console.log(states.MatchState.Chairs[item])\r\n                            // <ChairPopup key={item.ChairNo} bg={(item.ChairNo % 2) == 0 ? '#F0F0F0' : '#E0E0E0' } chairInfo={states.MatchState.Chairs[item]} detailsTableItemClick={detailsTableItemClick} />\r\n                            <ChairPopup key={item.ChairNo} bg={(item.ChairNo % 2) == 0 ? '#F0F0F0' : '#E0E0E0' } chairInfo={item} states={states} handlers={{detailsTableItemClick, actionGameDetailsPopup}} />\r\n\r\n                        ))}\r\n\r\n                \r\n                    </GameDetailsTable>\r\n\r\n                </GameDetailsSheet2>\r\n\r\n            </GameDetailsContent>\r\n    \r\n                <GameDetailsFooter>\r\n                    <GameDetailsFooterButton onClick={() => handlers.closeGameDetailsPopup()} float={'left'} bg={'#808080'} >Cancel</GameDetailsFooterButton>\r\n                    {/* <GameDetailsFooterButton onClick={() => actionGameDetailsPopup()} float={'right'} bg={'#373737'}>Next</GameDetailsFooterButton> */}\r\n                </GameDetailsFooter>\r\n\r\n            </GameDetailsContainerWrapper>\r\n        </GameDetailsContainer>\r\n    )\r\n}\r\n\r\nconst GameDetailsContainer = styled.div`\r\n\r\n    @media (max-width: 480px) {\r\n        height: 620px;\r\n        width: 320px;\r\n        top: calc( (100vh - 620px) / 2 );\r\n        left: calc( (100vw - 320px) / 2 );\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        height: 600px;\r\n        width: 480px;\r\n        top: calc( (100vh - 600px) / 2 );\r\n        left: calc( (100vw - 480px) / 2 );\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        height: 600px;\r\n        width: 90%;\r\n        top: calc( (100vh - 600px) / 2 );\r\n        left: calc( (100vw - 90%) / 2 );\r\n    }\r\n    @media (min-width: 992px) {\r\n        height: 600px;\r\n        width: 900px;\r\n        top: calc( (100vh - 600px) / 2 );\r\n        left: calc( (100vw - 900px) / 2 );\r\n    }\r\n\r\n    display: none;\r\n    background-color: white;\r\n    // height: 600px;\r\n    // width: 900px;\r\n    position: fixed;\r\n    // top: calc( (100vh - 600px) / 2 );\r\n    // left: calc( (100vw - 900px) / 2 );\r\n    z-index: 2;\r\n    // color: #808080;\r\n`\r\n\r\nconst GameDetailsContainerWrapper = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n`\r\n\r\nconst GameDetailsHeader = styled.div`\r\n    // background-color: red;\r\n    // height: 15%;\r\n\r\n    @media (max-width: 480px) {\r\n        height: 20%;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        height: 30%;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        height: 15%;\r\n    }\r\n    @media (min-width: 992px) {\r\n        height: 15%;\r\n    }\r\n\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    position: relative;\r\n`\r\n\r\nconst GameDetailsTitle = styled.div`\r\n    // background-color: purple;\r\n    // height: 100%;\r\n    // width: 40%;\r\n\r\n    @media (max-width: 480px) {\r\n        height: 50%;\r\n        width: 60%;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        height: 50%;\r\n        width: 60%;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        height: 100%;\r\n        width: 40%;\r\n    }\r\n    @media (min-width: 992px) {\r\n        height: 100%;\r\n        width: 40%;\r\n    }\r\n\r\n    // float: left;\r\n    display: flexbox;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #373737;\r\n    // position: absolute;\r\n    // left: 0;\r\n`\r\n\r\nconst GameDetailsIcons = styled.div`\r\n    // background-color: blue;\r\n    // height: 100%;\r\n    // width: 30%;\r\n\r\n    @media (max-width: 480px) {\r\n        height: 50%;\r\n        width: 100%;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        height: 50%;\r\n        width: 100%;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        height: 100%;\r\n        width: 40%;\r\n    }\r\n    @media (min-width: 992px) {\r\n        height: 100%;\r\n        width: 40%;\r\n    }\r\n\r\n    // float: right;\r\n    display: flexbox;\r\n    flex-wrap: wrap;\r\n    // position: absolute;\r\n    // right: 0;\r\n    display: none;\r\n`\r\n\r\nconst GameDetailsAdmin = styled.div`\r\n    // height: 100%;\r\n    // width: 30%;\r\n\r\n    @media (max-width: 480px) {\r\n        height: 50%;\r\n        width: 40%;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        height: 50%;\r\n        width: 40%;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        height: 100%;\r\n        width: 20%;\r\n    }\r\n    @media (min-width: 992px) {\r\n        height: 100%;\r\n        width: 20%;\r\n    }\r\n\r\n    // background-color: red;\r\n    // float: right;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #373737;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    // position: absolute;\r\n    // right: 25%;\r\n`\r\n\r\nconst Icon = styled.div`\r\n    background: url(${props => props.bg});\r\n    height: 100%;\r\n    width: 20%;\r\n    margin-left: 4%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n\r\n    @media (max-width: 480px) {\r\n        background-size: 40%;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        background-size: 40%;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        background-size: 40%;\r\n    }\r\n    @media (min-width: 992px) {\r\n        background-size: 40%;\r\n    }\r\n\r\n    // background-size: 50%;\r\n    cursor: pointer;\r\n`\r\n\r\nconst GameDetailsContent = styled.div`\r\n    // background-color: green;\r\n    // height: 70%;\r\n\r\n    @media (max-width: 480px) {\r\n        height: 65%;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        height: 55%;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        height: 70%;\r\n    }\r\n    @media (min-width: 992px) {\r\n        height: 70%;\r\n    }\r\n\r\n    width: 100%;\r\n    display: flexbox;\r\n    flex-wrap: wrap;\r\n    overflow-y: scroll;\r\n`\r\n\r\nconst GameDetailsSheet1 = styled.div`\r\n    // background-color: green;\r\n    height: 100%;\r\n    // width: 50%;\r\n\r\n    @media (max-width: 480px) {\r\n        width: 100%;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        width: 100%;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        width: 50%;\r\n    }\r\n    @media (min-width: 992px) {\r\n        width: 50%;\r\n    }\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst GameDetailsItem = styled.div`\r\n    // height: 9%;\r\n    width: 90%;\r\n\r\n    @media (max-width: 480px) {\r\n        height: 13%;\r\n        margin-top: 0%;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        height: 9%;\r\n        margin-top: 3%;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        height: 9%;\r\n        margin-top: 3%;\r\n    }\r\n    @media (min-width: 992px) {\r\n        height: 9%;\r\n        margin-top: 3%;\r\n    }\r\n\r\n    display: flexbox;\r\n    flex-wrap: wrap;\r\n    position: relative;\r\n    left: 5%;\r\n    // margin-top: 3%;\r\n`\r\n\r\nconst GameDetailsLabel = styled.div`\r\n    // height: 100%;\r\n\r\n    @media (max-width: 480px) {\r\n        height: 50%;\r\n        width: 100%\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        height: 100%;\r\n        width: 40%;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        height: 100%;\r\n        width: 40%;\r\n    }\r\n    @media (min-width: 992px) {\r\n        height: 100%;\r\n        width: 40%;\r\n    }\r\n\r\n    // width: 40%;\r\n    display: flexbox;\r\n    align-items: center;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #373737;\r\n`\r\n\r\nconst GameDetailsSelect = styled.select`\r\n    // height: 100%;\r\n    // width: 60%;\r\n\r\n    @media (max-width: 480px) {\r\n        width: 100%;\r\n        height: 50%;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        width: 225px;\r\n        height: 100%;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        width: 170px;\r\n        height: 100%;\r\n    }\r\n    @media (min-width: 992px) {\r\n        width: 230px;\r\n        height: 100%;\r\n    }\r\n\r\n\r\n    font-size: 14px;\r\n    border: 1px solid gray;\r\n    outline: none;\r\n    padding-left: 10px;\r\n    font-size: 14px;\r\n    border-radius: 5px;\r\n    // -moz-appearance:none;\r\n\r\n`\r\n\r\nconst GameDetailsSheet2 = styled.div`\r\n    // background-color: limegreen;\r\n    height: 100%;\r\n    // width: 50%;\r\n\r\n    @media (max-width: 480px) {\r\n        width: 100%;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        width: 100%;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        width: 50%;\r\n    }\r\n    @media (min-width: 992px) {\r\n        width: 50%;\r\n    }\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst GameDetailsTable = styled.div`\r\n    // background-color: green;\r\n    height: 95%;\r\n    width: 90%;\r\n`\r\n\r\nconst GameDetailsTableHeading = styled.div`\r\n    background-color: black;\r\n    height: 12%;\r\n    width: 100%;\r\n    color: white;\r\n    display: flexbox;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst TableHeadingItem = styled.div`\r\n    height: 100%;\r\n    width : 33.33%;\r\n    display: flexbox;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`\r\n\r\n// const GameDetailsTableItem = styled.div`\r\n//     background-color: ${props => props.bg};\r\n//     height: 11%;\r\n//     width: 100%;\r\n//     color: #373737;\r\n//     display: flexbox;\r\n//     flex-wrap: wrap;\r\n// `\r\n\r\n// const TableItem = styled.div`\r\n//     height: 100%;\r\n//     width: 33.33%;\r\n//     display: flexbox;\r\n//     justify-content: center;\r\n//     align-items: center;\r\n//     font-size: 16px;\r\n//     font-weight: 600;\r\n// `\r\n\r\n// const ChairIcon = styled.div`\r\n//     height: 100%;\r\n//     width: 35px;\r\n//     background: url(others/chair-solid.svg);\r\n//     background-repeat: no-repeat;\r\n//     background-position: center;\r\n//     background-size: 50%;\r\n// `\r\n\r\n// const ChairNumber = styled.div`\r\n//     height: 30px;\r\n//     width: 30px;\r\n//     border: 2px solid #808080;\r\n//     border-radius: 50%;\r\n//     display: flexbox;\r\n//     justify-content: center;\r\n//     align-items: center;\r\n// `\r\n\r\n// const TableItemButton = styled.div`\r\n//     height: 75%;\r\n//     width: 60%;\r\n//     background-color: black;\r\n//     color: white;\r\n//     font-size: 14px;\r\n//     border-radius: 5px;\r\n//     display: flexbox;\r\n//     justify-content: center;\r\n//     align-items: center;\r\n//     cursor: pointer;\r\n\r\n//     // &:hover {\r\n//     //     background-color: #606060;\r\n//     //     transition: 0.3s;\r\n//     // }\r\n\r\n// `\r\n\r\nconst GameDetailsFooter = styled.div`\r\n    // background-color: blue;\r\n    height: 15%;\r\n    width: 100%;\r\n`\r\n\r\nconst GameDetailsFooterButton = styled.a`\r\n    background-color: ${props => props.bg};\r\n    height: 60%;\r\n    // width: 15%;\r\n\r\n    @media (max-width: 480px) {\r\n        width: 40%;\r\n    }\r\n    @media (min-width: 481px) and (max-width: 720px) {\r\n        width: 40%;\r\n    }\r\n    @media (min-width: 721px) and (max-width: 991px) {\r\n        width: 15%;\r\n    }\r\n    @media (min-width: 992px) {\r\n        width: 15%;\r\n    }\r\n\r\n    \r\n    color: white;\r\n    display: flexbox;\r\n    align-items: center;\r\n    justify-content: center;\r\n    float: ${props => props.float};\r\n    top: 15%;\r\n    position: relative;\r\n    // below line makes sure button at left is 2% from left, on right is 2% from right\r\n    ${props => props.float}: 5%;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n`\r\n\r\nexport default GameDetailsPopup\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { moveToHomepage } from '../../App.scripts'\r\nimport { commandCalls } from '../Content/Misc/Timestamp.scripts'\r\n\r\nconst ConfirmationPopup = ({states}) => {\r\n\r\n    const popupClick = (e) => {\r\n\r\n        // debugger;\r\n        switch(e.target.id) {\r\n\r\n            case 'noButtonConfirmation' :   \r\n                                            break;\r\n            case 'yesButtonConfirmation':   \r\n                                            let text = document.getElementById('confirmationMessage').innerText;\r\n\r\n                                            if ( text.indexOf('Are you sure you want to kick out') == 0) {\r\n                                                console.log('commandCalls', [\"KickOutPlayer\"] );\r\n                                                commandCalls( [\"KickOutPlayer\"], states);\r\n                                            \r\n                                            }\r\n\r\n\r\n                                            else {\r\n                                                switch ( document.getElementById('confirmationMessage').innerText ) {\r\n                                                    \r\n                                                    case 'Are you sure you want to leave the game?'     :\r\n                                                                                                            // leaveGameHandler(states);\r\n                                                                                                            console.log('commandCalls', [\"PlayerLeaveMatch\"], states);\r\n                                                                                                            commandCalls( [\"PlayerLeaveMatch\"], states);                                                                                                        \r\n                                                                                                            break;\r\n                                                    case 'Are you sure you want to delete the match?'   :\r\n                                                                                                            console.log('commandCalls', [\"DeleteMatch\"]);\r\n                                                                                                            commandCalls( [\"DeleteMatch\"], states);\r\n                                                                                                            break;\r\n                                                    case 'Are you sure you want to reset the match?'    :\r\n                                                                                                            console.log('commandCalls', [\"ResetMatch\", \"GetMatchState\"]);\r\n                                                                                                            commandCalls( [\"ResetMatch\", \"GetMatchState\"], states);\r\n                                                                                                            // setTimeout(() =>\r\n                                                                                                            //     states.setProcessCommandValues(values => ({\r\n                                                                                                            //         ...values,\r\n                                                                                                            //         MatchIDTS: Math.random()\r\n                                                                                                            //     })), 2.5 * 1000);\r\n                                                                                                            break;                                                \r\n\r\n                                                    default:\r\n                                                }\r\n                                            }\r\n                                            break;\r\n            case 'okButtonConfirmation' :   \r\n                                            break;\r\n            default:\r\n        }\r\n\r\n        document.getElementById('gameDetailsWrapper').style.opacity = '1';\r\n        document.getElementById('popupConfirmation').style.display = 'none';\r\n        document.getElementById('container').style.opacity = '1';  \r\n\r\n    }\r\n\r\n    return (\r\n        <ConfirmationContainer id=\"popupConfirmation\">\r\n            <PopupMessage id=\"confirmationMessage\" >placeholder</PopupMessage>\r\n            <PopupAction>\r\n                <PopupButton id=\"noButtonConfirmation\" onClick={(e) => popupClick(e)} left='5%' bg='#808080' color='white' >No</PopupButton>\r\n                <PopupButton id=\"okButtonConfirmation\" onClick={(e) => popupClick(e)} left='37.5%' bg='#303030' color='white' >OK</PopupButton>\r\n                <PopupButton id=\"yesButtonConfirmation\" onClick={(e) => popupClick(e)} left='45%' bg='#303030' color='white' >Yes</PopupButton>\r\n            </PopupAction>\r\n        </ConfirmationContainer>\r\n    )\r\n}\r\n\r\nconst ConfirmationContainer = styled.div`\r\n    height: 35%;\r\n    width: 45%;\r\n    background-color: lightgray;\r\n    position: absolute;\r\n    top: 32.5%;\r\n    left: 25%;\r\n    display: none;\r\n\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    z-index: 3;\r\n`\r\n\r\nconst PopupMessage = styled.div`\r\n    height: 55%;\r\n    width: 100%;\r\n    // background-color: blue;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center\r\n`\r\n\r\nconst PopupAction = styled.div`\r\n    height: 45%;\r\n    width: 100%;\r\n    // background-color: red;\r\n    display: flex;\r\n`\r\n\r\nconst PopupButton = styled.div`\r\n    height: 60%;\r\n    width: 25%;\r\n    background-color: ${props => props.bg};\r\n    color: ${props => props.color};\r\n    // float: ${props => props.float};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n\r\n    position: relative;\r\n    top: 20%;\r\n    left: ${props => props.left};\r\n    cursor: pointer;\r\n`\r\n\r\nexport default ConfirmationPopup\r\n","import './App.css';\nimport NavBar from './components/NavBar'\nimport Content from './components/Content'\nimport GameDetailsPopup from './components/Popups/GameDetailsPopup'\nimport ConfirmationPopup from './components/Popups/ConfirmationPopup'\nimport {sortChairsMatchState, initializeOptions} from './components/Popups/GameDetailsPopup/GameDetailsPopup.scripts'\nimport { commandCalls, processCommandJsonGenerator } from './components/Content/Misc/Timestamp.scripts'\nimport { saveIconGameDetails, moveToHomepage, moveToGameScreen, checkPlaceBid } from './App.scripts'\nimport { pushChairsToState } from './components/Content/GameContent/GameScreen/GameScreen.scripts'\n\nimport React from 'react'\nimport {useState} from 'react'\nimport styled from 'styled-components'\n\nvar clickedTileType = \"\";\nvar flag = 1;\n// var flagPopupBegin = 0;\nvar interval;\nvar prevTable = \"\"; \n\nvar flagAdminMSPopup = 0;\n\nfunction App() {\n\n  const [ SideNavItems, setSideNavItems] = useState ({});\n\n  const [ TableContent, setTableContent] = useState ({});\n\n  // const [ TableContent, setTableContent] = useState ({\"second test\":{\"0\":{\"GroupID\":\"604f0c5587db4\"},\"1\":{\"MatchID\":\"\",\"Name\":\"New Table\",\"Difficulty\":null,\"Rules\":null,\"Players\":null,\"Status\":null,\"MyMatch\":null,\"TargetURL\":null,\"TargetWindow\":null,\"BackGround\":\"private\",\"TileType\":\"createTile\"},\"2\":{\"MatchID\":\"608f8d6d4bbe2\",\"Name\":\"Table #17\",\"Difficulty\":\"Intermediate\",\"Rules\":\"Kerala\",\"Players\":\"1\\/6\",\"Status\":\"Waiting for players\",\"MyMatch\":\"Y\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=608f8d6d4bbe2\",\"TargetWindow\":\"_self\",\"BackGround\":\"private\",\"TileType\":\"tableTile\"},\"3\":{\"MatchID\":\"6083fbda0deea\",\"Name\":\"Table #36\",\"Difficulty\":\"Beginner\",\"Rules\":\"International\",\"Players\":\"1\\/6\",\"Status\":\"Waiting for players\",\"MyMatch\":\"Y\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=6083fbda0deea\",\"TargetWindow\":\"_self\",\"BackGround\":\"private\",\"TileType\":\"tableTile\"}},\"Create your Private Group\":{\"0\":{\"GroupID\":null},\"1\":{\"MatchID\":\"\",\"Name\":\"Create Private Group\",\"Difficulty\":null,\"Rules\":null,\"Players\":null,\"Status\":null,\"MyMatch\":null,\"TargetURL\":\"\\/56game\\/56game_group.php\",\"TargetWindow\":\"_self\",\"BackGround\":\"private\",\"TileType\":\"createTile\"}}})\n\n  //Possible values are values inside the popup for start match\n  // const [ PossibleValues, setPossibleValues] = useState ([]);\n  const [ PossibleValues, setPossibleValues] = useState ({\"ListOfValues\":{\"MaxPlay\":{\"4\":{\"0\":{\"GM1\":\"Match of 1 game\"},\"1\":{\"GM4\":\"Match of 4 games\"},\"2\":{\"GM8\":\"Match of 8 games\"},\"3\":{\"GM12\":\"Match of 12 games\"},\"4\":{\"GM16\":\"Match of 16 games\"},\"5\":{\"GM20\":\"Match of 20 games\"},\"6\":{\"GM24\":\"Match of 24 games\"},\"7\":{\"PT25\":\"Match with target 25 points\"},\"8\":{\"PT50\":\"Match with target 50 points\"},\"9\":{\"PT75\":\"Match with target 75 points\"},\"10\":{\"PT100\":\"Match with target 100 points\"}},\"6\":{\"0\":{\"GM1\":\"Match of 1 game\"},\"1\":{\"GM6\":\"Match of 6 games\"},\"2\":{\"GM12\":\"Match of 12 games\"},\"3\":{\"GM18\":\"Match of 18 games\"},\"4\":{\"GM24\":\"Match of 24 games\"},\"5\":{\"GM30\":\"Match of 30 games\"},\"6\":{\"GM36\":\"Match of 36 games\"},\"7\":{\"PT25\":\"Match with target 25 points\"},\"8\":{\"PT50\":\"Match with target 50 points\"},\"9\":{\"PT75\":\"Match with target 75 points\"},\"10\":{\"PT100\":\"Match with target 100 points\"}},\"8\":{\"0\":{\"GM1\":\"Match of 1 game\"},\"1\":{\"GM8\":\"Match of 8 games\"},\"2\":{\"GM16\":\"Match of 16 games\"},\"3\":{\"GM24\":\"Match of 24 games\"},\"4\":{\"GM32\":\"Match of 32 games\"},\"5\":{\"GM40\":\"Match of 40 games\"},\"6\":{\"GM48\":\"Match of 48 games\"},\"7\":{\"PT25\":\"Match with target 25 points\"},\"8\":{\"PT50\":\"Match with target 50 points\"},\"9\":{\"PT75\":\"Match with target 75 points\"},\"10\":{\"PT100\":\"Match with target 100 points\"}}},\"NumberOfPlayers\":{\"0\":{\"4\":\"4 Player\"},\"1\":{\"6\":\"6 Player\"},\"2\":{\"86\":\"8 Player with 6 cards each\"},\"3\":{\"88\":\"8 Player with 8 cards each\"}},\"GameRules\":{\"0\":{\"INT\":\"International\"},\"1\":{\"KER\":\"Kerala\"}},\"PlayerLevel\":{\"0\":{\"B\":\"Beginner\"},\"1\":{\"I\":\"Intermediate\"},\"2\":{\"E\":\"Expert\"}},\"EnforceFollowSuit\":{\"0\":{\"Y\":\"Enabled\"},\"1\":{\"N\":\"Disabled\"}},\"ShowGamePoints\":{\"0\":{\"Y\":\"Show\"},\"1\":{\"N\":\"Hide\"}},\"ShowRemainingPoints\":{\"0\":{\"Y\":\"Show\"},\"1\":{\"N\":\"Hide\"}},\"EnableAllPass\":{\"0\":{\"Y\":\"Enabled\"},\"1\":{\"N\":\"Disabled\"}},\"PublicMatch\":{\"0\":{\"Y\":\"Public Match\"},\"1\":{\"N\":\"Private Match\"}}},\"Defaults\":{\"MaxPlay\":{\"4\":\"GM8\",\"6\":\"GM12\",\"8\":\"GM16\"},\"NumberOfPlayers\":\"6\",\"GameRules\":\"KER\",\"PlayerLevel\":\"I\",\"EnforceFollowSuit\":\"Y\",\"ShowGamePoints\":\"Y\",\"ShowRemainingPoints\":\"Y\",\"EnableAllPass\":\"N\",\"PublicMatch\":\"N\"}});\n\n  \n  // const [ MatchState, setMatchState] = useState ('init');\n  const [ MatchState, setMatchState] = useState ({\"MatchStatus\":\"StartNewGame\",\"NumberOfPlayers\":6,\"AllowedHelpLevel\":null,\"MaxPlay\":\"GM12\",\"GameRules\":\"KER\",\"PlayerLevel\":\"I\",\"EnforceFollowSuit\":\"Y\",\"ShowGamePoints\":\"Y\",\"ShowRemainingPoints\":\"N\",\"EnableAllPass\":\"N\",\"PublicMatch\":null,\"MatchAdmin\":\"Y\",\"MinimumWaitSeconds\":0,\"RefreshRequired\":\"No\",\"LastRefreshTimestamp\":\"2021-04-28 09:00:00\",\"RefreshCalls\":{},\"Chairs\":{\"1\":{\"ChairNo\":2,\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"2\":{\"ChairNo\":3,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"3\":null,\"4\":{\"ChairNo\":4,\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"5\":{\"ChairNo\":5,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"6\":{\"ChairNo\":6,\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"7\":null,\"8\":{\"ChairNo\":1,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}}});\n  // const [ MatchState, setMatchState] = useState ({\"MatchStatus\":\"StartNewGame\",\"NumberOfPlayers\":4,\"AllowedHelpLevel\":null,\"MaxPlay\":\"GM12\",\"GameRules\":\"KER\",\"PlayerLevel\":\"I\",\"EnforceFollowSuit\":\"Y\",\"ShowGamePoints\":\"Y\",\"ShowRemainingPoints\":\"N\",\"EnableAllPass\":\"N\",\"PublicMatch\":null,\"MatchAdmin\":\"Yes\",\"MinimumWaitSeconds\":0,\"RefreshRequired\":\"No\",\"LastRefreshTimestamp\":\"2021-04-28 09:00:00\",\"RefreshCalls\":{},\"Chairs\":{\"1\":{\"ChairNo\":2,\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"No\"},\"2\":null,\"3\":{\"ChairNo\":3,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"4\":null,\"5\":{\"ChairNo\":4,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"6\":null,\"7\":{\"ChairNo\":1,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"8\":null}});\n\n\n  const [ PopupOptions, setPopupOptions] = useState ([]);\n  const [ PopupChairs, setPopupChairs] = useState([]);\n  const [ GameChairs, setGameChairs] = useState ([]);\n  const [ ProcessCommandValues, setProcessCommandValues] = useState ({ \"userId\": \"\", \"csrf\": \"\", \"returnCode\": \"\", \"GameDetailsPopupEnd\": \"init\", \"GameDetailsPopupSave\": \"init\", \"KickOutTS\": \"init\", \"MatchIDTS\": \"\", \"CurrentPageTS\": \"init\",\"RefreshCallsArray\": \"init\",\"GroupID\": \"\", \"MatchID\": \"\",\"AllowedHelpLevel\": \"\", \"MaxPlay\": \"\", \"NumberOfPlayers\": \"\", \"GameRules\": \"\", \"PlayerLevel\": \"\", \"EnforceFollowSuit\": \"\", \"ShowGamePoints\": \"\", \"ShowRemainingPoints\": \"\", \"EnableAllPass\": \"\", \"PublicMatch\": \"\", \"ChairNo\": \"\", \"LastRefreshTimestamp\": \"\", \"MyMatch\": \"\", \"TileType\": \"\", \"MyBid\": \"\", \"MyCardID\": \"init\"});\n\n  // const [ BiddingKeyboardValues, setBiddingKeyboardValues] = useState ({\"suits\":{\"0\":\"hearts\",\"1\":\"clubs\",\"2\":\"diams\",\"3\":\"noos\",\"4\":\"notr\"},\"numbers\":{\"0\":29,\"1\":30,\"2\":31,\"3\":32,\"4\":33,\"5\":34,\"6\":35,\"7\":36,\"8\":37,\"9\":38,\"10\":39,\"11\":40,\"12\":41,\"13\":42,\"14\":43,\"15\":44,\"16\":45,\"17\":46,\"18\":47,\"19\":48,\"20\":49,\"21\":50,\"22\":51,\"23\":52,\"24\":53,\"25\":54,\"26\":55,\"27\":56},\"actions\":{\"0\":\"+\",\"1\":\"+1\",\"2\":\"+2\",\"3\":\"+3\",\"4\":\"+4\",\"5\":\"double\",\"6\":\"pass\",\"7\":\"allpass\"},\"others\":{},\"myBid\":\"\",\"CompleteBid\":\"Y\",\"MessagePart1\":\"Place your Bid\",\"MessagePart2\":\"diams\",\"MessagePart3\":\"44\"});\n  // const [ CardDeck, setCardDeck] = useState ({\"1spadesJ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spadesJ.PNG\",\"1spades9\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spades9.PNG\",\"1spadesA\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spadesA.PNG\",\"1spades10\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spades10.PNG\",\"1spadesK\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spadesK.PNG\",\"1spadesQ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spadesQ.PNG\",\"1spades8\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spades8.PNG\",\"1spades7\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spades7.PNG\",\"1heartsJ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/heartsJ.PNG\",\"1hearts9\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/hearts9.PNG\",\"1heartsA\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/heartsA.PNG\",\"1hearts10\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/hearts10.PNG\",\"1heartsK\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/heartsK.PNG\",\"1heartsQ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/heartsQ.PNG\",\"1hearts8\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/hearts8.PNG\",\"1hearts7\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/hearts7.PNG\",\"1diamsJ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diamsJ.PNG\",\"1diams9\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diams9.PNG\",\"1diamsA\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diamsA.PNG\",\"1diams10\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diams10.PNG\",\"1diamsK\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diamsK.PNG\",\"1diamsQ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diamsQ.PNG\",\"1diams8\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diams8.PNG\",\"1diams7\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diams7.PNG\",\"1clubsJ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubsJ.PNG\",\"1clubs9\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubs9.PNG\",\"1clubsA\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubsA.PNG\",\"1clubs10\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubs10.PNG\",\"1clubsK\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubsK.PNG\",\"1clubsQ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubsQ.PNG\",\"1clubs8\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubs8.PNG\",\"1clubs7\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubs7.PNG\",\"2spadesJ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spadesJ.PNG\",\"2spades9\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spades9.PNG\",\"2spadesA\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spadesA.PNG\",\"2spades10\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spades10.PNG\",\"2spadesK\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spadesK.PNG\",\"2spadesQ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spadesQ.PNG\",\"2spades8\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spades8.PNG\",\"2spades7\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/spades7.PNG\",\"2heartsJ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/heartsJ.PNG\",\"2hearts9\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/hearts9.PNG\",\"2heartsA\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/heartsA.PNG\",\"2hearts10\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/hearts10.PNG\",\"2heartsK\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/heartsK.PNG\",\"2heartsQ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/heartsQ.PNG\",\"2hearts8\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/hearts8.PNG\",\"2hearts7\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/hearts7.PNG\",\"2diamsJ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diamsJ.PNG\",\"2diams9\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diams9.PNG\",\"2diamsA\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diamsA.PNG\",\"2diams10\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diams10.PNG\",\"2diamsK\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diamsK.PNG\",\"2diamsQ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diamsQ.PNG\",\"2diams8\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diams8.PNG\",\"2diams7\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/diams7.PNG\",\"2clubsJ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubsJ.PNG\",\"2clubs9\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubs9.PNG\",\"2clubsA\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubsA.PNG\",\"2clubs10\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubs10.PNG\",\"2clubsK\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubsK.PNG\",\"2clubsQ\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubsQ.PNG\",\"2clubs8\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubs8.PNG\",\"2clubs7\":\"https:\\/\\/www.56cardgameonline.com\\/newdesign\\/others\\/cards\\/deckd\\/clubs7.PNG\"});\n  // const [ CurrentPlayerHand, setCurrentPlayerHand] = useState({\n\t// \t\"spades\": {\n\t// \t\t\"0\": \"2spadesJ\",\n\t// \t\t\"1\": \"1spadesA\"\n\t// \t},\n\t// \t\"hearts\": {\n  //     \"0\": \"2heartsK\"\n  //   },\n\t// \t\"clubs\": {\n\t// \t\t\"0\": \"2clubsJ\",\n\t// \t\t\"1\": \"2clubs10\"\n\t// \t},\n\t// \t\"diams\": {\n\t// \t\t\"0\": \"2diams9\",\n\t// \t\t\"1\": \"1diamsA\",\n\t// \t\t\"2\": \"2diamsA\"\n\t// \t}\n\t// });\n  const [ BiddingKeyboardValues, setBiddingKeyboardValues] = useState ({\"suits\":{},\"numbers\":{},\"actions\":{},\"others\":{},\"myBid\":\"\"});\n  const [ CardDeck, setCardDeck] = useState ();\n  const [ CurrentPlayerHand, setCurrentPlayerHand] = useState ({\"spades\": {},\"hearts\": {},\"clubs\": {},\"diams\": {}});\n\n  const [ MatchScoreboard, setMatchScoreboard] = useState ({\n\t\t\"TableNo\": 12,\n\t\t\"GroupName\": \"\",\n\t\t\"TeamAMatchPoints\": 0,\n\t\t\"TeamBMatchPoints\": 0,\n    \"MatchGamesPoints\": 'Game 2 of 12',\n\t\t\"GameStatus\": \"Game to start\"\n\t});\n  // const [ DiscardCards, setDiscardCards] = useState ({\n\t// \t\"1\": \"1spadesJ\",\n\t// \t\"2\": \"1spades10\",\n\t// \t\"3\": \"1spades10\",\n\t// \t\"4\": \"1spades10\",\n\t// \t\"5\": \"1spades10\",\n\t// \t\"6\": \"1spades10\",\n\t// \t\"7\": \"1spades10\",\n\t// \t\"8\": \"1spades10\"\n\t// });\n  // const [ MatchScoreboard, setMatchScoreboard] = useState ();\n  const [ DiscardCards, setDiscardCards] = useState ({});\n\n  const [ CurrentPage, setCurrentPage] = useState('homepage');\n\n  // if ( ProcessCommandValues.CurrentPageTS == 'init' ) {\n  //   setTimeout(() => {\n  //     setCurrentPage('gameScreen')\n  //     setProcessCommandValues(values => ({\n  //       ...values,\n  //       CurrentPageTS : 'firstCall'\n  //     }))    \n  //     // setTimeout(() => moveToGameScreen({setCurrentPage}), 500)\n  //     setTimeout(() => moveToGameScreen({setCurrentPage}), 1500)\n  //   } , 250)\n  // }\n\n  const lightTheme = {  \n                        \"ContainerBackground\": \"lightblue\",\n                        \"NavBarBackground\": \"#7CB9E8\",\n                        \"NavBarFontColor\": \"white\",\n                        \"NavBarButtonBackgroundSelected\": \"rgb(102, 153, 204)\",\n                        \"SideNavBackground\": \"#C6D7F5\",\n                        \"SideNavFontColor\": \"#337AB7\",\n                        \"SubSideNavFontColor\": \"gray\",\n                        \"SubSideNavBackground\": \"#F0F8FF\",\n                        \"TileFontColor\": \"#337AB7\",\n                        \"PublicTileBackground\": \"linear-gradient( 0.25turn, #ACA0D2, #D9E0E7, #ACA0D2)\",\n                        \"PrivateTileBackground\": \"linear-gradient( 0.25turn, #ACB9E1, #CDD6F1, #ACB9E1)\"\n  };\n\n  const darkTheme = { \n                        \"ContainerBackground\": \"url(others/bannerDark.jpg)\",\n                        \"NavBarBackground\": \"black\",\n                        \"NavBarFontColor\": \"white\",\n                        \"NavBarButtonBackgroundSelected\": \"#404040\",\n                        \"SideNavBackground\": \"#101010\",\n                        \"SideNavFontColor\": \"#A0A0A0\",\n                        \"SubSideNavFontColor\": \"white\",\n                        \"SubSideNavBackground\": \"#787878\",\n                        \"TileFontColor\": \"white\",\n                        \"PublicTileBackground\": \"rgba( 0, 0, 0, 0.6)\",\n                        \"PrivateTileBackground\": \"rgba( 0, 0, 0, 0.6)\"\n  };\n\n  const [ Theme, setTheme ] = useState(lightTheme);\n\n  const closeGameDetailsPopup = () => {\n\n    document.getElementById('gameDetails').style.display= 'none';\n    document.getElementById('container').style.opacity = '1';\n\n    initializeOptions( 'tableTile', { PossibleValues, MatchState, setPopupOptions});\n\n}\n\n  const gameTileClick = (e) => {\n\n    setTimeout(() => {\n\n      // setMatchScoreboard({\n      //   \"TableNo\": 12,\n      //   \"GroupName\": \"\",\n      //   \"TeamAMatchPoints\": 0,\n      //   \"TeamBMatchPoints\": 0,\n      //   \"MatchGamesPoints\": 'Game 4 of 12',\n      //   \"GameStatus\": \"Game to start\"\n      // })\n\n      // setMatchScoreboard({\n      //   \"TableNo\": 2,\n      //   \"GroupName\": \"My family Group\",\n      //   \"TeamAMatchPoints\": 0,\n      //   \"TeamBMatchPoints\": 0,\n      //   \"MatchGamesPoints\":\"Game 4 of 6\",\n      //   \"GameStatus\": \"Bidding in progress\",\n      //   \"CurrentTrump\": \"hearts\",\n      //   \"CurrentHighestBidValue\": 28,\n      //   \"CurrentHighestBid\": {\n      //      \"1\": \"hearts\",\n      //      \"2\": \"+\",\n      //      \"3\": \"(28)\"\n      //   },\n      //   \"CurrentHighestBidPlayer\": \"AJM\",\n      //   \"CurrentHighestBidTeam\": \"A\",\n      //   \"CurrentHighestBidDoubledTeam\": \"A\",\n      //   \"CurrentHighestBidDoubledPlayer\": \"Raj1 Kiran 1\",\n      //   \"CurrentHighestBidRedoubledTeam\": \"B\",\n      //   \"CurrentHighestBidRedoubledPlayer\": \"Liz3\"\n      // })\n\n      // setMatchScoreboard({\n      //   \"TableNo\": 17,\n      //   \"GroupName\": \"My family Group\",\n      //   \"TeamAMatchPoints\": 0,\n      //   \"TeamBMatchPoints\": 0,\n      //   \"MatchGamesPoints\":\"Game 1 of 6\",\n      //   \"GameStatus\": \"Game in progress\",\n      //   \"FinalBidTrump\": \"NT\",\n      //   \"FinalBidValue\": 28,\n      //   \"FinalBidWinningTeam\": \"B\",\n      //   \"FinalBidWinningPlayer\": \"John5\",\n      //   \"FinalBidDoubledTeam\": \"A\",\n      //   \"FinalBidDoubledPlayer\": \"Raj1 Kiran 1\",\n      //   \"FinalBidRedoubledTeam\": \"B\",\n      //   \"FinalBidRedoubledPlayer\": \"Liz3\",\n      //   \"TeamAGamePoints\": 0,\n      //   \"TeamBGamePoints\": 0,\n      //   \"RemainingPoints\": 56,\n      //   \"TrickNo\": 1,\n      //   \"TrickStatus\": \"In progress\"\n      // })\n\n      // setMatchScoreboard({\n      //   \"TableNo\": 17,\n      //   \"GroupName\": \"My family Group\",\n      //   \"TeamAMatchPoints\": 0,\n      //   \"TeamBMatchPoints\": 15,\n      //   \"MatchGamesPoints\":\"Game 1 of 6\",\n      //   \"GameStatus\": \"Game completed\",\n      //   \"FinalBidValue\": 28,\n      //   \"FinalBidWinningTeam\": \"B\",\n      //   \"FinalBidDoubledTeam\": \"A\",\n      //   \"FinalBidRedoubledTeam\": \"B\",\n      //   \"TeamAGamePoints\": 0,\n      //   \"TeamBGamePoints\": 0,\n      //   \"MatchPointsAdded\": 15,\n      //   \"MatchPointsAddedToTeam\": \"B\"\n      // })\n\n    }, 5000);\n\n    // //test code, now opens static game details popup everytime a tile has been clicked\n\n    prevTable = document.getElementById('gameDetailsTitle').innerText;\n\n    document.getElementById('gameDetailsTitle').innerText = e.target.closest('.gameTile').id;\n    var arrDisable = Array.from(document.getElementsByClassName('matchDetailsItem'));\n\n    //if user clicks on a createTile\n    if(e.target.closest('.gameTile').classList.contains('createTile')) {\n        \n        arrDisable.forEach(item => item.removeAttribute('disabled'));\n        clickedTileType = 'createTile';\n\n        document.getElementById('gameDetails').style.display = \"block\";\n        document.getElementById('container').style.opacity = '0.5';\n\n        document.getElementById('gameDetailsMatchAdmin').innerText = 'Match Admin';\n        \n        //if create public match\n        if ( e.target.closest('.gameTile').classList.contains('public') ) {\n          setProcessCommandValues(values => ({...values, \n            \"GroupID\"   : \"Public\",\n            \"TileType\"  : \"createTile\",\n            \"MyMatch\"   : \"N\",\n            \"MatchIDTS\" : Math.random()\n          }))\n        }\n        //below matchidts is used so issues don't happen when you click tableTile->createTile->tableTile\n        else { \n          setProcessCommandValues(values => ({...values, \n            \"GroupID\"   : e.target.closest('.gameTile').getAttribute('data-groupid'),\n            \"TileType\"  : \"createTile\",\n            \"MyMatch\"   : \"N\",\n            \"MatchIDTS\" : Math.random()\n          }))\n        }\n\n     \n\n        setPopupChairs([{\"ChairNo\":1,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}, {\"ChairNo\":2,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}, {\"ChairNo\":3,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}, {\"ChairNo\":4,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}, {\"ChairNo\":5,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}, {\"ChairNo\":6,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}, {\"ChairNo\":7,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}, {\"ChairNo\":8,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}]);\n\n     \n        \n    }        \n    //if user clicks on a tableTile\n    else {\n\n        clickedTileType = 'tableTile';\n        flagAdminMSPopup = 1;\n\n          //MatchIDUpdatestamp given so that even when same tableTile clicked the click is triggered\n          setProcessCommandValues(values => ({...values, \n            \"GroupID\"   : e.target.closest('.gameTile').getAttribute('data-groupid'),\n            \"MatchID\"   : e.target.closest('.gameTile').getAttribute('data-matchid'),\n            \"MyMatch\"   : e.target.closest('.gameTile').getAttribute('data-mymatch'),\n            \"TileType\"  : \"tableTile\",\n            \"MatchIDTS\" : Math.random()\n          }))\n\n\n    }\n\n  }\n\n  //MatchIDTS -> MatchState -> DisplayPopup, useEffect sequence\n\n  React.useEffect(() => {\n\n    if ( clickedTileType == 'tableTile' && (ProcessCommandValues.MatchIDTS !== \"\") ) {\n\n      console.log('commandCalls',  document.getElementById('gameDetailsTitle').innerText, [\"GetMatchState\"]);\n      commandCalls( [\"GetMatchState\"], {CurrentPage, setCurrentPage, SideNavItems, setSideNavItems, TableContent, setTableContent, PossibleValues, setPossibleValues, MatchState, setMatchState, GameChairs, setGameChairs, ProcessCommandValues, setProcessCommandValues, BiddingKeyboardValues, setBiddingKeyboardValues, CardDeck, setCardDeck, CurrentPlayerHand, setCurrentPlayerHand, MatchScoreboard, setMatchScoreboard, DiscardCards, setDiscardCards});\n\n      // setMatchState({\"MatchStatus\":\"StartNewGame\",\"NumberOfPlayers\":6,\"AllowedHelpLevel\":null,\"MaxPlay\":\"PT75\",\"GameRules\":\"KER\",\"PlayerLevel\":\"I\",\"EnforceFollowSuit\":\"Y\",\"ShowGamePoints\":\"Y\",\"ShowRemainingPoints\":\"N\",\"EnableAllPass\":\"N\",\"PublicMatch\":null,\"MatchAdmin\":\"Y\",\"MinimumWaitSeconds\":0,\"RefreshRequired\":\"N\",\"LastRefreshTimestamp\":\"2021-04-28 09:00:00\",\"RefreshCalls\":{},\"Chairs\":{\"1\":{\"ChairNo\":2,\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Y\",\"MatchAdmin\":\"Y\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\"},\"2\":{\"ChairNo\":3,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"3\":null,\"4\":{\"ChairNo\":4,\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"5\":{\"ChairNo\":5,\"PlayerName\":\"Ballu\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"6\":{\"ChairNo\":6,\"PlayerName\":\"\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"},\"7\":null,\"8\":{\"ChairNo\":1,\"PlayerName\":\"\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Yes\",\"MatchAdmin\":\"No\",\"TrickStarter\":\"No\",\"ChairEmpty\":\"Yes\"}}});\n      // setMatchState({\"MatchStatus\":\"PlaceBid\",\"NumberOfPlayers\":4,\"AllowedHelpLevel\":null,\"MaxPlay\":\"GM8\",\"GameRules\":\"INT\",\"PlayerLevel\":\"I\",\"EnforceFollowSuit\":\"Y\",\"ShowGamePoints\":\"Y\",\"ShowRemainingPoints\":\"Y\",\"EnableAllPass\":\"N\",\"PublicMatch\":null,\"MatchAdmin\":\"Y\",\"MinimumWaitSeconds\":0,\"RefreshRequired\":\"N\",\"LastRefreshTimestamp\":\"2021-04-28 09:00:00\",\"ElapsedSeconds\":957,\"RefreshCalls\":{\"0\": \"GetCurrentPlayerHand\",\"1\": \"CallBiddingKeyboard\",\"2\": \"GetMatchScoreBoard\",\"3\": \"GetDiscardCards\"},\"Chairs\":{\"1\":{\"ChairNo\":3,\"PlayerName\":\"federer\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"N\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"Y\",\"ChairEmpty\":\"N\",\"LastBid\":\"\"},\"2\":null,\"3\":{\"ChairNo\":4,\"PlayerName\":\"nadal\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Y\",\"MatchAdmin\":\"Y\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":\"\"},\"4\":null,\"5\":{\"ChairNo\":1,\"PlayerName\":\"djokovic\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"N\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":\"\"},\"6\":null,\"7\":{\"ChairNo\":2,\"PlayerName\":\"AJM\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"N\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":\"\"},\"8\":null}})\n      // setMatchState({\"MatchStatus\":\"PlaceBid\",\"NumberOfPlayers\":4,\"AllowedHelpLevel\":null,\"MaxPlay\":\"GM8\",\"GameRules\":\"INT\",\"PlayerLevel\":\"I\",\"EnforceFollowSuit\":\"Y\",\"ShowGamePoints\":\"Y\",\"ShowRemainingPoints\":\"Y\",\"EnableAllPass\":\"N\",\"PublicMatch\":null,\"MatchAdmin\":\"Y\",\"MinimumWaitSeconds\":0,\"RefreshRequired\":\"N\",\"LastRefreshTimestamp\":\"2021-04-28 09:00:00\",\"ElapsedSeconds\":957,\"RefreshCalls\":{\"0\": \"GetCurrentPlayerHand\",\"1\": \"CallBiddingKeyboard\",\"2\": \"GetMatchScoreBoard\",\"3\": \"GetDiscardCards\"},\"Chairs\":{\"1\":{\"ChairNo\":3,\"PlayerName\":\"federer\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Y\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"Y\",\"ChairEmpty\":\"N\",\"LastBid\":{\"1\":\"clubs\",\"2\":\"+2\",\"3\":\"(32)\"}},\"2\":null,\"3\":{\"ChairNo\":4,\"PlayerName\":\"nadal\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Y\",\"MatchAdmin\":\"Y\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":{\"1\":\"hearts\",\"2\":\"+2\",\"3\":\"(32)\"}},\"4\":null,\"5\":{\"ChairNo\":1,\"PlayerName\":\"djokovic\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"N\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":{\"1\":\"spades\",\"2\":\"+2\",\"3\":\"(32)\"}},\"6\":null,\"7\":{\"ChairNo\":2,\"PlayerName\":\"AJM\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"N\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":{\"1\":\"diams\",\"2\":\"+2\",\"3\":\"(32)\"}},\"8\":null}});\n\n      // setTimeout(() => setMatchState({\"MatchStatus\":\"StartNewGame\",\"NumberOfPlayers\":4,\"AllowedHelpLevel\":null,\"MaxPlay\":\"GM8\",\"GameRules\":\"KER\",\"PlayerLevel\":\"I\",\"EnforceFollowSuit\":\"Y\",\"ShowGamePoints\":\"Y\",\"ShowRemainingPoints\":\"Y\",\"EnableAllPass\":\"N\",\"PublicMatch\":null,\"MatchAdmin\":\"N\",\"MinimumWaitSeconds\":0,\"RefreshRequired\":\"N\",\"LastRefreshTimestamp\":\"2021-04-28 09:00:00\",\"ElapsedSeconds\":957,\"RefreshCalls\":{\"0\": \"GetCurrentPlayerHand\",\"1\": \"CallBiddingKeyboard\",\"2\": \"GetMatchScoreBoard\",\"3\": \"GetDiscardCards\"},\"Chairs\":{\"1\":{\"ChairNo\":3,\"PlayerName\":\"sasimeshari\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Y\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":\"\"},\"2\":null,\"3\":{\"ChairNo\":4,\"PlayerName\":\"GK Nair 2\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Y\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":\"\"},\"4\":null,\"5\":{\"ChairNo\":1,\"PlayerName\":\"rohith8194\",\"PlayerTeam\":\"A\",\"PlayerTurn\":\"Y\",\"MatchAdmin\":\"Y\",\"TrickStarter\":\"Y\",\"ChairEmpty\":\"N\",\"LastBid\":\"\"},\"6\":null,\"7\":{\"ChairNo\":2,\"PlayerName\":\"AJM\",\"PlayerTeam\":\"B\",\"PlayerTurn\":\"Y\",\"MatchAdmin\":\"N\",\"TrickStarter\":\"N\",\"ChairEmpty\":\"N\",\"LastBid\":\"\"},\"8\":null}}), 5000);\n    }\n\n    \n  }, [ProcessCommandValues.MatchIDTS]);\n\n  React.useEffect(() => {\n\n    if( ProcessCommandValues.GameDetailsPopupSave !== 'init') {\n\n      console.log(ProcessCommandValues);\n      console.log('commandCalls', [\"ChangeMatch\"] );\n      commandCalls( [\"ChangeMatch\"], {CurrentPage, setCurrentPage, SideNavItems, setSideNavItems, TableContent, setTableContent, PossibleValues, setPossibleValues, MatchState, setMatchState, GameChairs, setGameChairs, ProcessCommandValues, setProcessCommandValues});\n    \n    }\n\n  }, [ProcessCommandValues.GameDetailsPopupSave])\n\n  // if user was in gameScreen during the last session, below code loads the gameScreen upon initial startup\n  React.useEffect(() => {\n\n    if ( ProcessCommandValues.CurrentPageTS !== 'init' ) {\n\n      setTimeout(() => {\n\n        if ( CurrentPage == 'gameScreen' )\n          commandCalls( [\"GetMatchState\"], {CurrentPage, setCurrentPage, SideNavItems, setSideNavItems, TableContent, setTableContent, PossibleValues, setPossibleValues, MatchState, setMatchState, GameChairs, setGameChairs, ProcessCommandValues, setProcessCommandValues, BiddingKeyboardValues, setBiddingKeyboardValues, CardDeck, setCardDeck, CurrentPlayerHand, setCurrentPlayerHand, MatchScoreboard, setMatchScoreboard, DiscardCards, setDiscardCards});\n      \n      }, 300);\n\n    }\n\n  }, [ProcessCommandValues.CurrentPageTS])\n\n  // calling items in RefreshCallsArray inside MatchState\n  React.useEffect(() => {\n\n    if ( ProcessCommandValues.RefreshCallsArray !== 'init' ) {\n\n      console.log('commandCalls of refreshCallsArray');\n      commandCalls( ProcessCommandValues.RefreshCallsArray, {CurrentPage, setCurrentPage, SideNavItems, setSideNavItems, TableContent, setTableContent, PossibleValues, setPossibleValues, MatchState, setMatchState, GameChairs, setGameChairs, ProcessCommandValues, setProcessCommandValues, BiddingKeyboardValues, setBiddingKeyboardValues, CardDeck, setCardDeck, CurrentPlayerHand, setCurrentPlayerHand, MatchScoreboard, setMatchScoreboard, DiscardCards, setDiscardCards});\n\n      // states.setProcessCommandValues(values => ({\n      //     ...values,\n      //     LastRefreshTimestamp: currentTimestamp[\"aets\"]\n      // }))\n\n    }\n\n  }, [ProcessCommandValues.RefreshCallsArray])\n\n  const toggleSwitchHandler = (e) => {\n\n    switch(e.target.id) {\n\n      case \"toggleTheme\": \n\n                          if( getComputedStyle(document.getElementById('container').firstChild).backgroundColor == \"rgb(124, 185, 232)\") \n                            setTheme(darkTheme);\n\n                          else  \n                            setTheme(lightTheme);\n\n    }\n\n  }\n\n  const gameDetailsIconHandler = (e) => {\n\n    console.log(e.target.id);\n\n    switch (e.target.id) {\n\n        case 'saveButton'   :  \n                                // clearInterval(interval);\n                                console.log('register and save call');\n\n                                saveIconGameDetails({ MatchState, setMatchState, ProcessCommandValues, setProcessCommandValues, PossibleValues});\n\n                                //command calls are inside gamedetailspopupsave useffect for sync\n\n \n                                break;\n\n        case 'deleteButton' :           \n                                document.getElementById('gameDetailsWrapper').style.opacity = 0.5;\n                                document.getElementById('confirmationMessage').innerHTML = 'Are you sure you want to delete the match?';\n                                document.getElementById('noButtonConfirmation').style.display = 'flex'; \n                                document.getElementById('yesButtonConfirmation').style.display = 'flex'; \n                                document.getElementById('okButtonConfirmation').style.display = 'none'; \n                                document.getElementById('popupConfirmation').style.display = 'block';\n\n                                break;\n\n        case 'resetButton'  :   \n                                document.getElementById('gameDetailsWrapper').style.opacity = 0.5;\n                                document.getElementById('confirmationMessage').innerHTML = 'Are you sure you want to reset the match?';\n                                document.getElementById('noButtonConfirmation').style.display = 'flex'; \n                                document.getElementById('yesButtonConfirmation').style.display = 'flex'; \n                                document.getElementById('okButtonConfirmation').style.display = 'none'; \n                                document.getElementById('popupConfirmation').style.display = 'block';\n                               \n                                break;\n        default:\n\n    }\n    \n\n\n  }\n\n\n\n\n  React.useEffect(() => {\n\n    // if ( flag )\n    //   setTimeout(() =>     {\n    //     flag = 0;\n    //     setTableContent({\"Public\":{\"0\":{\"GroupID\":\"Public\"},\"1\":{\"MatchID\":\"\",\"Name\":\"Start Public Match\",\"Difficulty\":null,\"Rules\":null,\"Players\":null,\"Status\":null,\"MyMatch\":null,\"TargetURL\":null,\"TargetWindow\":null,\"BackGround\":\"public\",\"TileType\":\"createTile\"},\"2\":{\"MatchID\":\"60a607526f198\",\"Name\":\"Table #37\",\"Difficulty\":\"Intermediate\",\"Rules\":\"International\",\"Players\":\"0\\/6\",\"Status\":\"Waiting for players\",\"MyMatch\":\"N\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=60a607526f198\",\"TargetWindow\":\"_self\",\"BackGround\":\"public\",\"TileType\":\"tableTile\"},\"3\":{\"MatchID\":\"60a6075dd7a09\",\"Name\":\"Table #64\",\"Difficulty\":\"Intermediate\",\"Rules\":\"International\",\"Players\":\"0\\/4\",\"Status\":\"Waiting for players\",\"MyMatch\":\"N\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=60a6075dd7a09\",\"TargetWindow\":\"_self\",\"BackGround\":\"public\",\"TileType\":\"tableTile\"}},\"second test\":{\"0\":{\"GroupID\":\"604f0c5587db4\"},\"1\":{\"MatchID\":\"\",\"Name\":\"New Table\",\"Difficulty\":null,\"Rules\":null,\"Players\":null,\"Status\":null,\"MyMatch\":null,\"TargetURL\":null,\"TargetWindow\":null,\"BackGround\":\"private\",\"TileType\":\"createTile\"},\"2\":{\"MatchID\":\"60a58e456719a\",\"Name\":\"Table #15\",\"Difficulty\":\"Intermediate\",\"Rules\":\"International\",\"Players\":\"1\\/6\",\"Status\":\"Waiting for players\",\"MyMatch\":\"Y\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=60a58e456719a\",\"TargetWindow\":\"_self\",\"BackGround\":\"private\",\"TileType\":\"tableTile\"},\"3\":{\"MatchID\":\"60a517a659f6b\",\"Name\":\"Table #57\",\"Difficulty\":\"Intermediate\",\"Rules\":\"International\",\"Players\":\"2\\/6\",\"Status\":\"Waiting for players\",\"MyMatch\":\"N\",\"TargetURL\":\"\\/56game\\/56game_match.php?match=60a517a659f6b\",\"TargetWindow\":\"_self\",\"BackGround\":\"private\",\"TileType\":\"tableTile\"}},\"Create your Private Group\":{\"0\":{\"GroupID\":null},\"1\":{\"MatchID\":\"\",\"Name\":\"Create Private Group\",\"Difficulty\":null,\"Rules\":null,\"Players\":null,\"Status\":null,\"MyMatch\":null,\"TargetURL\":\"\\/56game\\/56game_group.php\",\"TargetWindow\":\"_self\",\"BackGround\":\"private\",\"TileType\":\"createTile\"}}});\n    // }, 100);\n\n    if( document.getElementById('navBarButton').classList.contains('selected') ) \n      document.getElementById('navBarButton').style.backgroundColor = Theme.NavBarButtonBackgroundSelected;\n\n\n  });\n\n  React.useEffect(() => {\n\n    // below code is necessary because after creation of a tile, and upon receiving the first MatchState\n    // we have to convert it into a tableTile\n    // if ( ProcessCommandValues.TileType == 'createTile' )\n    //   clickedTileType = 'tableTile';\n\n    // no need to sort chairs if we're in gameScreen\n    // if( (CurrentPage == 'homepage')  || (CurrentPage == 'gameScreen')  ) {\n    if(( ( (CurrentPage == 'homepage') || (CurrentPage == 'gameScreen') ) && ( clickedTileType == 'tableTile') ) || ( (CurrentPage == 'gameScreen') && ( clickedTileType == 'createTile') ) ) {\n   \n        // populate popup gameChairs, also popup chairs trigger intializeOptions\n        sortChairsMatchState({ MatchState, setPopupChairs});\n\n\n\n        var arrDisableItems = Array.from(document.getElementsByClassName('matchDetailsItem'));\n\n        if ( MatchState.MatchAdmin == 'Y' ) {\n\n          document.getElementById('gameDetailsMatchAdmin').innerText = 'Match Admin';\n          document.getElementById('gameDetailsIcons').style.display = 'flex';\n          arrDisableItems.forEach(item => item.removeAttribute('disabled'));\n\n        }\n        else {\n\n          document.getElementById('gameDetailsMatchAdmin').innerText = '';\n          document.getElementById('gameDetailsIcons').style.display = 'none';\n          arrDisableItems.forEach(item => item.setAttribute('disabled', false));\n\n        }  \n\n        // below code only works for homepage\n        if ( CurrentPage == 'homepage') {\n\n          // if already in match, go straight to gameScreen\n          if ( ProcessCommandValues.MyMatch == 'Y' ) {\n\n            pushChairsToState({MatchState, setGameChairs});\n\n            try {\n              moveToGameScreen({setCurrentPage});\n              console.log('moved to gameScreen')\n            }\n            catch {\n              document.getElementById('adContent').style.height = 'calc( 100vh - 60px) ';\n              alert('Please enable ads and then refresh to continue!!');\n            }\n          \n            // clearInterval(interval);\n            // maybe add scoreboard and discarded cards too\n            // commandCalls([\"Register\", \"GetDeckCards\", \"GetCurrentPlayerHand\"], { CardDeck, setCardDeck, CurrentPlayerHand, setCurrentPlayerHand});\n            \n          }\n          else {\n\n            document.getElementById('gameDetails').style.display = \"block\";\n            document.getElementById('container').style.opacity = '0.5';\n          \n          }\n        }\n\n    }\n\n  }, [MatchState]);\n\n  React.useEffect(() => {\n\n    switch(clickedTileType) {\n      \n      case 'createTile'   : initializeOptions( 'createTile', { PossibleValues});\n                            break;\n      case 'tableTile'    : //for matchadmins initialization only once, else will interrupt changeMatch process\n                            if ( MatchState.MatchAdmin == 'Y' ) {\n                              if( flagAdminMSPopup == 1 ) {\n                                initializeOptions( 'tableTile', { PossibleValues, MatchState, setPopupOptions});\n                                flagAdminMSPopup = 0;\n                              }\n                            }\n                            else\n                              initializeOptions( 'tableTile', { PossibleValues, MatchState, setPopupOptions});\n                            break;\n      default             :\n    }\n\n  }, [PopupChairs]);\n\n  React.useEffect(() => {\n\n    checkPlaceBid();\n\n  }, [GameChairs])\n\n  React.useEffect(() => {\n    \n    document.getElementById('gameTablesContainer').style.display = 'none';\n    document.getElementById('gameScreenContainer').style.display = 'none';\n\n    console.log('current page check, now at ' + CurrentPage)\n\n    switch( CurrentPage ) {\n\n        case 'homepage'     :   \n                                document.getElementById('gameTablesContainer').style.display = 'block';\n                                break;\n        case 'gameScreen'   :   \n                                document.getElementById('gameScreenContainer').style.display = 'flex';\n\n                                // below code is to pull down the adContent space inside gameScreen, if \n                                // at initialization currentPage is 'gameScreen'\n                                // if ( ProcessCommandValues.CurrentPageTS == 'firstCall' )\n                                //   setTimeout(() => moveToGameScreen({setCurrentPage}), 500)\n\n                                break;\n        default             :\n\n    }\n\n  }, [CurrentPage]);\n\n\n\n  return (\n    <>\n      <Container className=\"App\" id=\"container\" background={Theme.ContainerBackground}>\n        <NavBar theme={Theme} states={{CurrentPage, setCurrentPage, SideNavItems, setSideNavItems, TableContent, setTableContent, PossibleValues, setPossibleValues, MatchState, setMatchState, GameChairs, setGameChairs, ProcessCommandValues, setProcessCommandValues, BiddingKeyboardValues, setBiddingKeyboardValues, CardDeck, setCardDeck, CurrentPlayerHand, setCurrentPlayerHand, MatchScoreboard, setMatchScoreboard, DiscardCards, setDiscardCards}} />\n        <Content theme={Theme} states={{CurrentPage, setCurrentPage, SideNavItems, setSideNavItems, TableContent, setTableContent, PossibleValues, setPossibleValues, MatchState, setMatchState, GameChairs, setGameChairs, ProcessCommandValues, setProcessCommandValues, BiddingKeyboardValues, setBiddingKeyboardValues, CardDeck, setCardDeck, CurrentPlayerHand, setCurrentPlayerHand, MatchScoreboard, setMatchScoreboard, DiscardCards, setDiscardCards}} handlers={{toggleSwitchHandler, gameTileClick}} />        \n        {/* <Footer /> */}\n      </Container>\n      <Popups>\n        <GameDetailsPopup states={{CurrentPage, setCurrentPage, PossibleValues, setPossibleValues, MatchState, setMatchState, PopupOptions, setPopupOptions, PopupChairs, setPopupChairs, GameChairs, setGameChairs, ProcessCommandValues, setProcessCommandValues}} handlers={{closeGameDetailsPopup, gameDetailsIconHandler}}/>\n        <ConfirmationPopup states={{CurrentPage, setCurrentPage, SideNavItems, setSideNavItems, TableContent, setTableContent, PossibleValues, setPossibleValues, MatchState, setMatchState, GameChairs, setGameChairs, ProcessCommandValues, setProcessCommandValues}} />\n      </Popups>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  min-width: 320px;\n  font-size: 4px;\n  width: 100vw;\n  height: 100vh;\n  // background-color: red;\n  background: ${props => props.background};\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: top;  \n\n  // opacity: 0.5;\n`\n\nconst Popups = styled.div`\n`\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}